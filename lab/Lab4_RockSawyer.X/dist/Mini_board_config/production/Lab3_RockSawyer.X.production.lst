

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 08 13:49:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataBANK0
    54   007E5A                     __pidataBANK0:
    55                           	callstack 0
    56                           
    57                           ;initializer for setDel@F2589
    58   007E5A  0000               	dw	0
    59   007E5C  00FC               	dw	252
    60   007E5E  00FA               	dw	250
    61   007E60  00F6               	dw	246
    62   007E62  00EE               	dw	238
    63   007E64  00DE               	dw	222
    64                           
    65                           ;initializer for setDel@F2587
    66   007E66  0000               	dw	0
    67   007E68  0002               	dw	2
    68   007E6A  0004               	dw	4
    69   007E6C  0008               	dw	8
    70   007E6E  0010               	dw	16
    71   007E70  0020               	dw	32
    72   000000                     _RCREG	set	4014
    73   000000                     _TXREG	set	4013
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ANSEL	set	3966
    76   000000                     _ANSELH	set	3967
    77   000000                     _TRISB	set	3987
    78   000000                     _RCSTAbits	set	4011
    79   000000                     _TXSTAbits	set	4012
    80   000000                     _SPBRG	set	4015
    81   000000                     _SPBRGH	set	4016
    82   000000                     _TRISC	set	3988
    83   000000                     _RCIF	set	31989
    84   000000                     _PORTB	set	3969
    85   000000                     _PORTC	set	3970
    86   000000                     _BAUDCONbits	set	4024
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   007E72                     __pcinit:
    92                           	callstack 0
    93   007E72                     start_initialization:
    94                           	callstack 0
    95   007E72                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Initialize objects allocated to BANK0 (24 bytes)
    99                           ; load TBLPTR registers with __pidataBANK0
   100   007E72  0E5A               	movlw	low __pidataBANK0
   101   007E74  6EF6               	movwf	tblptrl,c
   102   007E76  0E7E               	movlw	high __pidataBANK0
   103   007E78  6EF7               	movwf	tblptrh,c
   104   007E7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   105   007E7C  6EF8               	movwf	tblptru,c
   106   007E7E  EE00  F081         	lfsr	0,__pdataBANK0
   107   007E82  EE10 F018          	lfsr	1,24
   108   007E86                     copy_data0:
   109   007E86  0009               	tblrd		*+
   110   007E88  CFF5 FFEE          	movff	tablat,postinc0
   111   007E8C  50E5               	movf	postdec1,w,c
   112   007E8E  50E1               	movf	fsr1l,w,c
   113   007E90  E1FA               	bnz	copy_data0
   114   007E92                     end_of_initialization:
   115                           	callstack 0
   116   007E92                     __end_of__initialization:
   117                           	callstack 0
   118   007E92  0100               	movlb	0
   119   007E94  EF19  F03F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122   000081                     __pdataBANK0:
   123                           	callstack 0
   124   000081                     setDel@F2589:
   125                           	callstack 0
   126   000081                     	ds	12
   127   00008D                     setDel@F2587:
   128                           	callstack 0
   129   00008D                     	ds	12
   130                           
   131                           	psect	cstackBANK0
   132   000060                     __pcstackBANK0:
   133                           	callstack 0
   134   000060                     setDel@ligne:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138   000060                     	ds	2
   139   000062                     setDel@colonne:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143   000062                     	ds	2
   144   000064                     setDel@tableauLi:
   145                           	callstack 0
   146                           
   147                           ; 12 bytes @ 0x4
   148   000064                     	ds	12
   149   000070                     setDel@tableauCo:
   150                           	callstack 0
   151                           
   152                           ; 12 bytes @ 0x10
   153   000070                     	ds	12
   154   00007C                     ??_testMatrice:
   155                           
   156                           ; 1 bytes @ 0x1C
   157   00007C                     	ds	1
   158   00007D                     testMatrice@i:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x1D
   162   00007D                     	ds	2
   163   00007F                     testMatrice@j:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x1F
   167   00007F                     	ds	2
   168   000081                     
   169                           ; 1 bytes @ 0x21
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 43 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called: 2
   195 ;; This function calls:
   196 ;;		_initialisation
   197 ;;		_testMatrice
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text0
   204   007E32                     __ptext0:
   205                           	callstack 0
   206   007E32                     _main:
   207                           	callstack 29
   208   007E32                     
   209                           ;main.c: 45: initialisation();
   210   007E32  EC22  F03F         	call	_initialisation	;wreg free
   211   007E36                     
   212                           ;main.c: 46: testMatrice();
   213   007E36  EC77  F03F         	call	_testMatrice	;wreg free
   214   007E3A                     
   215                           ;main.c: 59: __nop();
   216   007E3A  F000               	nop	
   217   007E3C                     l23:
   218   007E3C  EF1E  F03F         	goto	l23
   219   007E40  EF00  F000         	goto	start
   220   007E44                     __end_of_main:
   221                           	callstack 0
   222                           
   223 ;; *************** function _testMatrice *****************
   224 ;; Defined at:
   225 ;;		line 152 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  j               2   31[BANK0 ] int 
   230 ;;  i               2   29[BANK0 ] int 
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   240 ;;      Params:         0       0       0       0       0       0       0
   241 ;;      Locals:         0       4       0       0       0       0       0
   242 ;;      Temps:          0       1       0       0       0       0       0
   243 ;;      Totals:         0       5       0       0       0       0       0
   244 ;;Total ram usage:        5 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		_setDel
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text1
   255   007EEE                     __ptext1:
   256                           	callstack 0
   257   007EEE                     _testMatrice:
   258                           	callstack 29
   259   007EEE                     
   260                           ;main.c: 154: for (int i = 1; i < 6; i++)
   261   007EEE  0E00               	movlw	0
   262   007EF0  0100               	movlb	0	; force () banked
   263   007EF2  6F7E               	movwf	(testMatrice@i+1)& (0+255),b
   264   007EF4  0E01               	movlw	1
   265   007EF6  6F7D               	movwf	testMatrice@i& (0+255),b
   266   007EF8                     
   267                           ; BSR set to: 0
   268   007EF8  0100               	movlb	0	; force () banked
   269   007EFA  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   270   007EFC  EF89  F03F         	goto	u161
   271   007F00  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   272   007F02  E109               	bnz	u160
   273   007F04  0E06               	movlw	6
   274   007F06  5D7D               	subwf	testMatrice@i& (0+255),w,b
   275   007F08  A0D8               	btfss	status,0,c
   276   007F0A  EF89  F03F         	goto	u161
   277   007F0E  EF8B  F03F         	goto	u160
   278   007F12                     u161:
   279   007F12  EF8D  F03F         	goto	l977
   280   007F16                     u160:
   281   007F16  EFFF  F03F         	goto	l44
   282   007F1A                     l977:
   283                           
   284                           ; BSR set to: 0
   285                           ;main.c: 155: {;main.c: 156: _delay((unsigned long)((300)*(1000000/4000.0)));
   286   007F1A  0E62               	movlw	98
   287   007F1C  0100               	movlb	0	; force () banked
   288   007F1E  6F7C               	movwf	??_testMatrice& (0+255),b
   289   007F20  0E65               	movlw	101
   290   007F22                     u227:
   291   007F22  2EE8               	decfsz	wreg,f,c
   292   007F24  D7FE               	bra	u227
   293   007F26  2F7C               	decfsz	??_testMatrice& (0+255),f,b
   294   007F28  D7FC               	bra	u227
   295   007F2A  F000 F000          	nop2	
   296   007F2E                     
   297                           ;main.c: 157: for (int j = 1; j < 6; j++)
   298   007F2E  0E00               	movlw	0
   299   007F30  0100               	movlb	0	; force () banked
   300   007F32  6F80               	movwf	(testMatrice@j+1)& (0+255),b
   301   007F34  0E01               	movlw	1
   302   007F36  6F7F               	movwf	testMatrice@j& (0+255),b
   303   007F38                     
   304                           ; BSR set to: 0
   305   007F38  0100               	movlb	0	; force () banked
   306   007F3A  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   307   007F3C  EFA9  F03F         	goto	u171
   308   007F40  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   309   007F42  E109               	bnz	u170
   310   007F44  0E06               	movlw	6
   311   007F46  5D7F               	subwf	testMatrice@j& (0+255),w,b
   312   007F48  A0D8               	btfss	status,0,c
   313   007F4A  EFA9  F03F         	goto	u171
   314   007F4E  EFAB  F03F         	goto	u170
   315   007F52                     u171:
   316   007F52  EFAD  F03F         	goto	l985
   317   007F56                     u170:
   318   007F56  EFED  F03F         	goto	l999
   319   007F5A                     l985:
   320                           
   321                           ; BSR set to: 0
   322                           ;main.c: 158: {;main.c: 159: setDel(i,j);
   323   007F5A  C07D  F060         	movff	testMatrice@i,setDel@ligne
   324   007F5E  C07E  F061         	movff	testMatrice@i+1,setDel@ligne+1
   325   007F62  C07F  F062         	movff	testMatrice@j,setDel@colonne
   326   007F66  C080  F063         	movff	testMatrice@j+1,setDel@colonne+1
   327   007F6A  EC4C  F03F         	call	_setDel	;wreg free
   328   007F6E                     
   329                           ;main.c: 160: _delay((unsigned long)((300)*(1000000/4000.0)));
   330   007F6E  0E62               	movlw	98
   331   007F70  0100               	movlb	0	; force () banked
   332   007F72  6F7C               	movwf	??_testMatrice& (0+255),b
   333   007F74  0E65               	movlw	101
   334   007F76                     u237:
   335   007F76  2EE8               	decfsz	wreg,f,c
   336   007F78  D7FE               	bra	u237
   337   007F7A  2F7C               	decfsz	??_testMatrice& (0+255),f,b
   338   007F7C  D7FC               	bra	u237
   339   007F7E  F000 F000          	nop2	
   340   007F82                     
   341                           ;main.c: 161: if(i == 6 && j == 6)
   342   007F82  0E06               	movlw	6
   343   007F84  0100               	movlb	0	; force () banked
   344   007F86  197D               	xorwf	testMatrice@i& (0+255),w,b
   345   007F88  117E               	iorwf	(testMatrice@i+1)& (0+255),w,b
   346   007F8A  A4D8               	btfss	status,2,c
   347   007F8C  EFCA  F03F         	goto	u181
   348   007F90  EFCC  F03F         	goto	u180
   349   007F94                     u181:
   350   007F94  EFDB  F03F         	goto	l995
   351   007F98                     u180:
   352   007F98                     
   353                           ; BSR set to: 0
   354   007F98  0E06               	movlw	6
   355   007F9A  0100               	movlb	0	; force () banked
   356   007F9C  197F               	xorwf	testMatrice@j& (0+255),w,b
   357   007F9E  1180               	iorwf	(testMatrice@j+1)& (0+255),w,b
   358   007FA0  A4D8               	btfss	status,2,c
   359   007FA2  EFD5  F03F         	goto	u191
   360   007FA6  EFD7  F03F         	goto	u190
   361   007FAA                     u191:
   362   007FAA  EFDB  F03F         	goto	l995
   363   007FAE                     u190:
   364   007FAE                     
   365                           ; BSR set to: 0
   366                           ;main.c: 162: {;main.c: 163: PORTB = 0b00000000;
   367   007FAE  0E00               	movlw	0
   368   007FB0  6E81               	movwf	129,c	;volatile
   369                           
   370                           ;main.c: 164: PORTC = 0b11111110;
   371   007FB2  0EFE               	movlw	254
   372   007FB4  6E82               	movwf	130,c	;volatile
   373   007FB6                     l995:
   374                           
   375                           ; BSR set to: 0
   376   007FB6  0100               	movlb	0	; force () banked
   377   007FB8  4B7F               	infsnz	testMatrice@j& (0+255),f,b
   378   007FBA  2B80               	incf	(testMatrice@j+1)& (0+255),f,b
   379   007FBC                     
   380                           ; BSR set to: 0
   381   007FBC  0100               	movlb	0	; force () banked
   382   007FBE  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   383   007FC0  EFEB  F03F         	goto	u201
   384   007FC4  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   385   007FC6  E109               	bnz	u200
   386   007FC8  0E06               	movlw	6
   387   007FCA  5D7F               	subwf	testMatrice@j& (0+255),w,b
   388   007FCC  A0D8               	btfss	status,0,c
   389   007FCE  EFEB  F03F         	goto	u201
   390   007FD2  EFED  F03F         	goto	u200
   391   007FD6                     u201:
   392   007FD6  EFAD  F03F         	goto	l985
   393   007FDA                     u200:
   394   007FDA                     l999:
   395                           
   396                           ; BSR set to: 0
   397   007FDA  0100               	movlb	0	; force () banked
   398   007FDC  4B7D               	infsnz	testMatrice@i& (0+255),f,b
   399   007FDE  2B7E               	incf	(testMatrice@i+1)& (0+255),f,b
   400   007FE0                     
   401                           ; BSR set to: 0
   402   007FE0  0100               	movlb	0	; force () banked
   403   007FE2  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   404   007FE4  EFFD  F03F         	goto	u211
   405   007FE8  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   406   007FEA  E109               	bnz	u210
   407   007FEC  0E06               	movlw	6
   408   007FEE  5D7D               	subwf	testMatrice@i& (0+255),w,b
   409   007FF0  A0D8               	btfss	status,0,c
   410   007FF2  EFFD  F03F         	goto	u211
   411   007FF6  EFFF  F03F         	goto	u210
   412   007FFA                     u211:
   413   007FFA  EF8D  F03F         	goto	l977
   414   007FFE                     u210:
   415   007FFE                     l44:
   416                           
   417                           ; BSR set to: 0
   418   007FFE  0012               	return		;funcret
   419   008000                     __end_of_testMatrice:
   420                           	callstack 0
   421                           
   422 ;; *************** function _setDel *****************
   423 ;; Defined at:
   424 ;;		line 131 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  ligne           2    0[BANK0 ] int 
   427 ;;  colonne         2    2[BANK0 ] int 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  tableauCo      12   16[BANK0 ] int [6]
   430 ;;  tableauLi      12    4[BANK0 ] int [6]
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   440 ;;      Params:         0       4       0       0       0       0       0
   441 ;;      Locals:         0      24       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0
   443 ;;      Totals:         0      28       0       0       0       0       0
   444 ;;Total ram usage:       28 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_testMatrice
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454   007E98                     __ptext2:
   455                           	callstack 0
   456   007E98                     _setDel:
   457                           	callstack 29
   458   007E98                     
   459                           ;main.c: 135: int tableauLi[6] = {0, 0b10, 0b100, 0b1000, 0b10000, 0b100000};
   460   007E98  EE20  F08D         	lfsr	2,setDel@F2587
   461   007E9C  EE10  F064         	lfsr	1,setDel@tableauLi
   462   007EA0  0E0B               	movlw	11
   463   007EA2                     u141:
   464   007EA2  CFDB FFE3          	movff	plusw2,plusw1
   465   007EA6  06E8               	decf	wreg,f,c
   466   007EA8  E2FC               	bc	u141
   467                           
   468                           ;main.c: 136: int tableauCo[6] = {0,0b11111100, 0b11111010, 0b11110110, 0b11101110, 0b11
      +                          011110};
   469   007EAA  EE20  F081         	lfsr	2,setDel@F2589
   470   007EAE  EE10  F070         	lfsr	1,setDel@tableauCo
   471   007EB2  0E0B               	movlw	11
   472   007EB4                     u151:
   473   007EB4  CFDB FFE3          	movff	plusw2,plusw1
   474   007EB8  06E8               	decf	wreg,f,c
   475   007EBA  E2FC               	bc	u151
   476   007EBC                     
   477                           ;main.c: 140: PORTB = tableauLi[ligne];
   478   007EBC  90D8               	bcf	status,0,c
   479   007EBE  0100               	movlb	0	; force () banked
   480   007EC0  3560               	rlcf	setDel@ligne& (0+255),w,b
   481   007EC2  6ED9               	movwf	fsr2l,c
   482   007EC4  3561               	rlcf	(setDel@ligne+1)& (0+255),w,b
   483   007EC6  6EDA               	movwf	fsr2h,c
   484   007EC8  0E64               	movlw	low setDel@tableauLi
   485   007ECA  26D9               	addwf	fsr2l,f,c
   486   007ECC  0E00               	movlw	high setDel@tableauLi
   487   007ECE  22DA               	addwfc	fsr2h,f,c
   488   007ED0  50DF               	movf	indf2,w,c
   489   007ED2  6E81               	movwf	129,c	;volatile
   490   007ED4                     
   491                           ; BSR set to: 0
   492                           ;main.c: 141: PORTC = tableauCo[colonne];
   493   007ED4  90D8               	bcf	status,0,c
   494   007ED6  0100               	movlb	0	; force () banked
   495   007ED8  3562               	rlcf	setDel@colonne& (0+255),w,b
   496   007EDA  6ED9               	movwf	fsr2l,c
   497   007EDC  3563               	rlcf	(setDel@colonne+1)& (0+255),w,b
   498   007EDE  6EDA               	movwf	fsr2h,c
   499   007EE0  0E70               	movlw	low setDel@tableauCo
   500   007EE2  26D9               	addwf	fsr2l,f,c
   501   007EE4  0E00               	movlw	high setDel@tableauCo
   502   007EE6  22DA               	addwfc	fsr2h,f,c
   503   007EE8  50DF               	movf	indf2,w,c
   504   007EEA  6E82               	movwf	130,c	;volatile
   505   007EEC                     
   506                           ; BSR set to: 0
   507   007EEC  0012               	return		;funcret
   508   007EEE                     __end_of_setDel:
   509                           	callstack 0
   510                           
   511 ;; *************** function _initialisation *****************
   512 ;; Defined at:
   513 ;;		line 96 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         0       0       0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text3
   541   007E44                     __ptext3:
   542                           	callstack 0
   543   007E44                     _initialisation:
   544                           	callstack 30
   545   007E44                     
   546                           ;main.c: 98: TRISB = 0;
   547   007E44  0E00               	movlw	0
   548   007E46  6E93               	movwf	147,c	;volatile
   549                           
   550                           ;main.c: 99: TRISC = 0;
   551   007E48  0E00               	movlw	0
   552   007E4A  6E94               	movwf	148,c	;volatile
   553                           
   554                           ;main.c: 102: ANSELH = 0;
   555   007E4C  0E00               	movlw	0
   556   007E4E  6E7F               	movwf	127,c	;volatile
   557                           
   558                           ;main.c: 105: PORTB = 0;
   559   007E50  0E00               	movlw	0
   560   007E52  6E81               	movwf	129,c	;volatile
   561                           
   562                           ;main.c: 106: PORTC = 1;
   563   007E54  0E01               	movlw	1
   564   007E56  6E82               	movwf	130,c	;volatile
   565   007E58  0012               	return		;funcret
   566   007E5A                     __end_of_initialisation:
   567                           	callstack 0
   568   000000                     
   569                           	psect	param0
   570   000000                     
   571                           	psect	idloc
   572                           
   573                           ;Config register IDLOC0 @ 0x200000
   574                           ;	unspecified, using default values
   575   200000                     	org	2097152
   576   200000  FF                 	db	255
   577                           
   578                           ;Config register IDLOC1 @ 0x200001
   579                           ;	unspecified, using default values
   580   200001                     	org	2097153
   581   200001  FF                 	db	255
   582                           
   583                           ;Config register IDLOC2 @ 0x200002
   584                           ;	unspecified, using default values
   585   200002                     	org	2097154
   586   200002  FF                 	db	255
   587                           
   588                           ;Config register IDLOC3 @ 0x200003
   589                           ;	unspecified, using default values
   590   200003                     	org	2097155
   591   200003  FF                 	db	255
   592                           
   593                           ;Config register IDLOC4 @ 0x200004
   594                           ;	unspecified, using default values
   595   200004                     	org	2097156
   596   200004  FF                 	db	255
   597                           
   598                           ;Config register IDLOC5 @ 0x200005
   599                           ;	unspecified, using default values
   600   200005                     	org	2097157
   601   200005  FF                 	db	255
   602                           
   603                           ;Config register IDLOC6 @ 0x200006
   604                           ;	unspecified, using default values
   605   200006                     	org	2097158
   606   200006  FF                 	db	255
   607                           
   608                           ;Config register IDLOC7 @ 0x200007
   609                           ;	unspecified, using default values
   610   200007                     	org	2097159
   611   200007  FF                 	db	255
   612                           
   613                           	psect	config
   614                           
   615                           ; Padding undefined space
   616   300000                     	org	3145728
   617   300000  FF                 	db	255
   618                           
   619                           ;Config register CONFIG1H @ 0x300001
   620                           ;	Oscillator Selection bits
   621                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   622                           ;	Fail-Safe Clock Monitor Enable bit
   623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   624                           ;	Internal/External Oscillator Switchover bit
   625                           ;	IESO = OFF, Oscillator Switchover mode disabled
   626   300001                     	org	3145729
   627   300001  08                 	db	8
   628                           
   629                           ;Config register CONFIG2L @ 0x300002
   630                           ;	Power-up Timer Enable bit
   631                           ;	PWRTEN = OFF, PWRT disabled
   632                           ;	Brown-out Reset Enable bits
   633                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   634                           ;	Brown Out Reset Voltage bits
   635                           ;	BORV = 18, VBOR set to 1.8 V nominal
   636   300002                     	org	3145730
   637   300002  1F                 	db	31
   638                           
   639                           ;Config register CONFIG2H @ 0x300003
   640                           ;	Watchdog Timer Enable bit
   641                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   642                           ;	Watchdog Timer Postscale Select bits
   643                           ;	WDTPS = 32768, 1:32768
   644   300003                     	org	3145731
   645   300003  1E                 	db	30
   646                           
   647                           ; Padding undefined space
   648   300004                     	org	3145732
   649   300004  FF                 	db	255
   650                           
   651                           ;Config register CONFIG3H @ 0x300005
   652                           ;	CCP2 MUX bit
   653                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   654                           ;	PORTB A/D Enable bit
   655                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   656                           ;	Low-Power Timer1 Oscillator Enable bit
   657                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   658                           ;	HFINTOSC Fast Start-up
   659                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   660                           ;	MCLR Pin Enable bit
   661                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   662   300005                     	org	3145733
   663   300005  8B                 	db	139
   664                           
   665                           ;Config register CONFIG4L @ 0x300006
   666                           ;	Stack Full/Underflow Reset Enable bit
   667                           ;	STVREN = ON, Stack full/underflow will cause Reset
   668                           ;	Single-Supply ICSP Enable bit
   669                           ;	LVP = OFF, Single-Supply ICSP disabled
   670                           ;	Extended Instruction Set Enable bit
   671                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   672                           ;	Background Debugger Enable bit
   673                           ;	DEBUG = 0x1, unprogrammed default
   674   300006                     	org	3145734
   675   300006  81                 	db	129
   676                           
   677                           ; Padding undefined space
   678   300007                     	org	3145735
   679   300007  FF                 	db	255
   680                           
   681                           ;Config register CONFIG5L @ 0x300008
   682                           ;	Code Protection Block 0
   683                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   684                           ;	Code Protection Block 1
   685                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   686                           ;	Code Protection Block 2
   687                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   688                           ;	Code Protection Block 3
   689                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   690   300008                     	org	3145736
   691   300008  0F                 	db	15
   692                           
   693                           ;Config register CONFIG5H @ 0x300009
   694                           ;	Boot Block Code Protection bit
   695                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   696                           ;	Data EEPROM Code Protection bit
   697                           ;	CPD = OFF, Data EEPROM not code-protected
   698   300009                     	org	3145737
   699   300009  C0                 	db	192
   700                           
   701                           ;Config register CONFIG6L @ 0x30000A
   702                           ;	Write Protection Block 0
   703                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   704                           ;	Write Protection Block 1
   705                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   706                           ;	Write Protection Block 2
   707                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   708                           ;	Write Protection Block 3
   709                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   710   30000A                     	org	3145738
   711   30000A  0F                 	db	15
   712                           
   713                           ;Config register CONFIG6H @ 0x30000B
   714                           ;	Configuration Register Write Protection bit
   715                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   716                           ;	Boot Block Write Protection bit
   717                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   718                           ;	Data EEPROM Write Protection bit
   719                           ;	WRTD = OFF, Data EEPROM not write-protected
   720   30000B                     	org	3145739
   721   30000B  E0                 	db	224
   722                           
   723                           ;Config register CONFIG7L @ 0x30000C
   724                           ;	Table Read Protection Block 0
   725                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   726                           ;	Table Read Protection Block 1
   727                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   728                           ;	Table Read Protection Block 2
   729                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   730                           ;	Table Read Protection Block 3
   731                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   732   30000C                     	org	3145740
   733   30000C  0F                 	db	15
   734                           
   735                           ;Config register CONFIG7H @ 0x30000D
   736                           ;	Boot Block Table Read Protection bit
   737                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   738   30000D                     	org	3145741
   739   30000D  40                 	db	64
   740                           tosu	equ	0xFFF
   741                           tosh	equ	0xFFE
   742                           tosl	equ	0xFFD
   743                           stkptr	equ	0xFFC
   744                           pclatu	equ	0xFFB
   745                           pclath	equ	0xFFA
   746                           pcl	equ	0xFF9
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           prodh	equ	0xFF4
   752                           prodl	equ	0xFF3
   753                           indf0	equ	0xFEF
   754                           postinc0	equ	0xFEE
   755                           postdec0	equ	0xFED
   756                           preinc0	equ	0xFEC
   757                           plusw0	equ	0xFEB
   758                           fsr0h	equ	0xFEA
   759                           fsr0l	equ	0xFE9
   760                           wreg	equ	0xFE8
   761                           indf1	equ	0xFE7
   762                           postinc1	equ	0xFE6
   763                           postdec1	equ	0xFE5
   764                           preinc1	equ	0xFE4
   765                           plusw1	equ	0xFE3
   766                           fsr1h	equ	0xFE2
   767                           fsr1l	equ	0xFE1
   768                           bsr	equ	0xFE0
   769                           indf2	equ	0xFDF
   770                           postinc2	equ	0xFDE
   771                           postdec2	equ	0xFDD
   772                           preinc2	equ	0xFDC
   773                           plusw2	equ	0xFDB
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     33      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_testMatrice
    _testMatrice->_setDel

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     424
                     _initialisation
                        _testMatrice
 ---------------------------------------------------------------------------------
 (1) _testMatrice                                          5     5      0     424
                                             28 BANK0      5     5      0
                             _setDel
 ---------------------------------------------------------------------------------
 (2) _setDel                                              28    24      4     244
                                              0 BANK0     28    24      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _testMatrice
     _setDel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhh        47      0       0      16        0.0%
BITBIGSFRll         1E      0       0      22        0.0%
BITBIGSFRlhh        10      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      18        0.0%
BITBIGSFRhlll        9      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      23        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 08 13:49:33 2023

                     l23 7E3C                       l24 7E3C                       l36 7EEC  
                     l44 7FFE                       l29 7E58                      l971 7EEE  
                    l885 7E44                      l965 7E98                      l981 7F38  
                    l973 7EF8                      l967 7EBC                      l991 7F98  
                    l969 7ED4                      l993 7FAE                      l985 7F5A  
                    l977 7F1A                      l995 7FB6                      l987 7F6E  
                    l979 7F2E                      l997 7FBC                      l989 7F82  
                    l999 7FDA                      u200 7FDA                      u201 7FD6  
                    u210 7FFE                      u211 7FFA                      u141 7EA2  
                    u151 7EB4                      u160 7F16                      u161 7F12  
                    u170 7F56                      u171 7F52                      u227 7F22  
                    u180 7F98                      u181 7F94                      u237 7F76  
                    u190 7FAE                      u191 7FAA                      wreg 0FE8  
                   l1001 7FE0                     l1003 7E32                     l1005 7E36  
                   l1007 7E3A                     _RCIF 7CF5         ??_initialisation 0060  
                   _main 7E32                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ?_main 0060                    _ANSEL 0F7E  
                  _RCREG 0FAE                    _SPBRG 0FAF                    _PORTB 0F81  
                  _PORTC 0F82                    _TRISB 0F93                    _TRISC 0F94  
                  _TXREG 0FAD                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    status 0FD8          __initialization 7E72  
           __end_of_main 7E44                   ??_main 0081            __activetblptr 0003  
          setDel@colonne 0062                   _ANSELH 0F7F                   _SPBRGH 0FB0  
                 _setDel 7E98                   isa$std 0001             ?_testMatrice 0060  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7E92            ___rparam_used 0000  
            setDel@F2587 008D              setDel@F2589 0081             __pidataBANK0 7E5A  
            setDel@ligne 0060                  ?_setDel 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E72                  __ramtop 0600  
                __ptext0 7E32                  __ptext1 7EEE                  __ptext2 7E98  
                __ptext3 7E44     end_of_initialization 7E92                _RCSTAbits 0FAB  
                postdec1 0FE5                  postinc0 0FEE                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8           __end_of_setDel 7EEE  
    start_initialization 7E72              __pdataBANK0 0081                 ??_setDel 0064  
          __pcstackBANK0 0060          setDel@tableauCo 0070          setDel@tableauLi 0064  
         _initialisation 7E44   __end_of_initialisation 7E5A            ??_testMatrice 007C  
              copy_data0 7E86                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060      __end_of_testMatrice 8000                 isa$xinst 0000  
            _testMatrice 7EEE             testMatrice@i 007D             testMatrice@j 007F  
