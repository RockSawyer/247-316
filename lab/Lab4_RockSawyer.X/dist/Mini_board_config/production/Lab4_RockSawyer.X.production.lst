

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 08 12:47:17 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1,minocg
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1,minocg
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 21/07/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataBANK0
    77   0078D7                     __pidataBANK0:
    78                           	callstack 0
    79                           
    80                           ;initializer for main@F2866
    81   0078D7  70                 	db	112
    82   0078D8  6F                 	db	111
    83   0078D9  72                 	db	114
    84   0078DA  74                 	db	116
    85   0078DB  61                 	db	97
    86   0078DC  62                 	db	98
    87   0078DD  6C                 	db	108
    88   0078DE  65                 	db	101
    89   0078DF  00                 	db	0
    90   0078E0  00                 	db	0
    91   0078E1  00                 	db	0
    92   0078E2  00                 	db	0
    93   0078E3  00                 	db	0
    94   0078E4  00                 	db	0
    95   0078E5  00                 	db	0
    96   0078E6  32                 	db	50
    97   0078E7  65                 	db	101
    98   0078E8  4D                 	db	77
    99   0078E9  6F                 	db	111
   100   0078EA  74                 	db	116
   101   0078EB  00                 	db	0
   102   0078EC  00                 	db	0
   103   0078ED  00                 	db	0
   104   0078EE  00                 	db	0
   105   0078EF  00                 	db	0
   106   0078F0  00                 	db	0
   107   0078F1  00                 	db	0
   108   0078F2  00                 	db	0
   109   0078F3  00                 	db	0
   110   0078F4  00                 	db	0
   111   0078F5  33                 	db	51
   112   0078F6  65                 	db	101
   113   0078F7  4D                 	db	77
   114   0078F8  6F                 	db	111
   115   0078F9  74                 	db	116
   116   0078FA  00                 	db	0
   117   0078FB  00                 	db	0
   118   0078FC  00                 	db	0
   119   0078FD  00                 	db	0
   120   0078FE  00                 	db	0
   121   0078FF  00                 	db	0
   122   007900  00                 	db	0
   123   007901  00                 	db	0
   124   007902  00                 	db	0
   125   007903  00                 	db	0
   126                           
   127                           ;initializer for _randx
   128   007904  0001               	dw	1
   129   007906  0000               	dw	0
   130                           
   131                           	psect	idataBANK1
   132   007976                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for _matCGRAM
   136   007976  08                 	db	8
   137   007977  04                 	db	4
   138   007978  04                 	db	4
   139   007979  0A                 	db	10
   140   00797A  11                 	db	17
   141   00797B  1F                 	db	31
   142   00797C  11                 	db	17
   143   00797D  00                 	db	0
   144   00797E  02                 	db	2
   145   00797F  04                 	db	4
   146   007980  0E                 	db	14
   147   007981  11                 	db	17
   148   007982  1F                 	db	31
   149   007983  10                 	db	16
   150   007984  0E                 	db	14
   151   007985  00                 	db	0
   152   007986  02                 	db	2
   153   007987  04                 	db	4
   154   007988  1F                 	db	31
   155   007989  10                 	db	16
   156   00798A  1E                 	db	30
   157   00798B  10                 	db	16
   158   00798C  1F                 	db	31
   159   00798D  00                 	db	0
   160   00798E  08                 	db	8
   161   00798F  04                 	db	4
   162   007990  0E                 	db	14
   163   007991  11                 	db	17
   164   007992  1F                 	db	31
   165   007993  10                 	db	16
   166   007994  0E                 	db	14
   167   007995  00                 	db	0
   168   007996  08                 	db	8
   169   007997  04                 	db	4
   170   007998  1F                 	db	31
   171   007999  10                 	db	16
   172   00799A  1E                 	db	30
   173   00799B  10                 	db	16
   174   00799C  1F                 	db	31
   175   00799D  00                 	db	0
   176   00799E  04                 	db	4
   177   00799F  0A                 	db	10
   178   0079A0  0E                 	db	14
   179   0079A1  11                 	db	17
   180   0079A2  1F                 	db	31
   181   0079A3  10                 	db	16
   182   0079A4  0E                 	db	14
   183   0079A5  00                 	db	0
   184   0079A6  08                 	db	8
   185   0079A7  04                 	db	4
   186   0079A8  0E                 	db	14
   187   0079A9  01                 	db	1
   188   0079AA  0F                 	db	15
   189   0079AB  11                 	db	17
   190   0079AC  0F                 	db	15
   191   0079AD  00                 	db	0
   192   0079AE  04                 	db	4
   193   0079AF  0A                 	db	10
   194   0079B0  0E                 	db	14
   195   0079B1  01                 	db	1
   196   0079B2  0F                 	db	15
   197   0079B3  11                 	db	17
   198   0079B4  0F                 	db	15
   199   0079B5  00                 	db	0
   200   000000                     _RCREG	set	4014
   201   000000                     _TXREG	set	4013
   202   000000                     _ANSEL	set	3966
   203   000000                     _TRISA	set	3986
   204   000000                     _TRISD	set	3989
   205   000000                     _RCSTAbits	set	4011
   206   000000                     _TXSTAbits	set	4012
   207   000000                     _SPBRG	set	4015
   208   000000                     _SPBRGH	set	4016
   209   000000                     _TRISCbits	set	3988
   210   000000                     _TRISB	set	3987
   211   000000                     _RCIF	set	31989
   212   000000                     _PORTAbits	set	3968
   213   000000                     _PORTD	set	3971
   214   000000                     _BAUDCONbits	set	4024
   215                           
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219   0079F8                     __pcinit:
   220                           	callstack 0
   221   0079F8                     start_initialization:
   222                           	callstack 0
   223   0079F8                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228   0079F8  0E76               	movlw	low __pidataBANK1
   229   0079FA  6EF6               	movwf	tblptrl,c
   230   0079FC  0E79               	movlw	high __pidataBANK1
   231   0079FE  6EF7               	movwf	tblptrh,c
   232   007A00  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233   007A02  6EF8               	movwf	tblptru,c
   234   007A04  EE01  F0AC         	lfsr	0,__pdataBANK1
   235   007A08  EE10 F040          	lfsr	1,64
   236   007A0C                     copy_data0:
   237   007A0C  0009               	tblrd		*+
   238   007A0E  CFF5 FFEE          	movff	tablat,postinc0
   239   007A12  50E5               	movf	postdec1,w,c
   240   007A14  50E1               	movf	fsr1l,w,c
   241   007A16  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (49 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245   007A18  0ED7               	movlw	low __pidataBANK0
   246   007A1A  6EF6               	movwf	tblptrl,c
   247   007A1C  0E78               	movlw	high __pidataBANK0
   248   007A1E  6EF7               	movwf	tblptrh,c
   249   007A20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250   007A22  6EF8               	movwf	tblptru,c
   251   007A24  EE00  F0A9         	lfsr	0,__pdataBANK0
   252   007A28  EE10 F031          	lfsr	1,49
   253   007A2C                     copy_data1:
   254   007A2C  0009               	tblrd		*+
   255   007A2E  CFF5 FFEE          	movff	tablat,postinc0
   256   007A32  50E5               	movf	postdec1,w,c
   257   007A34  50E1               	movf	fsr1l,w,c
   258   007A36  E1FA               	bnz	copy_data1
   259   007A38                     end_of_initialization:
   260                           	callstack 0
   261   007A38                     __end_of__initialization:
   262                           	callstack 0
   263   007A38  0100               	movlb	0
   264   007A3A  EF53  F03C         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	dataBANK0
   267   0000A9                     __pdataBANK0:
   268                           	callstack 0
   269   0000A9                     main@F2866:
   270                           	callstack 0
   271   0000A9                     	ds	45
   272   0000D6                     _randx:
   273                           	callstack 0
   274   0000D6                     	ds	4
   275                           
   276                           	psect	dataBANK1
   277   0001AC                     __pdataBANK1:
   278                           	callstack 0
   279   0001AC                     _matCGRAM:
   280                           	callstack 0
   281   0001AC                     	ds	64
   282                           
   283                           	psect	cstackBANK1
   284   000100                     __pcstackBANK1:
   285                           	callstack 0
   286   000100                     afficheMelange@oqp:
   287                           	callstack 0
   288                           
   289                           ; 160 bytes @ 0x0
   290   000100                     	ds	160
   291   0001A0                     afficheMelange@ligne:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xA0
   295   0001A0                     	ds	2
   296   0001A2                     afficheMelange@colonne:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xA2
   300   0001A2                     	ds	2
   301   0001A4                     afficheMelange@lgMot:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xA4
   305   0001A4                     	ds	1
   306   0001A5                     afficheMelange@lettre:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xA5
   310   0001A5                     	ds	1
   311   0001A6                     afficheMelange@i_114:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xA6
   315   0001A6                     	ds	2
   316   0001A8                     afficheMelange@i:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xA8
   320   0001A8                     	ds	2
   321   0001AA                     afficheMelange@j:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0xAA
   325   0001AA                     	ds	2
   326                           
   327                           	psect	cstackBANK0
   328   000060                     __pcstackBANK0:
   329                           	callstack 0
   330   000060                     ??_lcd_ecrireDonnees:
   331   000060                     ??_lcd_busy:
   332   000060                     ?_strlen:
   333                           	callstack 0
   334   000060                     ?___wmul:
   335                           	callstack 0
   336   000060                     ?___lmul:
   337                           	callstack 0
   338   000060                     getch@c:
   339                           	callstack 0
   340   000060                     ___wmul@multiplier:
   341                           	callstack 0
   342   000060                     strlen@s:
   343                           	callstack 0
   344   000060                     ___lmul@multiplier:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0x0
   348   000060                     	ds	1
   349   000061                     lcd_ecrireDonnees@donnee:
   350                           	callstack 0
   351   000061                     lcd_busy@adresse:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1
   355   000061                     	ds	1
   356   000062                     ??_lcd_resetSequence:
   357   000062                     lcd_wrCom@commande:
   358                           	callstack 0
   359   000062                     lcd_wrData@caractere:
   360                           	callstack 0
   361   000062                     ___wmul@multiplicand:
   362                           	callstack 0
   363   000062                     strlen@cp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000062                     	ds	1
   368   000063                     ??_lcd_initCGRam:
   369   000063                     lcd_gotoXY@y:
   370                           	callstack 0
   371   000063                     lcd_ecritChar@car:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375   000063                     	ds	1
   376   000064                     lcd_gotoXY@x:
   377                           	callstack 0
   378   000064                     lcd_ecritChar@posRam:
   379                           	callstack 0
   380   000064                     ___wmul@product:
   381                           	callstack 0
   382   000064                     ___lmul@multiplicand:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x4
   386   000064                     	ds	1
   387   000065                     lcd_initCGRam@i:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x5
   391   000065                     	ds	1
   392   000066                     lcd_initCGRam@j:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x6
   396   000066                     	ds	1
   397   000067                     
   398                           ; 1 bytes @ 0x7
   399   000067                     	ds	1
   400   000068                     ___lmul@product:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x8
   404   000068                     	ds	4
   405   00006C                     ?_rand:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xC
   409   00006C                     	ds	2
   410   00006E                     ?___awmod:
   411                           	callstack 0
   412   00006E                     ___awmod@dividend:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xE
   416   00006E                     	ds	2
   417   000070                     ___awmod@divisor:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x10
   421   000070                     	ds	2
   422   000072                     ___awmod@counter:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x12
   426   000072                     	ds	1
   427   000073                     ___awmod@sign:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x13
   431   000073                     	ds	1
   432   000074                     afficheMelange@mot:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x14
   436   000074                     	ds	2
   437   000076                     ??_afficheMelange:
   438                           
   439                           ; 1 bytes @ 0x16
   440   000076                     	ds	3
   441   000079                     joueCharivari@mot:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x19
   445   000079                     	ds	2
   446   00007B                     joueCharivari@c:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x1B
   450   00007B                     	ds	1
   451   00007C                     main@messages:
   452                           	callstack 0
   453                           
   454                           ; 45 bytes @ 0x1C
   455   00007C                     	ds	45
   456                           
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 31 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;  messages       45   28[BANK0 ] unsigned char [15][3]
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 0/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   476 ;;      Params:         0       0       0       0       0       0       0
   477 ;;      Locals:         0      45       0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0       0       0
   479 ;;      Totals:         0      45       0       0       0       0       0
   480 ;;Total ram usage:       45 bytes
   481 ;; Hardware stack levels required when called: 6
   482 ;; This function calls:
   483 ;;		_init_serie
   484 ;;		_initialisation
   485 ;;		_joueCharivari
   486 ;;		_lcd_init
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493   0078A6                     __ptext0:
   494                           	callstack 0
   495   0078A6                     _main:
   496                           	callstack 25
   497   0078A6                     
   498                           ;main.c: 33: char messages[3][15] = {"portable","2eMot","3eMot"};
   499   0078A6  EE20  F0A9         	lfsr	2,main@F2866
   500   0078AA  EE10  F07C         	lfsr	1,main@messages
   501   0078AE  0E2C               	movlw	44
   502   0078B0                     u671:
   503   0078B0  CFDB FFE3          	movff	plusw2,plusw1
   504   0078B4  06E8               	decf	wreg,f,c
   505   0078B6  E2FC               	bc	u671
   506   0078B8                     
   507                           ;main.c: 34: initialisation();
   508   0078B8  ECEF  F03B         	call	_initialisation	;wreg free
   509   0078BC                     
   510                           ;main.c: 35: lcd_init();
   511   0078BC  EC3F  F03C         	call	_lcd_init	;wreg free
   512   0078C0                     
   513                           ;main.c: 36: init_serie();
   514   0078C0  EC1C  F03C         	call	_init_serie	;wreg free
   515   0078C4                     
   516                           ;main.c: 40: joueCharivari(messages[0]);
   517   0078C4  0E7C               	movlw	low main@messages
   518   0078C6  0100               	movlb	0	; force () banked
   519   0078C8  6F79               	movwf	joueCharivari@mot& (0+255),b
   520   0078CA  0E00               	movlw	high main@messages
   521   0078CC  6F7A               	movwf	(joueCharivari@mot+1)& (0+255),b
   522   0078CE  EC1F  F03D         	call	_joueCharivari	;wreg free
   523   0078D2  EF00  F000         	goto	start
   524   0078D6                     __end_of_main:
   525                           	callstack 0
   526                           
   527 ;; *************** function _lcd_init *****************
   528 ;; Defined at:
   529 ;;		line 258 in file "Lcd4Lignes.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   543 ;;      Params:         0       0       0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0
   545 ;;      Temps:          0       0       0       0       0       0       0
   546 ;;      Totals:         0       0       0       0       0       0       0
   547 ;;Total ram usage:        0 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 5
   550 ;; This function calls:
   551 ;;		_lcd_initCGRam
   552 ;;		_lcd_resetSequence
   553 ;;		_lcd_wrCom
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text1
   560   00787E                     __ptext1:
   561                           	callstack 0
   562   00787E                     _lcd_init:
   563                           	callstack 25
   564   00787E                     
   565                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
   566   00787E  EC98  F03D         	call	_lcd_resetSequence	;wreg free
   567                           
   568                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
   569   007882  0E28               	movlw	40
   570   007884  ECCD  F03D         	call	_lcd_wrCom
   571                           
   572                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
   573   007888  0E0F               	movlw	15
   574   00788A  ECCD  F03D         	call	_lcd_wrCom
   575                           
   576                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
   577   00788E  0E01               	movlw	1
   578   007890  ECCD  F03D         	call	_lcd_wrCom
   579                           
   580                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
   581   007894  0E06               	movlw	6
   582   007896  ECCD  F03D         	call	_lcd_wrCom
   583                           
   584                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
   585   00789A  0E80               	movlw	128
   586   00789C  ECCD  F03D         	call	_lcd_wrCom
   587   0078A0                     
   588                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
   589   0078A0  EC72  F03E         	call	_lcd_initCGRam	;wreg free
   590   0078A4  0012               	return		;funcret
   591   0078A6                     __end_of_lcd_init:
   592                           	callstack 0
   593                           
   594 ;; *************** function _lcd_resetSequence *****************
   595 ;; Defined at:
   596 ;;		line 221 in file "Lcd4Lignes.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   610 ;;      Params:         0       0       0       0       0       0       0
   611 ;;      Locals:         0       0       0       0       0       0       0
   612 ;;      Temps:          0       1       0       0       0       0       0
   613 ;;      Totals:         0       1       0       0       0       0       0
   614 ;;Total ram usage:        1 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; Hardware stack levels required when called: 1
   617 ;; This function calls:
   618 ;;		_lcd_ecrireDonnees
   619 ;;		_lcd_strobeEnableBit
   620 ;; This function is called by:
   621 ;;		_lcd_init
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text2
   626   007B30                     __ptext2:
   627                           	callstack 0
   628   007B30                     _lcd_resetSequence:
   629                           	callstack 28
   630   007B30                     
   631                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
   632   007B30  0E00               	movlw	0
   633   007B32  6E95               	movwf	149,c	;volatile
   634   007B34                     
   635                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
   636   007B34  0E0D               	movlw	13
   637   007B36  0100               	movlb	0	; force () banked
   638   007B38  6F62               	movwf	??_lcd_resetSequence& (0+255),b
   639   007B3A  0EFB               	movlw	251
   640   007B3C                     u787:
   641   007B3C  2EE8               	decfsz	wreg,f,c
   642   007B3E  D7FE               	bra	u787
   643   007B40  2F62               	decfsz	??_lcd_resetSequence& (0+255),f,b
   644   007B42  D7FC               	bra	u787
   645   007B44  F000 F000          	nop2	
   646   007B48                     
   647                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
   648   007B48  9080               	bcf	128,0,c	;volatile
   649   007B4A                     
   650                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
   651   007B4A  9280               	bcf	128,1,c	;volatile
   652   007B4C                     
   653                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
   654   007B4C  0E03               	movlw	3
   655   007B4E  EC0E  F03C         	call	_lcd_ecrireDonnees
   656   007B52                     
   657                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
   658   007B52  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
   659   007B56                     
   660                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
   661   007B56  0E03               	movlw	3
   662   007B58                     u797:
   663   007B58  2EE8               	decfsz	wreg,f,c
   664   007B5A  D7FE               	bra	u797
   665   007B5C  F000               	nop	
   666   007B5E                     
   667                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
   668   007B5E  0E03               	movlw	3
   669   007B60  EC0E  F03C         	call	_lcd_ecrireDonnees
   670   007B64                     
   671                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
   672   007B64  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
   673   007B68                     
   674                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
   675   007B68  0E03               	movlw	3
   676   007B6A                     u807:
   677   007B6A  2EE8               	decfsz	wreg,f,c
   678   007B6C  D7FE               	bra	u807
   679   007B6E  F000               	nop	
   680   007B70                     
   681                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
   682   007B70  0E03               	movlw	3
   683   007B72  EC0E  F03C         	call	_lcd_ecrireDonnees
   684   007B76                     
   685                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
   686   007B76  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
   687   007B7A                     
   688                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
   689   007B7A  0E03               	movlw	3
   690   007B7C                     u817:
   691   007B7C  2EE8               	decfsz	wreg,f,c
   692   007B7E  D7FE               	bra	u817
   693   007B80  F000               	nop	
   694   007B82                     
   695                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
   696   007B82  0E02               	movlw	2
   697   007B84  EC0E  F03C         	call	_lcd_ecrireDonnees
   698   007B88                     
   699                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
   700   007B88  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
   701   007B8C                     
   702                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
   703   007B8C  0E03               	movlw	3
   704   007B8E                     u827:
   705   007B8E  2EE8               	decfsz	wreg,f,c
   706   007B90  D7FE               	bra	u827
   707   007B92  F000               	nop	
   708   007B94                     
   709                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
   710   007B94  0E0F               	movlw	15
   711   007B96  6E95               	movwf	149,c	;volatile
   712   007B98  0012               	return		;funcret
   713   007B9A                     __end_of_lcd_resetSequence:
   714                           	callstack 0
   715                           
   716 ;; *************** function _lcd_initCGRam *****************
   717 ;; Defined at:
   718 ;;		line 417 in file "Lcd4Lignes.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  j               1    6[BANK0 ] unsigned char 
   723 ;;  i               1    5[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   733 ;;      Params:         0       0       0       0       0       0       0
   734 ;;      Locals:         0       2       0       0       0       0       0
   735 ;;      Temps:          0       2       0       0       0       0       0
   736 ;;      Totals:         0       4       0       0       0       0       0
   737 ;;Total ram usage:        4 bytes
   738 ;; Hardware stack levels used: 1
   739 ;; Hardware stack levels required when called: 4
   740 ;; This function calls:
   741 ;;		_lcd_curseurHome
   742 ;;		_lcd_wrCom
   743 ;;		_lcd_wrData
   744 ;; This function is called by:
   745 ;;		_lcd_init
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text3
   750   007CE4                     __ptext3:
   751                           	callstack 0
   752   007CE4                     _lcd_initCGRam:
   753                           	callstack 25
   754   007CE4                     
   755                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
   756   007CE4  0E40               	movlw	64
   757   007CE6  ECCD  F03D         	call	_lcd_wrCom
   758   007CEA                     
   759                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
   760   007CEA  0E00               	movlw	0
   761   007CEC  0100               	movlb	0	; force () banked
   762   007CEE  6F65               	movwf	lcd_initCGRam@i& (0+255),b
   763   007CF0                     
   764                           ; BSR set to: 0
   765   007CF0  0E07               	movlw	7
   766   007CF2  0100               	movlb	0	; force () banked
   767   007CF4  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
   768   007CF6  EF7F  F03E         	goto	u601
   769   007CFA  EF81  F03E         	goto	u600
   770   007CFE                     u601:
   771   007CFE  EF83  F03E         	goto	l1752
   772   007D02                     u600:
   773   007D02  EFBE  F03E         	goto	l1768
   774   007D06                     l1752:
   775                           
   776                           ; BSR set to: 0
   777                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
   778   007D06  0E00               	movlw	0
   779   007D08  0100               	movlb	0	; force () banked
   780   007D0A  6F66               	movwf	lcd_initCGRam@j& (0+255),b
   781   007D0C                     
   782                           ; BSR set to: 0
   783   007D0C  0E07               	movlw	7
   784   007D0E  0100               	movlb	0	; force () banked
   785   007D10  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
   786   007D12  EF8D  F03E         	goto	u611
   787   007D16  EF8F  F03E         	goto	u610
   788   007D1A                     u611:
   789   007D1A  EF91  F03E         	goto	l1758
   790   007D1E                     u610:
   791   007D1E  EFB3  F03E         	goto	l1764
   792   007D22                     l1758:
   793                           
   794                           ; BSR set to: 0
   795                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
   796   007D22  0100               	movlb	0	; force () banked
   797   007D24  5165               	movf	lcd_initCGRam@i& (0+255),w,b
   798   007D26  0D08               	mullw	8
   799   007D28  0EAC               	movlw	low _matCGRAM
   800   007D2A  24F3               	addwf	243,w,c
   801   007D2C  0100               	movlb	0	; force () banked
   802   007D2E  6F63               	movwf	??_lcd_initCGRam& (0+255),b
   803   007D30  0E01               	movlw	high _matCGRAM
   804   007D32  20F4               	addwfc	prodh,w,c
   805   007D34  6F64               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   806   007D36  0100               	movlb	0	; force () banked
   807   007D38  5166               	movf	lcd_initCGRam@j& (0+255),w,b
   808   007D3A  0100               	movlb	0	; force () banked
   809   007D3C  2563               	addwf	??_lcd_initCGRam& (0+255),w,b
   810   007D3E  6ED9               	movwf	fsr2l,c
   811   007D40  0100               	movlb	0	; force () banked
   812   007D42  0E00               	movlw	0
   813   007D44  0100               	movlb	0	; force () banked
   814   007D46  2164               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   815   007D48  6EDA               	movwf	fsr2h,c
   816   007D4A  50DF               	movf	indf2,w,c
   817   007D4C  EC84  F03C         	call	_lcd_wrData
   818   007D50  0100               	movlb	0	; force () banked
   819   007D52  2B66               	incf	lcd_initCGRam@j& (0+255),f,b
   820   007D54                     
   821                           ; BSR set to: 0
   822   007D54  0E07               	movlw	7
   823   007D56  0100               	movlb	0	; force () banked
   824   007D58  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
   825   007D5A  EFB1  F03E         	goto	u621
   826   007D5E  EFB3  F03E         	goto	u620
   827   007D62                     u621:
   828   007D62  EF91  F03E         	goto	l1758
   829   007D66                     u620:
   830   007D66                     l1764:
   831                           
   832                           ; BSR set to: 0
   833   007D66  0100               	movlb	0	; force () banked
   834   007D68  2B65               	incf	lcd_initCGRam@i& (0+255),f,b
   835   007D6A                     
   836                           ; BSR set to: 0
   837   007D6A  0E07               	movlw	7
   838   007D6C  0100               	movlb	0	; force () banked
   839   007D6E  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
   840   007D70  EFBC  F03E         	goto	u631
   841   007D74  EFBE  F03E         	goto	u630
   842   007D78                     u631:
   843   007D78  EF83  F03E         	goto	l1752
   844   007D7C                     u630:
   845   007D7C                     l1768:
   846                           
   847                           ; BSR set to: 0
   848                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
   849   007D7C  ECEB  F03B         	call	_lcd_curseurHome	;wreg free
   850   007D80  0012               	return		;funcret
   851   007D82                     __end_of_lcd_initCGRam:
   852                           	callstack 0
   853                           
   854 ;; *************** function _lcd_curseurHome *****************
   855 ;; Defined at:
   856 ;;		line 288 in file "Lcd4Lignes.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0, cstack
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   870 ;;      Params:         0       0       0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; Hardware stack levels required when called: 3
   877 ;; This function calls:
   878 ;;		_lcd_wrCom
   879 ;; This function is called by:
   880 ;;		_lcd_initCGRam
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text4
   885   0077D6                     __ptext4:
   886                           	callstack 0
   887   0077D6                     _lcd_curseurHome:
   888                           	callstack 25
   889   0077D6                     
   890                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
   891   0077D6  0E02               	movlw	2
   892   0077D8  ECCD  F03D         	call	_lcd_wrCom
   893   0077DC  0012               	return		;funcret
   894   0077DE                     __end_of_lcd_curseurHome:
   895                           	callstack 0
   896                           
   897 ;; *************** function _joueCharivari *****************
   898 ;; Defined at:
   899 ;;		line 135 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  mot             2   25[BANK0 ] PTR unsigned char 
   902 ;;		 -> main@messages(45), 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  c               1   27[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       2       0       0       0       0       0
   915 ;;      Locals:         0       1       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         0       3       0       0       0       0       0
   918 ;;Total ram usage:        3 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 5
   921 ;; This function calls:
   922 ;;		_afficheMelange
   923 ;;		_getch
   924 ;;		_kbhit
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text5
   931   007A3E                     __ptext5:
   932                           	callstack 0
   933   007A3E                     _joueCharivari:
   934                           	callstack 25
   935   007A3E                     
   936                           ;main.c: 137: char c = 0;
   937   007A3E  0E00               	movlw	0
   938   007A40  0100               	movlb	0	; force () banked
   939   007A42  6F7B               	movwf	joueCharivari@c& (0+255),b
   940   007A44                     
   941                           ; BSR set to: 0
   942                           ;main.c: 140: afficheMelange(mot);
   943   007A44  C079  F074         	movff	joueCharivari@mot,afficheMelange@mot
   944   007A48  C07A  F075         	movff	joueCharivari@mot+1,afficheMelange@mot+1
   945   007A4C  EC1A  F03F         	call	_afficheMelange	;wreg free
   946   007A50                     l1778:
   947                           
   948                           ;main.c: 143: {;main.c: 144: kbhit();
   949   007A50  EC02  F03C         	call	_kbhit	;wreg free
   950   007A54                     
   951                           ;main.c: 145: {;main.c: 146: c = getch();
   952   007A54  ECF6  F03B         	call	_getch	;wreg free
   953   007A58  0100               	movlb	0	; force () banked
   954   007A5A  6F7B               	movwf	joueCharivari@c& (0+255),b
   955   007A5C                     
   956                           ; BSR set to: 0
   957                           ;main.c: 148: };main.c: 149: };main.c: 150: while(c=='\r' || c==27);
   958   007A5C  0E0D               	movlw	13
   959   007A5E  0100               	movlb	0	; force () banked
   960   007A60  197B               	xorwf	joueCharivari@c& (0+255),w,b
   961   007A62  B4D8               	btfsc	status,2,c
   962   007A64  EF36  F03D         	goto	u641
   963   007A68  EF38  F03D         	goto	u640
   964   007A6C                     u641:
   965   007A6C  EF28  F03D         	goto	l1778
   966   007A70                     u640:
   967   007A70                     
   968                           ; BSR set to: 0
   969   007A70  0E1B               	movlw	27
   970   007A72  0100               	movlb	0	; force () banked
   971   007A74  197B               	xorwf	joueCharivari@c& (0+255),w,b
   972   007A76  B4D8               	btfsc	status,2,c
   973   007A78  EF40  F03D         	goto	u651
   974   007A7C  EF42  F03D         	goto	u650
   975   007A80                     u651:
   976   007A80  EF28  F03D         	goto	l1778
   977   007A84                     u650:
   978   007A84                     
   979                           ; BSR set to: 0
   980   007A84  0012               	return		;funcret
   981   007A86                     __end_of_joueCharivari:
   982                           	callstack 0
   983                           
   984 ;; *************** function _kbhit *****************
   985 ;; Defined at:
   986 ;;		line 99 in file "serie.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1000 ;;      Params:         0       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_joueCharivari
  1010 ;;		_jouePendu
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text6
  1015   007804                     __ptext6:
  1016                           	callstack 0
  1017   007804                     _kbhit:
  1018                           	callstack 29
  1019   007804                     
  1020                           ;serie.c: 101: return RCIF;
  1021   007804  BA9E               	btfsc	158,5,c	;volatile
  1022   007806  EF07  F03C         	goto	u131
  1023   00780A  EF09  F03C         	goto	u130
  1024   00780E                     u131:
  1025   00780E  EF0C  F03C         	goto	l1218
  1026   007812                     u130:
  1027   007812  90D8               	bcf	status,0,c
  1028   007814  EF0D  F03C         	goto	l124
  1029   007818                     l1218:
  1030   007818  80D8               	bsf	status,0,c
  1031   00781A                     l124:
  1032   00781A  0012               	return		;funcret
  1033   00781C                     __end_of_kbhit:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _getch *****************
  1037 ;; Defined at:
  1038 ;;		line 65 in file "serie.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  c               1    0[BANK0 ] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      unsigned char 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       1       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       1       0       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_joueCharivari
  1062 ;;		_jouePendu
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text7
  1067   0077EC                     __ptext7:
  1068                           	callstack 0
  1069   0077EC                     _getch:
  1070                           	callstack 29
  1071   0077EC                     l109:
  1072   0077EC  AA9E               	btfss	158,5,c	;volatile
  1073   0077EE  EFFB  F03B         	goto	u141
  1074   0077F2  EFFD  F03B         	goto	u140
  1075   0077F6                     u141:
  1076   0077F6  EFF6  F03B         	goto	l109
  1077   0077FA                     u140:
  1078   0077FA                     
  1079                           ;serie.c: 71: c = RCREG;
  1080   0077FA  CFAE F060          	movff	4014,getch@c	;volatile
  1081   0077FE                     
  1082                           ;serie.c: 73: return c;
  1083   0077FE  0100               	movlb	0	; force () banked
  1084   007800  5160               	movf	getch@c& (0+255),w,b
  1085   007802                     
  1086                           ; BSR set to: 0
  1087   007802  0012               	return		;funcret
  1088   007804                     __end_of_getch:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _afficheMelange *****************
  1092 ;; Defined at:
  1093 ;;		line 178 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  mot             2   20[BANK0 ] PTR unsigned char 
  1096 ;;		 -> main@messages(45), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  j               2  170[BANK1 ] int 
  1099 ;;  i               2  166[BANK1 ] int 
  1100 ;;  i               2  168[BANK1 ] int 
  1101 ;;  oqp           160    0[BANK1 ] int [20][4]
  1102 ;;  colonne         2  162[BANK1 ] int 
  1103 ;;  ligne           2  160[BANK1 ] int 
  1104 ;;  lettre          1  165[BANK1 ] unsigned char 
  1105 ;;  lgMot           1  164[BANK1 ] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1115 ;;      Params:         0       2       0       0       0       0       0
  1116 ;;      Locals:         0       0     172       0       0       0       0
  1117 ;;      Temps:          0       3       0       0       0       0       0
  1118 ;;      Totals:         0       5     172       0       0       0       0
  1119 ;;Total ram usage:      177 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 4
  1122 ;; This function calls:
  1123 ;;		___awmod
  1124 ;;		___wmul
  1125 ;;		_lcd_ecritChar
  1126 ;;		_lcd_gotoXY
  1127 ;;		_rand
  1128 ;;		_strlen
  1129 ;; This function is called by:
  1130 ;;		_joueCharivari
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text8
  1135   007E34                     __ptext8:
  1136                           	callstack 0
  1137   007E34                     _afficheMelange:
  1138                           	callstack 25
  1139   007E34                     
  1140                           ;main.c: 180: int oqp[4][20];;main.c: 181: char lgMot = strlen(mot);
  1141   007E34  C074  F060         	movff	afficheMelange@mot,strlen@s
  1142   007E38  C075  F061         	movff	afficheMelange@mot+1,strlen@s+1
  1143   007E3C  EC9E  F03C         	call	_strlen	;wreg free
  1144   007E40  0100               	movlb	0	; force () banked
  1145   007E42  5160               	movf	?_strlen& (0+255),w,b
  1146   007E44  0101               	movlb	1	; force () banked
  1147   007E46  6FA4               	movwf	afficheMelange@lgMot& (0+255),b
  1148   007E48                     
  1149                           ; BSR set to: 1
  1150                           ;main.c: 182: char lettre = 0;
  1151   007E48  0E00               	movlw	0
  1152   007E4A  0101               	movlb	1	; force () banked
  1153   007E4C  6FA5               	movwf	afficheMelange@lettre& (0+255),b
  1154   007E4E                     
  1155                           ; BSR set to: 1
  1156                           ;main.c: 183: int ligne = 0;
  1157   007E4E  0E00               	movlw	0
  1158   007E50  0101               	movlb	1	; force () banked
  1159   007E52  6FA1               	movwf	(afficheMelange@ligne+1)& (0+255),b
  1160   007E54  0E00               	movlw	0
  1161   007E56  6FA0               	movwf	afficheMelange@ligne& (0+255),b
  1162   007E58                     
  1163                           ; BSR set to: 1
  1164                           ;main.c: 184: int colonne = 0;
  1165   007E58  0E00               	movlw	0
  1166   007E5A  0101               	movlb	1	; force () banked
  1167   007E5C  6FA3               	movwf	(afficheMelange@colonne+1)& (0+255),b
  1168   007E5E  0E00               	movlw	0
  1169   007E60  6FA2               	movwf	afficheMelange@colonne& (0+255),b
  1170   007E62                     
  1171                           ; BSR set to: 1
  1172                           ;main.c: 186: for(int i = 0; i <5; i++)
  1173   007E62  0E00               	movlw	0
  1174   007E64  0101               	movlb	1	; force () banked
  1175   007E66  6FA9               	movwf	(afficheMelange@i+1)& (0+255),b
  1176   007E68  0E00               	movlw	0
  1177   007E6A  6FA8               	movwf	afficheMelange@i& (0+255),b
  1178   007E6C                     
  1179                           ; BSR set to: 1
  1180   007E6C  0101               	movlb	1	; force () banked
  1181   007E6E  BFA9               	btfsc	(afficheMelange@i+1)& (0+255),7,b
  1182   007E70  EF43  F03F         	goto	u541
  1183   007E74  51A9               	movf	(afficheMelange@i+1)& (0+255),w,b
  1184   007E76  E109               	bnz	u540
  1185   007E78  0E05               	movlw	5
  1186   007E7A  5DA8               	subwf	afficheMelange@i& (0+255),w,b
  1187   007E7C  A0D8               	btfss	status,0,c
  1188   007E7E  EF43  F03F         	goto	u541
  1189   007E82  EF45  F03F         	goto	u540
  1190   007E86                     u541:
  1191   007E86  EF47  F03F         	goto	l1676
  1192   007E8A                     u540:
  1193   007E8A  EFA3  F03F         	goto	l1692
  1194   007E8E                     l1676:
  1195                           
  1196                           ; BSR set to: 1
  1197                           ;main.c: 187: {;main.c: 188: for(int j = 0; j < 21; j++)
  1198   007E8E  0E00               	movlw	0
  1199   007E90  0101               	movlb	1	; force () banked
  1200   007E92  6FAB               	movwf	(afficheMelange@j+1)& (0+255),b
  1201   007E94  0E00               	movlw	0
  1202   007E96  6FAA               	movwf	afficheMelange@j& (0+255),b
  1203   007E98                     
  1204                           ; BSR set to: 1
  1205   007E98  0101               	movlb	1	; force () banked
  1206   007E9A  BFAB               	btfsc	(afficheMelange@j+1)& (0+255),7,b
  1207   007E9C  EF59  F03F         	goto	u551
  1208   007EA0  51AB               	movf	(afficheMelange@j+1)& (0+255),w,b
  1209   007EA2  E109               	bnz	u550
  1210   007EA4  0E15               	movlw	21
  1211   007EA6  5DAA               	subwf	afficheMelange@j& (0+255),w,b
  1212   007EA8  A0D8               	btfss	status,0,c
  1213   007EAA  EF59  F03F         	goto	u551
  1214   007EAE  EF5B  F03F         	goto	u550
  1215   007EB2                     u551:
  1216   007EB2  EF5D  F03F         	goto	l1682
  1217   007EB6                     u550:
  1218   007EB6  EF91  F03F         	goto	l1688
  1219   007EBA                     l1682:
  1220                           
  1221                           ; BSR set to: 1
  1222                           ;main.c: 189: {;main.c: 190: oqp[i][j] = 0;
  1223   007EBA  C1A8  F060         	movff	afficheMelange@i,___wmul@multiplier
  1224   007EBE  C1A9  F061         	movff	afficheMelange@i+1,___wmul@multiplier+1
  1225   007EC2  0E00               	movlw	0
  1226   007EC4  0100               	movlb	0	; force () banked
  1227   007EC6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1228   007EC8  0E28               	movlw	40
  1229   007ECA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1230   007ECC  EC2B  F03C         	call	___wmul	;wreg free
  1231   007ED0  0E00               	movlw	low afficheMelange@oqp
  1232   007ED2  0100               	movlb	0	; force () banked
  1233   007ED4  2560               	addwf	?___wmul& (0+255),w,b
  1234   007ED6  0100               	movlb	0	; force () banked
  1235   007ED8  6F76               	movwf	??_afficheMelange& (0+255),b
  1236   007EDA  0E01               	movlw	high afficheMelange@oqp
  1237   007EDC  0100               	movlb	0	; force () banked
  1238   007EDE  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1239   007EE0  0100               	movlb	0	; force () banked
  1240   007EE2  6F77               	movwf	(??_afficheMelange+1)& (0+255),b
  1241   007EE4  90D8               	bcf	status,0,c
  1242   007EE6  0101               	movlb	1	; force () banked
  1243   007EE8  35AA               	rlcf	afficheMelange@j& (0+255),w,b
  1244   007EEA  6ED9               	movwf	fsr2l,c
  1245   007EEC  35AB               	rlcf	(afficheMelange@j+1)& (0+255),w,b
  1246   007EEE  6EDA               	movwf	fsr2h,c
  1247   007EF0  0100               	movlb	0	; force () banked
  1248   007EF2  5176               	movf	??_afficheMelange& (0+255),w,b
  1249   007EF4  26D9               	addwf	fsr2l,f,c
  1250   007EF6  5177               	movf	(??_afficheMelange+1)& (0+255),w,b
  1251   007EF8  22DA               	addwfc	fsr2h,f,c
  1252   007EFA  6ADE               	clrf	postinc2,c
  1253   007EFC  6ADD               	clrf	postdec2,c
  1254   007EFE                     
  1255                           ; BSR set to: 0
  1256   007EFE  0101               	movlb	1	; force () banked
  1257   007F00  4BAA               	infsnz	afficheMelange@j& (0+255),f,b
  1258   007F02  2BAB               	incf	(afficheMelange@j+1)& (0+255),f,b
  1259   007F04                     
  1260                           ; BSR set to: 1
  1261   007F04  0101               	movlb	1	; force () banked
  1262   007F06  BFAB               	btfsc	(afficheMelange@j+1)& (0+255),7,b
  1263   007F08  EF8F  F03F         	goto	u561
  1264   007F0C  51AB               	movf	(afficheMelange@j+1)& (0+255),w,b
  1265   007F0E  E109               	bnz	u560
  1266   007F10  0E15               	movlw	21
  1267   007F12  5DAA               	subwf	afficheMelange@j& (0+255),w,b
  1268   007F14  A0D8               	btfss	status,0,c
  1269   007F16  EF8F  F03F         	goto	u561
  1270   007F1A  EF91  F03F         	goto	u560
  1271   007F1E                     u561:
  1272   007F1E  EF5D  F03F         	goto	l1682
  1273   007F22                     u560:
  1274   007F22                     l1688:
  1275                           
  1276                           ; BSR set to: 1
  1277   007F22  0101               	movlb	1	; force () banked
  1278   007F24  4BA8               	infsnz	afficheMelange@i& (0+255),f,b
  1279   007F26  2BA9               	incf	(afficheMelange@i+1)& (0+255),f,b
  1280   007F28                     
  1281                           ; BSR set to: 1
  1282   007F28  0101               	movlb	1	; force () banked
  1283   007F2A  BFA9               	btfsc	(afficheMelange@i+1)& (0+255),7,b
  1284   007F2C  EFA1  F03F         	goto	u571
  1285   007F30  51A9               	movf	(afficheMelange@i+1)& (0+255),w,b
  1286   007F32  E109               	bnz	u570
  1287   007F34  0E05               	movlw	5
  1288   007F36  5DA8               	subwf	afficheMelange@i& (0+255),w,b
  1289   007F38  A0D8               	btfss	status,0,c
  1290   007F3A  EFA1  F03F         	goto	u571
  1291   007F3E  EFA3  F03F         	goto	u570
  1292   007F42                     u571:
  1293   007F42  EF47  F03F         	goto	l1676
  1294   007F46                     u570:
  1295   007F46                     l1692:
  1296                           
  1297                           ; BSR set to: 1
  1298                           ;main.c: 194: {;main.c: 195: for(int i = 0 ; i <= lgMot; i++)
  1299   007F46  0E00               	movlw	0
  1300   007F48  0101               	movlb	1	; force () banked
  1301   007F4A  6FA7               	movwf	(afficheMelange@i_114+1)& (0+255),b
  1302   007F4C  0E00               	movlw	0
  1303   007F4E  6FA6               	movwf	afficheMelange@i_114& (0+255),b
  1304   007F50  EFDD  F03F         	goto	l1706
  1305   007F54                     l1694:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 196: {;main.c: 197: lettre = mot[i];
  1309   007F54  0101               	movlb	1	; force () banked
  1310   007F56  51A6               	movf	afficheMelange@i_114& (0+255),w,b
  1311   007F58  0100               	movlb	0	; force () banked
  1312   007F5A  2574               	addwf	afficheMelange@mot& (0+255),w,b
  1313   007F5C  6ED9               	movwf	fsr2l,c
  1314   007F5E  0101               	movlb	1	; force () banked
  1315   007F60  51A7               	movf	(afficheMelange@i_114+1)& (0+255),w,b
  1316   007F62  0100               	movlb	0	; force () banked
  1317   007F64  2175               	addwfc	(afficheMelange@mot+1)& (0+255),w,b
  1318   007F66  6EDA               	movwf	fsr2h,c
  1319   007F68  50DF               	movf	indf2,w,c
  1320   007F6A  0101               	movlb	1	; force () banked
  1321   007F6C  6FA5               	movwf	afficheMelange@lettre& (0+255),b
  1322   007F6E                     
  1323                           ; BSR set to: 1
  1324                           ;main.c: 198: ligne = rand()%20;
  1325   007F6E  EC6D  F03D         	call	_rand	;wreg free
  1326   007F72  C06C  F06E         	movff	?_rand,___awmod@dividend
  1327   007F76  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  1328   007F7A  0E00               	movlw	0
  1329   007F7C  0100               	movlb	0	; force () banked
  1330   007F7E  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1331   007F80  0E14               	movlw	20
  1332   007F82  6F70               	movwf	___awmod@divisor& (0+255),b
  1333   007F84  ECC1  F03E         	call	___awmod	;wreg free
  1334   007F88  C06E  F1A0         	movff	?___awmod,afficheMelange@ligne
  1335   007F8C  C06F  F1A1         	movff	?___awmod+1,afficheMelange@ligne+1
  1336   007F90                     
  1337                           ;main.c: 199: colonne = rand()%4;
  1338   007F90  EC6D  F03D         	call	_rand	;wreg free
  1339   007F94  0E03               	movlw	3
  1340   007F96  0100               	movlb	0	; force () banked
  1341   007F98  156C               	andwf	?_rand& (0+255),w,b
  1342   007F9A  0101               	movlb	1	; force () banked
  1343   007F9C  6FA2               	movwf	afficheMelange@colonne& (0+255),b
  1344   007F9E  6BA3               	clrf	(afficheMelange@colonne+1)& (0+255),b
  1345   007FA0                     
  1346                           ; BSR set to: 1
  1347                           ;main.c: 200: lcd_gotoXY(ligne, colonne);
  1348   007FA0  C1A2  F063         	movff	afficheMelange@colonne,lcd_gotoXY@y
  1349   007FA4  0101               	movlb	1	; force () banked
  1350   007FA6  51A0               	movf	afficheMelange@ligne& (0+255),w,b
  1351   007FA8  EC39  F03E         	call	_lcd_gotoXY
  1352   007FAC                     
  1353                           ;main.c: 201: lcd_ecritChar(lettre);
  1354   007FAC  0101               	movlb	1	; force () banked
  1355   007FAE  51A5               	movf	afficheMelange@lettre& (0+255),w,b
  1356   007FB0  EC43  F03D         	call	_lcd_ecritChar
  1357   007FB4  0101               	movlb	1	; force () banked
  1358   007FB6  4BA6               	infsnz	afficheMelange@i_114& (0+255),f,b
  1359   007FB8  2BA7               	incf	(afficheMelange@i_114+1)& (0+255),f,b
  1360   007FBA                     l1706:
  1361                           
  1362                           ; BSR set to: 1
  1363   007FBA  0101               	movlb	1	; force () banked
  1364   007FBC  51A4               	movf	afficheMelange@lgMot& (0+255),w,b
  1365   007FBE  0100               	movlb	0	; force () banked
  1366   007FC0  6F76               	movwf	??_afficheMelange& (0+255),b
  1367   007FC2  6B77               	clrf	(??_afficheMelange+1)& (0+255),b
  1368   007FC4  0101               	movlb	1	; force () banked
  1369   007FC6  51A6               	movf	afficheMelange@i_114& (0+255),w,b
  1370   007FC8  0100               	movlb	0	; force () banked
  1371   007FCA  5D76               	subwf	??_afficheMelange& (0+255),w,b
  1372   007FCC  5177               	movf	(??_afficheMelange+1)& (0+255),w,b
  1373   007FCE  0A80               	xorlw	128
  1374   007FD0  6F78               	movwf	(??_afficheMelange+2)& (0+255),b
  1375   007FD2  0101               	movlb	1	; force () banked
  1376   007FD4  51A7               	movf	(afficheMelange@i_114+1)& (0+255),w,b
  1377   007FD6  0A80               	xorlw	128
  1378   007FD8  0100               	movlb	0	; force () banked
  1379   007FDA  5978               	subwfb	(??_afficheMelange+2)& (0+255),w,b
  1380   007FDC  B0D8               	btfsc	status,0,c
  1381   007FDE  EFF3  F03F         	goto	u581
  1382   007FE2  EFF5  F03F         	goto	u580
  1383   007FE6                     u581:
  1384   007FE6  EFAA  F03F         	goto	l1694
  1385   007FEA                     u580:
  1386   007FEA                     
  1387                           ; BSR set to: 0
  1388                           ;main.c: 202: };main.c: 203: };main.c: 205: while(oqp[4][20] == 1);
  1389   007FEA  0101               	movlb	1	; force () banked
  1390   007FEC  05C8               	decf	(afficheMelange@oqp+200)& (0+255),w,b
  1391   007FEE  11C9               	iorwf	(afficheMelange@oqp+201)& (0+255),w,b
  1392   007FF0  B4D8               	btfsc	status,2,c
  1393   007FF2  EFFD  F03F         	goto	u591
  1394   007FF6  EFFF  F03F         	goto	u590
  1395   007FFA                     u591:
  1396   007FFA  EFA3  F03F         	goto	l1692
  1397   007FFE                     u590:
  1398   007FFE                     
  1399                           ; BSR set to: 1
  1400   007FFE  0012               	return		;funcret
  1401   008000                     __end_of_afficheMelange:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _strlen *****************
  1405 ;; Defined at:
  1406 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  1409 ;;		 -> main@messages(45), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  1412 ;;		 -> main@messages(45), 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  2    0[BANK0 ] unsigned int 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1422 ;;      Params:         0       2       0       0       0       0       0
  1423 ;;      Locals:         0       2       0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0
  1425 ;;      Totals:         0       4       0       0       0       0       0
  1426 ;;Total ram usage:        4 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_afficheMelange
  1432 ;;		_jouePendu
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text9
  1437   00793C                     __ptext9:
  1438                           	callstack 0
  1439   00793C                     _strlen:
  1440                           	callstack 28
  1441   00793C  C060  F062         	movff	strlen@s,strlen@cp
  1442   007940  C061  F063         	movff	strlen@s+1,strlen@cp+1
  1443   007944  EFA7  F03C         	goto	l1578
  1444   007948                     l1576:
  1445   007948  0100               	movlb	0	; () banked
  1446   00794A  4B62               	infsnz	strlen@cp& (0+255),f,b
  1447   00794C  2B63               	incf	(strlen@cp+1)& (0+255),f,b
  1448   00794E                     l1578:
  1449   00794E  C062  FFD9         	movff	strlen@cp,fsr2l
  1450   007952  C063  FFDA         	movff	strlen@cp+1,fsr2h
  1451   007956  50DF               	movf	indf2,w,c
  1452   007958  A4D8               	btfss	status,2,c
  1453   00795A  EFB1  F03C         	goto	u471
  1454   00795E  EFB3  F03C         	goto	u470
  1455   007962                     u471:
  1456   007962  EFA4  F03C         	goto	l1576
  1457   007966                     u470:
  1458   007966  0100               	movlb	0	; () banked
  1459   007968  5160               	movf	strlen@s& (0+255),w,b
  1460   00796A  5D62               	subwf	strlen@cp& (0+255),w,b
  1461   00796C  6F60               	movwf	?_strlen& (0+255),b
  1462   00796E  5161               	movf	(strlen@s+1)& (0+255),w,b
  1463   007970  5963               	subwfb	(strlen@cp+1)& (0+255),w,b
  1464   007972  6F61               	movwf	(?_strlen+1)& (0+255),b
  1465   007974                     
  1466                           ; BSR set to: 0
  1467   007974  0012               	return		;funcret
  1468   007976                     __end_of_strlen:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _rand *****************
  1472 ;; Defined at:
  1473 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\rand.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  2   12[BANK0 ] int 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1487 ;;      Params:         0       2       0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0
  1490 ;;      Totals:         0       2       0       0       0       0       0
  1491 ;;Total ram usage:        2 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; Hardware stack levels required when called: 1
  1494 ;; This function calls:
  1495 ;;		___lmul
  1496 ;; This function is called by:
  1497 ;;		_afficheMelange
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text10
  1502   007ADA                     __ptext10:
  1503                           	callstack 0
  1504   007ADA                     _rand:
  1505                           	callstack 27
  1506   007ADA  C0D6  F060         	movff	_randx,___lmul@multiplier
  1507   007ADE  C0D7  F061         	movff	_randx+1,___lmul@multiplier+1
  1508   007AE2  C0D8  F062         	movff	_randx+2,___lmul@multiplier+2
  1509   007AE6  C0D9  F063         	movff	_randx+3,___lmul@multiplier+3
  1510   007AEA  0E6D               	movlw	109
  1511   007AEC  0100               	movlb	0	; () banked
  1512   007AEE  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1513   007AF0  0E4E               	movlw	78
  1514   007AF2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1515   007AF4  0EC6               	movlw	198
  1516   007AF6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1517   007AF8  0E41               	movlw	65
  1518   007AFA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1519   007AFC  EC03  F03E         	call	___lmul	;wreg free
  1520   007B00  C060  F0D6         	movff	?___lmul,_randx
  1521   007B04  C061  F0D7         	movff	?___lmul+1,_randx+1
  1522   007B08  C062  F0D8         	movff	?___lmul+2,_randx+2
  1523   007B0C  C063  F0D9         	movff	?___lmul+3,_randx+3
  1524   007B10  0E39               	movlw	57
  1525   007B12  0100               	movlb	0	; () banked
  1526   007B14  27D6               	addwf	_randx& (0+255),f,b
  1527   007B16  0E30               	movlw	48
  1528   007B18  23D7               	addwfc	(_randx+1)& (0+255),f,b
  1529   007B1A  0E00               	movlw	0
  1530   007B1C  23D8               	addwfc	(_randx+2)& (0+255),f,b
  1531   007B1E  0E00               	movlw	0
  1532   007B20  23D9               	addwfc	(_randx+3)& (0+255),f,b
  1533   007B22                     
  1534                           ; BSR set to: 0
  1535   007B22  0EFF               	movlw	255
  1536   007B24  15D8               	andwf	(_randx+2)& (0+255),w,b
  1537   007B26  6F6C               	movwf	?_rand& (0+255),b
  1538   007B28  0E7F               	movlw	127
  1539   007B2A  15D9               	andwf	(_randx+3)& (0+255),w,b
  1540   007B2C  6F6D               	movwf	(?_rand+1)& (0+255),b
  1541   007B2E                     
  1542                           ; BSR set to: 0
  1543   007B2E  0012               	return		;funcret
  1544   007B30                     __end_of_rand:
  1545                           	callstack 0
  1546                           
  1547 ;; *************** function ___lmul *****************
  1548 ;; Defined at:
  1549 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1552 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  product         4    8[BANK0 ] unsigned long 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  4    0[BANK0 ] unsigned long 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         0       8       0       0       0       0       0
  1565 ;;      Locals:         0       4       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0
  1567 ;;      Totals:         0      12       0       0       0       0       0
  1568 ;;Total ram usage:       12 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_rand
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text11
  1578   007C06                     __ptext11:
  1579                           	callstack 0
  1580   007C06                     ___lmul:
  1581                           	callstack 27
  1582   007C06  0E00               	movlw	0
  1583   007C08  0100               	movlb	0	; () banked
  1584   007C0A  6F68               	movwf	___lmul@product& (0+255),b
  1585   007C0C  0E00               	movlw	0
  1586   007C0E  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1587   007C10  0E00               	movlw	0
  1588   007C12  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1589   007C14  0E00               	movlw	0
  1590   007C16  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1591   007C18                     l1566:
  1592                           
  1593                           ; BSR set to: 0
  1594   007C18  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1595   007C1A  EF11  F03E         	goto	u451
  1596   007C1E  EF13  F03E         	goto	u450
  1597   007C22                     u451:
  1598   007C22  EF1B  F03E         	goto	l1570
  1599   007C26                     u450:
  1600   007C26                     
  1601                           ; BSR set to: 0
  1602   007C26  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1603   007C28  2768               	addwf	___lmul@product& (0+255),f,b
  1604   007C2A  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1605   007C2C  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1606   007C2E  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1607   007C30  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1608   007C32  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1609   007C34  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1610   007C36                     l1570:
  1611                           
  1612                           ; BSR set to: 0
  1613   007C36  90D8               	bcf	status,0,c
  1614   007C38  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1615   007C3A  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1616   007C3C  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1617   007C3E  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1618   007C40                     
  1619                           ; BSR set to: 0
  1620   007C40  90D8               	bcf	status,0,c
  1621   007C42  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1622   007C44  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1623   007C46  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1624   007C48  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1625   007C4A  5160               	movf	___lmul@multiplier& (0+255),w,b
  1626   007C4C  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1627   007C4E  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1628   007C50  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1629   007C52  A4D8               	btfss	status,2,c
  1630   007C54  EF2E  F03E         	goto	u461
  1631   007C58  EF30  F03E         	goto	u460
  1632   007C5C                     u461:
  1633   007C5C  EF0C  F03E         	goto	l1566
  1634   007C60                     u460:
  1635   007C60                     
  1636                           ; BSR set to: 0
  1637   007C60  C068  F060         	movff	___lmul@product,?___lmul
  1638   007C64  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1639   007C68  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1640   007C6C  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1641   007C70                     
  1642                           ; BSR set to: 0
  1643   007C70  0012               	return		;funcret
  1644   007C72                     __end_of___lmul:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _lcd_gotoXY *****************
  1648 ;; Defined at:
  1649 ;;		line 314 in file "Lcd4Lignes.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  x               1    wreg     unsigned char 
  1652 ;;  y               1    3[BANK0 ] unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  x               1    4[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         0       1       0       0       0       0       0
  1665 ;;      Locals:         0       1       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0
  1667 ;;      Totals:         0       2       0       0       0       0       0
  1668 ;;Total ram usage:        2 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 3
  1671 ;; This function calls:
  1672 ;;		_lcd_wrCom
  1673 ;; This function is called by:
  1674 ;;		_afficheMelange
  1675 ;;		_jouePendu
  1676 ;;		_lcd_effaceLigne
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text12
  1681   007C72                     __ptext12:
  1682                           	callstack 0
  1683   007C72                     _lcd_gotoXY:
  1684                           	callstack 25
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;incstack = 0
  1688                           ;lcd_gotoXY@x stored from wreg
  1689   007C72  0100               	movlb	0	; force () banked
  1690   007C74  6F64               	movwf	lcd_gotoXY@x& (0+255),b
  1691   007C76                     
  1692                           ;Lcd4Lignes.c: 316: switch(y)
  1693   007C76  EF5D  F03E         	goto	l1608
  1694   007C7A                     l1598:
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  1698   007C7A  0100               	movlb	0	; force () banked
  1699   007C7C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1700   007C7E  0F7F               	addlw	127
  1701   007C80  0980               	iorlw	128
  1702   007C82  ECCD  F03D         	call	_lcd_wrCom
  1703                           
  1704                           ;Lcd4Lignes.c: 320: break;
  1705   007C86  EF71  F03E         	goto	l187
  1706   007C8A                     l1600:
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  1710   007C8A  0100               	movlb	0	; force () banked
  1711   007C8C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1712   007C8E  0FBF               	addlw	191
  1713   007C90  0980               	iorlw	128
  1714   007C92  ECCD  F03D         	call	_lcd_wrCom
  1715                           
  1716                           ;Lcd4Lignes.c: 323: break;
  1717   007C96  EF71  F03E         	goto	l187
  1718   007C9A                     l1602:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  1722   007C9A  0100               	movlb	0	; force () banked
  1723   007C9C  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1724   007C9E  0F93               	addlw	147
  1725   007CA0  0980               	iorlw	128
  1726   007CA2  ECCD  F03D         	call	_lcd_wrCom
  1727                           
  1728                           ;Lcd4Lignes.c: 326: break;
  1729   007CA6  EF71  F03E         	goto	l187
  1730   007CAA                     l1604:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  1734   007CAA  0100               	movlb	0	; force () banked
  1735   007CAC  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1736   007CAE  0FD3               	addlw	211
  1737   007CB0  0980               	iorlw	128
  1738   007CB2  ECCD  F03D         	call	_lcd_wrCom
  1739                           
  1740                           ;Lcd4Lignes.c: 329: break;
  1741   007CB6  EF71  F03E         	goto	l187
  1742   007CBA                     l1608:
  1743   007CBA  0100               	movlb	0	; force () banked
  1744   007CBC  5163               	movf	lcd_gotoXY@y& (0+255),w,b
  1745                           
  1746                           ; Switch size 1, requested type "simple"
  1747                           ; Number of cases is 4, Range of values is 1 to 4
  1748                           ; switch strategies available:
  1749                           ; Name         Instructions Cycles
  1750                           ; simple_byte           13     7 (average)
  1751                           ;	Chosen strategy is simple_byte
  1752   007CBE  0A01               	xorlw	1	; case 1
  1753   007CC0  B4D8               	btfsc	status,2,c
  1754   007CC2  EF3D  F03E         	goto	l1598
  1755   007CC6  0A03               	xorlw	3	; case 2
  1756   007CC8  B4D8               	btfsc	status,2,c
  1757   007CCA  EF45  F03E         	goto	l1600
  1758   007CCE  0A01               	xorlw	1	; case 3
  1759   007CD0  B4D8               	btfsc	status,2,c
  1760   007CD2  EF4D  F03E         	goto	l1602
  1761   007CD6  0A07               	xorlw	7	; case 4
  1762   007CD8  B4D8               	btfsc	status,2,c
  1763   007CDA  EF55  F03E         	goto	l1604
  1764   007CDE  EF71  F03E         	goto	l187
  1765   007CE2                     l187:
  1766   007CE2  0012               	return		;funcret
  1767   007CE4                     __end_of_lcd_gotoXY:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _lcd_ecritChar *****************
  1771 ;; Defined at:
  1772 ;;		line 359 in file "Lcd4Lignes.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  car             1    wreg     unsigned char 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  car             1    3[BANK0 ] unsigned char 
  1777 ;;  posRam          1    4[BANK0 ] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1787 ;;      Params:         0       0       0       0       0       0       0
  1788 ;;      Locals:         0       2       0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0
  1790 ;;      Totals:         0       2       0       0       0       0       0
  1791 ;;Total ram usage:        2 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 3
  1794 ;; This function calls:
  1795 ;;		_lcd_wrCom
  1796 ;;		_lcd_wrData
  1797 ;; This function is called by:
  1798 ;;		_afficheMelange
  1799 ;;		_jouePendu
  1800 ;;		_lcd_putMessage
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text13
  1805   007A86                     __ptext13:
  1806                           	callstack 0
  1807   007A86                     _lcd_ecritChar:
  1808                           	callstack 25
  1809                           
  1810                           ;incstack = 0
  1811                           ;lcd_ecritChar@car stored from wreg
  1812   007A86  0100               	movlb	0	; force () banked
  1813   007A88  6F63               	movwf	lcd_ecritChar@car& (0+255),b
  1814   007A8A                     
  1815                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1816   007A8A  0100               	movlb	0	; force () banked
  1817   007A8C  5163               	movf	lcd_ecritChar@car& (0+255),w,b
  1818   007A8E  EC84  F03C         	call	_lcd_wrData
  1819   007A92  0100               	movlb	0	; force () banked
  1820   007A94  6F64               	movwf	lcd_ecritChar@posRam& (0+255),b
  1821                           
  1822                           ;Lcd4Lignes.c: 364: switch(posRam)
  1823   007A96  EF5C  F03D         	goto	l1594
  1824   007A9A                     l1586:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1828   007A9A  0EC0               	movlw	192
  1829   007A9C  ECCD  F03D         	call	_lcd_wrCom
  1830                           
  1831                           ;Lcd4Lignes.c: 368: break;
  1832   007AA0  EF6C  F03D         	goto	l198
  1833   007AA4                     l1588:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1837   007AA4  0E94               	movlw	148
  1838   007AA6  ECCD  F03D         	call	_lcd_wrCom
  1839                           
  1840                           ;Lcd4Lignes.c: 371: break;
  1841   007AAA  EF6C  F03D         	goto	l198
  1842   007AAE                     l1590:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1846   007AAE  0ED4               	movlw	212
  1847   007AB0  ECCD  F03D         	call	_lcd_wrCom
  1848                           
  1849                           ;Lcd4Lignes.c: 374: break;
  1850   007AB4  EF6C  F03D         	goto	l198
  1851   007AB8                     l1594:
  1852                           
  1853                           ; BSR set to: 0
  1854   007AB8  0100               	movlb	0	; force () banked
  1855   007ABA  5164               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1856                           
  1857                           ; Switch size 1, requested type "simple"
  1858                           ; Number of cases is 3, Range of values is 148 to 212
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte           10     6 (average)
  1862                           ;	Chosen strategy is simple_byte
  1863   007ABC  0A94               	xorlw	148	; case 148
  1864   007ABE  B4D8               	btfsc	status,2,c
  1865   007AC0  EF4D  F03D         	goto	l1586
  1866   007AC4  0A54               	xorlw	84	; case 192
  1867   007AC6  B4D8               	btfsc	status,2,c
  1868   007AC8  EF57  F03D         	goto	l1590
  1869   007ACC  0A14               	xorlw	20	; case 212
  1870   007ACE  B4D8               	btfsc	status,2,c
  1871   007AD0  EF52  F03D         	goto	l1588
  1872   007AD4  EF6C  F03D         	goto	l198
  1873   007AD8                     l198:
  1874   007AD8  0012               	return		;funcret
  1875   007ADA                     __end_of_lcd_ecritChar:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _lcd_wrData *****************
  1879 ;; Defined at:
  1880 ;;		line 188 in file "Lcd4Lignes.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  caractere       1    wreg     unsigned char 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  caractere       1    2[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1894 ;;      Params:         0       0       0       0       0       0       0
  1895 ;;      Locals:         0       1       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0
  1897 ;;      Totals:         0       1       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 2
  1901 ;; This function calls:
  1902 ;;		_lcd_busy
  1903 ;;		_lcd_ecrireDonnees
  1904 ;;		_lcd_strobeEnableBit
  1905 ;; This function is called by:
  1906 ;;		_lcd_ecritChar
  1907 ;;		_lcd_initCGRam
  1908 ;;		_lcd_effaceChar
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text14
  1913   007908                     __ptext14:
  1914                           	callstack 0
  1915   007908                     _lcd_wrData:
  1916                           	callstack 26
  1917                           
  1918                           ;incstack = 0
  1919                           ;lcd_wrData@caractere stored from wreg
  1920   007908  0100               	movlb	0	; force () banked
  1921   00790A  6F62               	movwf	lcd_wrData@caractere& (0+255),b
  1922   00790C                     
  1923                           ;Lcd4Lignes.c: 190: lcd_busy();
  1924   00790C  ECDB  F03C         	call	_lcd_busy	;wreg free
  1925   007910                     
  1926                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  1927   007910  0E00               	movlw	0
  1928   007912  6E95               	movwf	149,c	;volatile
  1929   007914                     
  1930                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  1931   007914  8080               	bsf	128,0,c	;volatile
  1932   007916                     
  1933                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  1934   007916  9280               	bcf	128,1,c	;volatile
  1935   007918                     
  1936                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  1937   007918  0100               	movlb	0	; force () banked
  1938   00791A  3962               	swapf	lcd_wrData@caractere& (0+255),w,b
  1939   00791C  0B0F               	andlw	15
  1940   00791E  EC0E  F03C         	call	_lcd_ecrireDonnees
  1941   007922                     
  1942                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  1943   007922  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
  1944   007926                     
  1945                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  1946   007926  0100               	movlb	0	; force () banked
  1947   007928  5162               	movf	lcd_wrData@caractere& (0+255),w,b
  1948   00792A  EC0E  F03C         	call	_lcd_ecrireDonnees
  1949   00792E                     
  1950                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  1951   00792E  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
  1952   007932                     
  1953                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  1954   007932  0E0F               	movlw	15
  1955   007934  6E95               	movwf	149,c	;volatile
  1956   007936                     
  1957                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  1958                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  1959   007936  ECDB  F03C         	call	_lcd_busy	;wreg free
  1960   00793A  0012               	return		;funcret
  1961   00793C                     __end_of_lcd_wrData:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _lcd_wrCom *****************
  1965 ;; Defined at:
  1966 ;;		line 156 in file "Lcd4Lignes.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  commande        1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  commande        1    2[BANK0 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         0       0       0       0       0       0       0
  1981 ;;      Locals:         0       1       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         0       1       0       0       0       0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 2
  1987 ;; This function calls:
  1988 ;;		_lcd_busy
  1989 ;;		_lcd_ecrireDonnees
  1990 ;;		_lcd_strobeEnableBit
  1991 ;; This function is called by:
  1992 ;;		_lcd_init
  1993 ;;		_lcd_curseurHome
  1994 ;;		_lcd_gotoXY
  1995 ;;		_lcd_ecritChar
  1996 ;;		_lcd_initCGRam
  1997 ;;		_lcd_effaceAffichage
  1998 ;;		_lcd_cacheCurseur
  1999 ;;		_lcd_montreCurseur
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text15
  2004   007B9A                     __ptext15:
  2005                           	callstack 0
  2006   007B9A                     _lcd_wrCom:
  2007                           	callstack 27
  2008                           
  2009                           ;incstack = 0
  2010                           ;lcd_wrCom@commande stored from wreg
  2011   007B9A  0100               	movlb	0	; force () banked
  2012   007B9C  6F62               	movwf	lcd_wrCom@commande& (0+255),b
  2013   007B9E                     
  2014                           ;Lcd4Lignes.c: 158: lcd_busy();
  2015   007B9E  ECDB  F03C         	call	_lcd_busy	;wreg free
  2016   007BA2                     
  2017                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2018   007BA2  0E00               	movlw	0
  2019   007BA4  6E95               	movwf	149,c	;volatile
  2020   007BA6                     
  2021                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2022   007BA6  9080               	bcf	128,0,c	;volatile
  2023   007BA8                     
  2024                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2025   007BA8  9280               	bcf	128,1,c	;volatile
  2026   007BAA                     
  2027                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2028   007BAA  0100               	movlb	0	; force () banked
  2029   007BAC  3962               	swapf	lcd_wrCom@commande& (0+255),w,b
  2030   007BAE  0B0F               	andlw	15
  2031   007BB0  EC0E  F03C         	call	_lcd_ecrireDonnees
  2032   007BB4                     
  2033                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2034   007BB4  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
  2035   007BB8                     
  2036                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2037   007BB8  0100               	movlb	0	; force () banked
  2038   007BBA  5162               	movf	lcd_wrCom@commande& (0+255),w,b
  2039   007BBC  EC0E  F03C         	call	_lcd_ecrireDonnees
  2040   007BC0                     
  2041                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2042   007BC0  ECE7  F03B         	call	_lcd_strobeEnableBit	;wreg free
  2043   007BC4                     
  2044                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2045   007BC4  0E03               	movlw	3
  2046   007BC6                     u837:
  2047   007BC6  2EE8               	decfsz	wreg,f,c
  2048   007BC8  D7FE               	bra	u837
  2049   007BCA  F000               	nop	
  2050   007BCC                     
  2051                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2052   007BCC  0100               	movlb	0	; force () banked
  2053   007BCE  0562               	decf	lcd_wrCom@commande& (0+255),w,b
  2054   007BD0  B4D8               	btfsc	status,2,c
  2055   007BD2  EFED  F03D         	goto	u431
  2056   007BD6  EFEF  F03D         	goto	u430
  2057   007BDA                     u431:
  2058   007BDA  EFF9  F03D         	goto	l1526
  2059   007BDE                     u430:
  2060   007BDE                     
  2061                           ; BSR set to: 0
  2062   007BDE  0E02               	movlw	2
  2063   007BE0  0100               	movlb	0	; force () banked
  2064   007BE2  1962               	xorwf	lcd_wrCom@commande& (0+255),w,b
  2065   007BE4  A4D8               	btfss	status,2,c
  2066   007BE6  EFF7  F03D         	goto	u441
  2067   007BEA  EFF9  F03D         	goto	u440
  2068   007BEE                     u441:
  2069   007BEE  EFFE  F03D         	goto	l1528
  2070   007BF2                     u440:
  2071   007BF2                     l1526:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2075   007BF2  0EA6               	movlw	166
  2076   007BF4                     u847:
  2077   007BF4  2EE8               	decfsz	wreg,f,c
  2078   007BF6  D7FE               	bra	u847
  2079   007BF8  F000 F000          	nop2	
  2080   007BFC                     l1528:
  2081                           
  2082                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2083   007BFC  0E0F               	movlw	15
  2084   007BFE  6E95               	movwf	149,c	;volatile
  2085   007C00                     
  2086                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  2087   007C00  ECDB  F03C         	call	_lcd_busy	;wreg free
  2088   007C04  0012               	return		;funcret
  2089   007C06                     __end_of_lcd_wrCom:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _lcd_strobeEnableBit *****************
  2093 ;; Defined at:
  2094 ;;		line 431 in file "Lcd4Lignes.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		None
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2108 ;;      Params:         0       0       0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0
  2111 ;;      Totals:         0       0       0       0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_lcd_wrCom
  2118 ;;		_lcd_wrData
  2119 ;;		_lcd_resetSequence
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text16
  2124   0077CE                     __ptext16:
  2125                           	callstack 0
  2126   0077CE                     _lcd_strobeEnableBit:
  2127                           	callstack 28
  2128   0077CE                     
  2129                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2130   0077CE  8480               	bsf	128,2,c	;volatile
  2131                           
  2132                           ;Lcd4Lignes.c: 434: __nop();
  2133   0077D0  F000               	nop	
  2134                           
  2135                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2136   0077D2  9480               	bcf	128,2,c	;volatile
  2137   0077D4  0012               	return		;funcret
  2138   0077D6                     __end_of_lcd_strobeEnableBit:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _lcd_ecrireDonnees *****************
  2142 ;; Defined at:
  2143 ;;		line 107 in file "Lcd4Lignes.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  donnee          1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  donnee          1    1[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2157 ;;      Params:         0       0       0       0       0       0       0
  2158 ;;      Locals:         0       1       0       0       0       0       0
  2159 ;;      Temps:          0       1       0       0       0       0       0
  2160 ;;      Totals:         0       2       0       0       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_lcd_wrCom
  2167 ;;		_lcd_wrData
  2168 ;;		_lcd_resetSequence
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text17
  2173   00781C                     __ptext17:
  2174                           	callstack 0
  2175   00781C                     _lcd_ecrireDonnees:
  2176                           	callstack 28
  2177                           
  2178                           ;incstack = 0
  2179                           ;lcd_ecrireDonnees@donnee stored from wreg
  2180   00781C  0100               	movlb	0	; force () banked
  2181   00781E  6F61               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  2182   007820                     
  2183                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2184   007820  CF83 F060          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2185   007824  0EF0               	movlw	240
  2186   007826  0100               	movlb	0	; force () banked
  2187   007828  1760               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  2188   00782A  0100               	movlb	0	; force () banked
  2189   00782C  5161               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  2190   00782E  0B0F               	andlw	15
  2191   007830  0100               	movlb	0	; force () banked
  2192   007832  1160               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  2193   007834  6E83               	movwf	131,c	;volatile
  2194   007836                     
  2195                           ; BSR set to: 0
  2196   007836  0012               	return		;funcret
  2197   007838                     __end_of_lcd_ecrireDonnees:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _lcd_busy *****************
  2201 ;; Defined at:
  2202 ;;		line 124 in file "Lcd4Lignes.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  adresse         1    1[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      unsigned char 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2216 ;;      Params:         0       0       0       0       0       0       0
  2217 ;;      Locals:         0       1       0       0       0       0       0
  2218 ;;      Temps:          0       1       0       0       0       0       0
  2219 ;;      Totals:         0       2       0       0       0       0       0
  2220 ;;Total ram usage:        2 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 1
  2223 ;; This function calls:
  2224 ;;		_lcd_lireDonnees
  2225 ;; This function is called by:
  2226 ;;		_lcd_wrCom
  2227 ;;		_lcd_wrData
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text18
  2232   0079B6                     __ptext18:
  2233                           	callstack 0
  2234   0079B6                     _lcd_busy:
  2235                           	callstack 27
  2236   0079B6                     
  2237                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2238   0079B6  9080               	bcf	128,0,c	;volatile
  2239                           
  2240                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2241   0079B8  8280               	bsf	128,1,c	;volatile
  2242   0079BA                     l149:
  2243                           
  2244                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2245   0079BA  8480               	bsf	128,2,c	;volatile
  2246                           
  2247                           ;Lcd4Lignes.c: 134: __nop();
  2248   0079BC  F000               	nop	
  2249   0079BE                     
  2250                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2251   0079BE  ECE4  F03B         	call	_lcd_lireDonnees	;wreg free
  2252   0079C2  0100               	movlb	0	; force () banked
  2253   0079C4  6F60               	movwf	??_lcd_busy& (0+255),b
  2254   0079C6  3960               	swapf	??_lcd_busy& (0+255),w,b
  2255   0079C8  0BF0               	andlw	240
  2256   0079CA  0100               	movlb	0	; force () banked
  2257   0079CC  6F61               	movwf	lcd_busy@adresse& (0+255),b
  2258   0079CE                     
  2259                           ; BSR set to: 0
  2260                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2261   0079CE  9480               	bcf	128,2,c	;volatile
  2262   0079D0                     
  2263                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2264   0079D0  8480               	bsf	128,2,c	;volatile
  2265   0079D2                     
  2266                           ;Lcd4Lignes.c: 139: __nop();
  2267   0079D2  F000               	nop	
  2268                           
  2269                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2270   0079D4  ECE4  F03B         	call	_lcd_lireDonnees	;wreg free
  2271   0079D8  0100               	movlb	0	; force () banked
  2272   0079DA  1361               	iorwf	lcd_busy@adresse& (0+255),f,b
  2273   0079DC                     
  2274                           ; BSR set to: 0
  2275                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2276   0079DC  9480               	bcf	128,2,c	;volatile
  2277   0079DE                     
  2278                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2279   0079DE  0100               	movlb	0	; force () banked
  2280   0079E0  BF61               	btfsc	lcd_busy@adresse& (0+255),7,b
  2281   0079E2  EFF5  F03C         	goto	u421
  2282   0079E6  EFF7  F03C         	goto	u420
  2283   0079EA                     u421:
  2284   0079EA  EFDD  F03C         	goto	l149
  2285   0079EE                     u420:
  2286   0079EE                     
  2287                           ; BSR set to: 0
  2288                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2289   0079EE  9280               	bcf	128,1,c	;volatile
  2290   0079F0                     
  2291                           ; BSR set to: 0
  2292                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2293   0079F0  0100               	movlb	0	; force () banked
  2294   0079F2  5161               	movf	lcd_busy@adresse& (0+255),w,b
  2295   0079F4  0B7F               	andlw	127
  2296   0079F6                     
  2297                           ; BSR set to: 0
  2298   0079F6  0012               	return		;funcret
  2299   0079F8                     __end_of_lcd_busy:
  2300                           	callstack 0
  2301                           
  2302 ;; *************** function _lcd_lireDonnees *****************
  2303 ;; Defined at:
  2304 ;;		line 93 in file "Lcd4Lignes.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      unsigned char 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2318 ;;      Params:         0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_lcd_busy
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text19
  2332   0077C8                     __ptext19:
  2333                           	callstack 0
  2334   0077C8                     _lcd_lireDonnees:
  2335                           	callstack 27
  2336   0077C8                     
  2337                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2338   0077C8  5083               	movf	131,w,c	;volatile
  2339   0077CA  0B0F               	andlw	15
  2340   0077CC  0012               	return		;funcret
  2341   0077CE                     __end_of_lcd_lireDonnees:
  2342                           	callstack 0
  2343                           
  2344 ;; *************** function ___wmul *****************
  2345 ;; Defined at:
  2346 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2349 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  product         2    4[BANK0 ] unsigned int 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    0[BANK0 ] unsigned int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, prodl, prodh
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2361 ;;      Params:         0       4       0       0       0       0       0
  2362 ;;      Locals:         0       2       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0
  2364 ;;      Totals:         0       6       0       0       0       0       0
  2365 ;;Total ram usage:        6 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_afficheMelange
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text20
  2375   007856                     __ptext20:
  2376                           	callstack 0
  2377   007856                     ___wmul:
  2378                           	callstack 28
  2379   007856  0100               	movlb	0	; () banked
  2380   007858  5160               	movf	___wmul@multiplier& (0+255),w,b
  2381   00785A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2382   00785C  CFF3 F064          	movff	prodl,___wmul@product
  2383   007860  CFF4 F065          	movff	prodh,___wmul@product+1
  2384   007864  5160               	movf	___wmul@multiplier& (0+255),w,b
  2385   007866  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2386   007868  50F3               	movf	243,w,c
  2387   00786A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2388   00786C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2389   00786E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2390   007870  50F3               	movf	243,w,c
  2391   007872  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2392   007874                     
  2393                           ; BSR set to: 0
  2394   007874  C064  F060         	movff	___wmul@product,?___wmul
  2395   007878  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2396   00787C                     
  2397                           ; BSR set to: 0
  2398   00787C  0012               	return		;funcret
  2399   00787E                     __end_of___wmul:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function ___awmod *****************
  2403 ;; Defined at:
  2404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  dividend        2   14[BANK0 ] int 
  2407 ;;  divisor         2   16[BANK0 ] int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  sign            1   19[BANK0 ] unsigned char 
  2410 ;;  counter         1   18[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  2   14[BANK0 ] int 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2420 ;;      Params:         0       4       0       0       0       0       0
  2421 ;;      Locals:         0       2       0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0
  2423 ;;      Totals:         0       6       0       0       0       0       0
  2424 ;;Total ram usage:        6 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_afficheMelange
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text21
  2434   007D82                     __ptext21:
  2435                           	callstack 0
  2436   007D82                     ___awmod:
  2437                           	callstack 28
  2438   007D82  0E00               	movlw	0
  2439   007D84  0100               	movlb	0	; () banked
  2440   007D86  6F73               	movwf	___awmod@sign& (0+255),b
  2441   007D88                     
  2442                           ; BSR set to: 0
  2443   007D88  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2444   007D8A  EFCB  F03E         	goto	u480
  2445   007D8E  EFC9  F03E         	goto	u481
  2446   007D92                     u481:
  2447   007D92  EFD1  F03E         	goto	l1634
  2448   007D96                     u480:
  2449   007D96                     
  2450                           ; BSR set to: 0
  2451   007D96  6D6E               	negf	___awmod@dividend& (0+255),b
  2452   007D98  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2453   007D9A  B0D8               	btfsc	status,0,c
  2454   007D9C  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2455   007D9E                     
  2456                           ; BSR set to: 0
  2457   007D9E  0E01               	movlw	1
  2458   007DA0  6F73               	movwf	___awmod@sign& (0+255),b
  2459   007DA2                     l1634:
  2460                           
  2461                           ; BSR set to: 0
  2462   007DA2  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2463   007DA4  EFD8  F03E         	goto	u490
  2464   007DA8  EFD6  F03E         	goto	u491
  2465   007DAC                     u491:
  2466   007DAC  EFDC  F03E         	goto	l1638
  2467   007DB0                     u490:
  2468   007DB0                     
  2469                           ; BSR set to: 0
  2470   007DB0  6D70               	negf	___awmod@divisor& (0+255),b
  2471   007DB2  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  2472   007DB4  B0D8               	btfsc	status,0,c
  2473   007DB6  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  2474   007DB8                     l1638:
  2475                           
  2476                           ; BSR set to: 0
  2477   007DB8  5170               	movf	___awmod@divisor& (0+255),w,b
  2478   007DBA  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2479   007DBC  B4D8               	btfsc	status,2,c
  2480   007DBE  EFE3  F03E         	goto	u501
  2481   007DC2  EFE5  F03E         	goto	u500
  2482   007DC6                     u501:
  2483   007DC6  EF09  F03F         	goto	l1654
  2484   007DCA                     u500:
  2485   007DCA                     
  2486                           ; BSR set to: 0
  2487   007DCA  0E01               	movlw	1
  2488   007DCC  6F72               	movwf	___awmod@counter& (0+255),b
  2489   007DCE  EFED  F03E         	goto	l1644
  2490   007DD2                     l1642:
  2491                           
  2492                           ; BSR set to: 0
  2493   007DD2  90D8               	bcf	status,0,c
  2494   007DD4  3770               	rlcf	___awmod@divisor& (0+255),f,b
  2495   007DD6  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2496   007DD8  2B72               	incf	___awmod@counter& (0+255),f,b
  2497   007DDA                     l1644:
  2498                           
  2499                           ; BSR set to: 0
  2500   007DDA  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2501   007DDC  EFF2  F03E         	goto	u511
  2502   007DE0  EFF4  F03E         	goto	u510
  2503   007DE4                     u511:
  2504   007DE4  EFE9  F03E         	goto	l1642
  2505   007DE8                     u510:
  2506   007DE8                     l1646:
  2507                           
  2508                           ; BSR set to: 0
  2509   007DE8  5170               	movf	___awmod@divisor& (0+255),w,b
  2510   007DEA  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  2511   007DEC  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2512   007DEE  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2513   007DF0  A0D8               	btfss	status,0,c
  2514   007DF2  EFFD  F03E         	goto	u521
  2515   007DF6  EFFF  F03E         	goto	u520
  2516   007DFA                     u521:
  2517   007DFA  EF03  F03F         	goto	l1650
  2518   007DFE                     u520:
  2519   007DFE                     
  2520                           ; BSR set to: 0
  2521   007DFE  5170               	movf	___awmod@divisor& (0+255),w,b
  2522   007E00  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  2523   007E02  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2524   007E04  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2525   007E06                     l1650:
  2526                           
  2527                           ; BSR set to: 0
  2528   007E06  90D8               	bcf	status,0,c
  2529   007E08  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2530   007E0A  3370               	rrcf	___awmod@divisor& (0+255),f,b
  2531   007E0C                     
  2532                           ; BSR set to: 0
  2533   007E0C  2F72               	decfsz	___awmod@counter& (0+255),f,b
  2534   007E0E  EFF4  F03E         	goto	l1646
  2535   007E12                     l1654:
  2536                           
  2537                           ; BSR set to: 0
  2538   007E12  5173               	movf	___awmod@sign& (0+255),w,b
  2539   007E14  B4D8               	btfsc	status,2,c
  2540   007E16  EF0F  F03F         	goto	u531
  2541   007E1A  EF11  F03F         	goto	u530
  2542   007E1E                     u531:
  2543   007E1E  EF15  F03F         	goto	l1658
  2544   007E22                     u530:
  2545   007E22                     
  2546                           ; BSR set to: 0
  2547   007E22  6D6E               	negf	___awmod@dividend& (0+255),b
  2548   007E24  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2549   007E26  B0D8               	btfsc	status,0,c
  2550   007E28  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2551   007E2A                     l1658:
  2552                           
  2553                           ; BSR set to: 0
  2554   007E2A  C06E  F06E         	movff	___awmod@dividend,?___awmod
  2555   007E2E  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  2556   007E32                     
  2557                           ; BSR set to: 0
  2558   007E32  0012               	return		;funcret
  2559   007E34                     __end_of___awmod:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _initialisation *****************
  2563 ;; Defined at:
  2564 ;;		line 50 in file "main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         0       0       0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0
  2581 ;;      Totals:         0       0       0       0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text22
  2592   0077DE                     __ptext22:
  2593                           	callstack 0
  2594   0077DE                     _initialisation:
  2595                           	callstack 30
  2596   0077DE                     
  2597                           ;main.c: 52: TRISA = 0;
  2598   0077DE  0E00               	movlw	0
  2599   0077E0  6E92               	movwf	146,c	;volatile
  2600                           
  2601                           ;main.c: 53: TRISB = 0;
  2602   0077E2  0E00               	movlw	0
  2603   0077E4  6E93               	movwf	147,c	;volatile
  2604                           
  2605                           ;main.c: 56: ANSEL = 0;
  2606   0077E6  0E00               	movlw	0
  2607   0077E8  6E7E               	movwf	126,c	;volatile
  2608   0077EA  0012               	return		;funcret
  2609   0077EC                     __end_of_initialisation:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _init_serie *****************
  2613 ;; Defined at:
  2614 ;;		line 24 in file "serie.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2628 ;;      Params:         0       0       0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           	psect	text23
  2642   007838                     __ptext23:
  2643                           	callstack 0
  2644   007838                     _init_serie:
  2645                           	callstack 30
  2646   007838                     
  2647                           ;serie.c: 27: TRISCbits.TRISC7=1;
  2648   007838  8E94               	bsf	148,7,c	;volatile
  2649                           
  2650                           ;serie.c: 28: TRISCbits.TRISC6=1;
  2651   00783A  8C94               	bsf	148,6,c	;volatile
  2652   00783C                     
  2653                           ;serie.c: 32: SPBRGH=0x00;
  2654   00783C  0E00               	movlw	0
  2655   00783E  6EB0               	movwf	176,c	;volatile
  2656                           
  2657                           ;serie.c: 33: SPBRG=25;
  2658   007840  0E19               	movlw	25
  2659   007842  6EAF               	movwf	175,c	;volatile
  2660   007844                     
  2661                           ;serie.c: 34: BAUDCONbits.BRG16=1;
  2662   007844  86B8               	bsf	184,3,c	;volatile
  2663   007846                     
  2664                           ;serie.c: 35: TXSTAbits.BRGH=1;
  2665   007846  84AC               	bsf	172,2,c	;volatile
  2666   007848                     
  2667                           ;serie.c: 38: TXSTAbits.SYNC=0;
  2668   007848  98AC               	bcf	172,4,c	;volatile
  2669   00784A                     
  2670                           ;serie.c: 39: TXSTAbits.TXEN=1;
  2671   00784A  8AAC               	bsf	172,5,c	;volatile
  2672   00784C                     
  2673                           ;serie.c: 40: RCSTAbits.CREN = 1;
  2674   00784C  88AB               	bsf	171,4,c	;volatile
  2675   00784E                     
  2676                           ;serie.c: 41: RCSTAbits.SPEN=1;
  2677   00784E  8EAB               	bsf	171,7,c	;volatile
  2678                           
  2679                           ;serie.c: 42: ANSEL = 0;
  2680   007850  0E00               	movlw	0
  2681   007852  6E7E               	movwf	126,c	;volatile
  2682   007854  0012               	return		;funcret
  2683   007856                     __end_of_init_serie:
  2684                           	callstack 0
  2685   000000                     
  2686                           	psect	param0
  2687   000000                     
  2688                           	psect	idloc
  2689                           
  2690                           ;Config register IDLOC0 @ 0x200000
  2691                           ;	unspecified, using default values
  2692   200000                     	org	2097152
  2693   200000  FF                 	db	255
  2694                           
  2695                           ;Config register IDLOC1 @ 0x200001
  2696                           ;	unspecified, using default values
  2697   200001                     	org	2097153
  2698   200001  FF                 	db	255
  2699                           
  2700                           ;Config register IDLOC2 @ 0x200002
  2701                           ;	unspecified, using default values
  2702   200002                     	org	2097154
  2703   200002  FF                 	db	255
  2704                           
  2705                           ;Config register IDLOC3 @ 0x200003
  2706                           ;	unspecified, using default values
  2707   200003                     	org	2097155
  2708   200003  FF                 	db	255
  2709                           
  2710                           ;Config register IDLOC4 @ 0x200004
  2711                           ;	unspecified, using default values
  2712   200004                     	org	2097156
  2713   200004  FF                 	db	255
  2714                           
  2715                           ;Config register IDLOC5 @ 0x200005
  2716                           ;	unspecified, using default values
  2717   200005                     	org	2097157
  2718   200005  FF                 	db	255
  2719                           
  2720                           ;Config register IDLOC6 @ 0x200006
  2721                           ;	unspecified, using default values
  2722   200006                     	org	2097158
  2723   200006  FF                 	db	255
  2724                           
  2725                           ;Config register IDLOC7 @ 0x200007
  2726                           ;	unspecified, using default values
  2727   200007                     	org	2097159
  2728   200007  FF                 	db	255
  2729                           
  2730                           	psect	config
  2731                           
  2732                           ; Padding undefined space
  2733   300000                     	org	3145728
  2734   300000  FF                 	db	255
  2735                           
  2736                           ;Config register CONFIG1H @ 0x300001
  2737                           ;	Oscillator Selection bits
  2738                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2739                           ;	Fail-Safe Clock Monitor Enable bit
  2740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2741                           ;	Internal/External Oscillator Switchover bit
  2742                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2743   300001                     	org	3145729
  2744   300001  08                 	db	8
  2745                           
  2746                           ;Config register CONFIG2L @ 0x300002
  2747                           ;	Power-up Timer Enable bit
  2748                           ;	PWRTEN = OFF, PWRT disabled
  2749                           ;	Brown-out Reset Enable bits
  2750                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2751                           ;	Brown Out Reset Voltage bits
  2752                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2753   300002                     	org	3145730
  2754   300002  1F                 	db	31
  2755                           
  2756                           ;Config register CONFIG2H @ 0x300003
  2757                           ;	Watchdog Timer Enable bit
  2758                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2759                           ;	Watchdog Timer Postscale Select bits
  2760                           ;	WDTPS = 32768, 1:32768
  2761   300003                     	org	3145731
  2762   300003  1E                 	db	30
  2763                           
  2764                           ; Padding undefined space
  2765   300004                     	org	3145732
  2766   300004  FF                 	db	255
  2767                           
  2768                           ;Config register CONFIG3H @ 0x300005
  2769                           ;	CCP2 MUX bit
  2770                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2771                           ;	PORTB A/D Enable bit
  2772                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2773                           ;	Low-Power Timer1 Oscillator Enable bit
  2774                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2775                           ;	HFINTOSC Fast Start-up
  2776                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2777                           ;	MCLR Pin Enable bit
  2778                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2779   300005                     	org	3145733
  2780   300005  8B                 	db	139
  2781                           
  2782                           ;Config register CONFIG4L @ 0x300006
  2783                           ;	Stack Full/Underflow Reset Enable bit
  2784                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2785                           ;	Single-Supply ICSP Enable bit
  2786                           ;	LVP = OFF, Single-Supply ICSP disabled
  2787                           ;	Extended Instruction Set Enable bit
  2788                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2789                           ;	Background Debugger Enable bit
  2790                           ;	DEBUG = 0x1, unprogrammed default
  2791   300006                     	org	3145734
  2792   300006  81                 	db	129
  2793                           
  2794                           ; Padding undefined space
  2795   300007                     	org	3145735
  2796   300007  FF                 	db	255
  2797                           
  2798                           ;Config register CONFIG5L @ 0x300008
  2799                           ;	Code Protection Block 0
  2800                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2801                           ;	Code Protection Block 1
  2802                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2803                           ;	Code Protection Block 2
  2804                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2805                           ;	Code Protection Block 3
  2806                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2807   300008                     	org	3145736
  2808   300008  0F                 	db	15
  2809                           
  2810                           ;Config register CONFIG5H @ 0x300009
  2811                           ;	Boot Block Code Protection bit
  2812                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2813                           ;	Data EEPROM Code Protection bit
  2814                           ;	CPD = OFF, Data EEPROM not code-protected
  2815   300009                     	org	3145737
  2816   300009  C0                 	db	192
  2817                           
  2818                           ;Config register CONFIG6L @ 0x30000A
  2819                           ;	Write Protection Block 0
  2820                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2821                           ;	Write Protection Block 1
  2822                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2823                           ;	Write Protection Block 2
  2824                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2825                           ;	Write Protection Block 3
  2826                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2827   30000A                     	org	3145738
  2828   30000A  0F                 	db	15
  2829                           
  2830                           ;Config register CONFIG6H @ 0x30000B
  2831                           ;	Configuration Register Write Protection bit
  2832                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2833                           ;	Boot Block Write Protection bit
  2834                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2835                           ;	Data EEPROM Write Protection bit
  2836                           ;	WRTD = OFF, Data EEPROM not write-protected
  2837   30000B                     	org	3145739
  2838   30000B  E0                 	db	224
  2839                           
  2840                           ;Config register CONFIG7L @ 0x30000C
  2841                           ;	Table Read Protection Block 0
  2842                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2843                           ;	Table Read Protection Block 1
  2844                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2845                           ;	Table Read Protection Block 2
  2846                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2847                           ;	Table Read Protection Block 3
  2848                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2849   30000C                     	org	3145740
  2850   30000C  0F                 	db	15
  2851                           
  2852                           ;Config register CONFIG7H @ 0x30000D
  2853                           ;	Boot Block Table Read Protection bit
  2854                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2855   30000D                     	org	3145741
  2856   30000D  40                 	db	64
  2857                           tosu	equ	0xFFF
  2858                           tosh	equ	0xFFE
  2859                           tosl	equ	0xFFD
  2860                           stkptr	equ	0xFFC
  2861                           pclatu	equ	0xFFB
  2862                           pclath	equ	0xFFA
  2863                           pcl	equ	0xFF9
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           indf0	equ	0xFEF
  2871                           postinc0	equ	0xFEE
  2872                           postdec0	equ	0xFED
  2873                           preinc0	equ	0xFEC
  2874                           plusw0	equ	0xFEB
  2875                           fsr0h	equ	0xFEA
  2876                           fsr0l	equ	0xFE9
  2877                           wreg	equ	0xFE8
  2878                           indf1	equ	0xFE7
  2879                           postinc1	equ	0xFE6
  2880                           postdec1	equ	0xFE5
  2881                           preinc1	equ	0xFE4
  2882                           plusw1	equ	0xFE3
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           bsr	equ	0xFE0
  2886                           indf2	equ	0xFDF
  2887                           postinc2	equ	0xFDE
  2888                           postdec2	equ	0xFDD
  2889                           preinc2	equ	0xFDC
  2890                           plusw2	equ	0xFDB
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        113
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     73     122
    BANK1           256    172     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK0[45]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK0[45]), 

    afficheMelange@mot	PTR unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK0[45]), 

    joueCharivari@mot	PTR unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK0[45]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_joueCharivari
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _joueCharivari->_afficheMelange
    _afficheMelange->___awmod
    _rand->___lmul
    _lcd_gotoXY->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    ___awmod->_rand

Critical Paths under _main in BANK1

    _joueCharivari->_afficheMelange

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    3620
                                             28 BANK0     45    45      0
                         _init_serie
                     _initialisation
                      _joueCharivari
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _joueCharivari                                        3     1      2    2857
                                             25 BANK0      3     1      2
                     _afficheMelange
                              _getch
                              _kbhit
 ---------------------------------------------------------------------------------
 (2) _kbhit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0      15
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _afficheMelange                                     177   175      2    2698
                                             20 BANK0      5     3      2
                                              0 BANK1    172   172      0
                            ___awmod
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
                               _rand
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoXY                                           2     1      1     570
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serie
   _initialisation
   _joueCharivari
     _afficheMelange
       ___awmod
         _rand (ARG)
           ___lmul
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
       _rand
       _strlen
     _getch
     _kbhit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
       _lcd_wrCom
       _lcd_wrData
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AC      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      7A       5       76.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhh        47      0       0      16        0.0%
BITBIGSFRll         1E      0       0      23        0.0%
BITBIGSFRlhh         E      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      18        0.0%
BITBIGSFRhlll        8      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      17        0.0%
BITBIGSFRlhlh        2      0       0      21        0.0%
BITBIGSFRlhll        1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     166      24        0.0%
DATA                 0      0     166       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 08 12:47:17 2023

                         l35 78D2                           l38 77EA                           l65 7A84  
                         l77 7FFE          ___wmul@multiplicand 0062                          l100 7854  
                        l111 77FA                          l112 7802                          l220 77D4  
                        l124 781A                          l109 77EC                          l150 79EE  
                        l223 787C                          l143 77CC                          l151 79F6  
                        l160 793A                          l217 7D80                          l146 7836  
                        l234 7C60                          l235 7C70                          l163 7B98  
                        l172 77DC                          l149 79BA                          l157 7C04  
                        l166 78A4                          l187 7CE2                          l198 7AD8  
                        l467 7E32                          l890 7B2E                          l896 7974  
                        u130 7812                          u131 780E                          u140 77FA  
                        u141 77F6                          u500 7DCA                          u420 79EE  
                        u501 7DC6                          u421 79EA                          u510 7DE8  
                        u430 7BDE                          u511 7DE4                          u431 7BDA  
                        u520 7DFE                          u440 7BF2                          u600 7D02  
                        u521 7DFA                          u441 7BEE                          u601 7CFE  
                        u530 7E22                          u450 7C26                          u610 7D1E  
                        u531 7E1E                          u451 7C22                          u611 7D1A  
                        u460 7C60                          u540 7E8A                          u620 7D66  
                        u461 7C5C                          u541 7E86                          u621 7D62  
                        u470 7966                          u550 7EB6                          u630 7D7C  
                        u471 7962                          u551 7EB2                          u631 7D78  
                        u480 7D96                          u560 7F22                          u640 7A70  
                        u481 7D92                          u561 7F1E                          u641 7A6C  
                        u490 7DB0                          u570 7F46                          u650 7A84  
                        u491 7DAC                          u571 7F42                          u651 7A80  
                        u580 7FEA                          u581 7FE6                          u590 7FFE  
                        u591 7FFA                          u807 7B6A                          u671 78B0  
                        u817 7B7C                          u827 7B8E                          u837 7BC6  
                        u847 7BF4                          u787 7B3C                          u797 7B58  
               ___awmod@sign 0073                          prod 0FF3                  lcd_gotoXY@x 0064  
                        wreg 0FE8                  lcd_gotoXY@y 0063                         l1222 77EC  
                       l1214 7804                         l1224 77FE                         l1216 7812  
                       l1218 7818                         l1500 7B9E                         l1350 7848  
                       l1342 7838                         l1510 7BAA                         l1502 7BA2  
                       l1352 784A                         l1344 783C                         l1336 77DE  
                       l1520 7BC4                         l1512 7BB4                         l1504 7BA6  
                       l1600 7C8A                         l1354 784C                         l1346 7844  
                       l1530 7C00                         l1522 7BCC                         l1514 7BB8  
                       l1506 7BA6                         l1602 7C9A                         l1610 7ADA  
                       l1356 784E                         l1348 7846                         l1620 7856  
                       l1532 7C00                         l1524 7BDE                         l1516 7BB8  
                       l1508 7BA8                         l1540 7914                         l1604 7CAA  
                       l1612 7B10                         l1700 7FA0                         l1630 7D96  
                       l1622 7874                         l1470 77C8                         l1526 7BF2  
                       l1518 7BC0                         l1550 7926                         l1542 7914  
                       l1614 7B22                         l1702 7FAC                         l1710 7B30  
                       l1640 7DCA                         l1632 7D9E                         l1480 79CE  
                       l1528 7BFC                         l1560 7936                         l1552 7926  
                       l1544 7916                         l1536 790C                         l1608 7CBA  
                       l1704 7FB4                         l1720 7B52                         l1712 7B34  
                       l1800 78C0                         l1650 7E06                         l1642 7DD2  
                       l1634 7DA2                         l1626 7D82                         l1490 79DE  
                       l1482 79D0                         l1474 7820                         l1554 792E  
                       l1546 7918                         l1538 7910                         l1570 7C36  
                       l1706 7FBA                         l1618 77D6                         l1730 7B70  
                       l1722 7B56                         l1714 7B48                         l1802 78C4  
                       l1652 7E0C                         l1644 7DDA                         l1636 7DB0  
                       l1628 7D88                         l1492 79DE                         l1484 79D0  
                       l1476 79B6                         l1556 7932                         l1548 7922  
                       l1572 7C40                         l1564 7C06                         l1580 7966  
                       l1708 7FEA                         l1740 7B8C                         l1732 7B76  
                       l1724 7B5E                         l1716 7B4A                         l1646 7DE8  
                       l1654 7E12                         l1638 7DB8                         l1494 79F0  
                       l1486 79D2                         l1478 79BE                         l1558 7932  
                       l1590 7AAE                         l1566 7C18                         l1574 793C  
                       l1670 7E62                         l1662 7E34                         l1742 7B94  
                       l1734 7B7A                         l1726 7B64                         l1718 7B4C  
                       l1656 7E22                         l1648 7DFE                         l1488 79DC  
                       l1584 7A8A                         l1568 7C26                         l1576 7948  
                       l1672 7E6C                         l1664 7E48                         l1760 7D50  
                       l1752 7D06                         l1744 7CE4                         l1736 7B82  
                       l1728 7B68                         l1658 7E2A                         l1498 77CE  
                       l1586 7A9A                         l1594 7AB8                         l1578 794E  
                       l1690 7F28                         l1682 7EBA                         l1666 7E4E  
                       l1762 7D54                         l1754 7D0C                         l1746 7CEA  
                       l1738 7B88                         l1770 787E                         l1588 7AA4  
                       l1596 7C76                         l1684 7EFE                         l1692 7F46  
                       l1676 7E8E                         l1668 7E58                         l1780 7A54  
                       l1764 7D66                         l1748 7CF0                         l1772 78A0  
                       l1598 7C7A                         l1694 7F54                         l1686 7F04  
                       l1678 7E98                         l1782 7A5C                         l1774 7A3E  
                       l1766 7D6A                         l1758 7D22                         l1696 7F6E  
                       l1688 7F22                         l1784 7A70                         l1776 7A44  
                       l1768 7D7C                         l1698 7F90                         l1778 7A50  
                       l1794 78A6                         l1796 78B8                         l1798 78BC  
                       _RCIF 7CF5             ??_initialisation 0060                         _main 78A6  
                       _rand 7ADA                         fsr2h 0FDA                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         prodh 0FF4  
                       prodl 0FF3                         start 0000             ??_afficheMelange 0076  
               ___param_bank 0000              ??_lcd_ecritChar 0063                        ?_main 0060  
                      ?_rand 006C              __end_of___awmod 7E34                        _ANSEL 0F7E  
        afficheMelange@i_114 01A6                        _RCREG 0FAE                        _SPBRG 0FAF  
                      _PORTD 0F83                        _TRISA 0F92                        _TRISB 0F93  
                      _TRISD 0F95                        _TXREG 0FAD          afficheMelange@lgMot 01A4  
        ___lmul@multiplicand 0064          afficheMelange@ligne 01A0                 main@messages 007C  
            ??_lcd_initCGRam 0063                        _getch 77EC                        _kbhit 7804  
                      _randx 00D6                        tablat 0FF5                        plusw1 0FE3  
                      plusw2 0FDB                        status 0FD8              __initialization 79F8  
               __end_of_main 78D6                 __end_of_rand 7B30                       ??_main 007C  
                     ??_rand 006E                __activetblptr 0003                       ?_getch 0060  
                     ?_kbhit 0060                       _SPBRGH 0FB0         afficheMelange@lettre 01A5  
             lcd_initCGRam@i 0065               lcd_initCGRam@j 0066             __end_of_lcd_busy 79F8  
           __end_of_lcd_init 78A6                       ___lmul 7C06                       ___wmul 7856  
                  ??___awmod 0072              ___awmod@divisor 0070                       isa$std 0001  
            ___awmod@counter 0072                       getch@c 0060                       _strlen 793C  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
          _lcd_resetSequence 7B30                   __accesstop 0060      __end_of__initialization 7A38  
        _lcd_strobeEnableBit 77CE           ?_lcd_resetSequence 0060                ___rparam_used 0000  
               __pidataBANK0 78D7                 __pidataBANK1 7976          ??_lcd_resetSequence 0062  
          afficheMelange@mot 0074            afficheMelange@oqp 0100                __end_of_getch 7804  
              __end_of_kbhit 781C         ?_lcd_strobeEnableBit 0060                      ??_getch 0060  
                    ??_kbhit 0060    __end_of_lcd_resetSequence 7B9A            _lcd_ecrireDonnees 781C  
         ?_lcd_ecrireDonnees 0060          ??_lcd_ecrireDonnees 0060                      ?___lmul 0060  
                    ?___wmul 0060               ___lmul@product 0068        ??_lcd_strobeEnableBit 0060  
                    ?_strlen 0060                _joueCharivari 7A3E                   _lcd_gotoXY 7C72  
                 _lcd_wrData 7908    __end_of_lcd_ecrireDonnees 7838                    ?_lcd_busy 0060  
                  ?_lcd_init 0060      lcd_ecrireDonnees@donnee 0061        afficheMelange@colonne 01A2  
                    __Hparam 0000                      __Lparam 0000            __end_of_lcd_wrCom 7C06  
                    ___awmod 7D82                      __pcinit 79F8                   _init_serie 7838  
                    __ramtop 0600                      __ptext0 78A6                      __ptext1 787E  
                    __ptext2 7B30                      __ptext3 7CE4                      __ptext4 77D6  
                    __ptext5 7A3E                      __ptext6 7804                      __ptext7 77EC  
                    __ptext8 7E34                      __ptext9 793C        __end_of_lcd_ecritChar 7ADA  
             ?_joueCharivari 0079              lcd_busy@adresse 0061             ___awmod@dividend 006E  
           lcd_ecritChar@car 0063                   ??_lcd_busy 0060                   ??_lcd_init 0067  
       end_of_initialization 7A38        __end_of_lcd_initCGRam 7D82            ??_lcd_lireDonnees 0060  
                  _RCSTAbits 0FAB                      postdec1 0FE5                      postdec2 0FDD  
                    postinc0 0FEE                      postinc2 0FDE            ??_lcd_curseurHome 0063  
        lcd_ecritChar@posRam 0064                      strlen@s 0060                    _PORTAbits 0F80  
                ?_lcd_gotoXY 0063                    _TRISCbits 0F94                  ?_lcd_wrData 0060  
                  _TXSTAbits 0FAC               __end_of___lmul 7C72               __end_of___wmul 787E  
                _BAUDCONbits 0FB8              ??_joueCharivari 007B                  ?_init_serie 0060  
             __end_of_strlen 7976          start_initialization 79F8                     ??___lmul 0068  
                   ??___wmul 0064                  __pdataBANK0 00A9                  __pdataBANK1 01AC  
                   ??_strlen 0062                __pcstackBANK0 0060                __pcstackBANK1 0100  
__end_of_lcd_strobeEnableBit 77D6               _initialisation 77DE                     ?___awmod 006E  
                  _lcd_wrCom 7B9A               _afficheMelange 7E34              _lcd_lireDonnees 77C8  
        lcd_wrData@caractere 0062              _lcd_curseurHome 77D6               ___wmul@product 0064  
     __end_of_initialisation 77EC                    main@F2866 00A9       __end_of_afficheMelange 8000  
                 ?_lcd_wrCom 0060            ___wmul@multiplier 0060                 ??_lcd_gotoXY 0064  
               ??_lcd_wrData 0062            lcd_wrCom@commande 0062            ___lmul@multiplier 0060  
                  copy_data0 7A0C                    copy_data1 7A2C                     __Hparam0 0000  
                   __Lparam0 0000              ?_initialisation 0060           __end_of_lcd_gotoXY 7CE4  
         __end_of_lcd_wrData 793C              ?_afficheMelange 0074                 ??_init_serie 0060  
            afficheMelange@i 01A8              afficheMelange@j 01AA      __end_of_lcd_lireDonnees 77CE  
                   _matCGRAM 01AC      __end_of_lcd_curseurHome 77DE                     __ptext10 7ADA  
                   __ptext11 7C06                     __ptext20 7856                     __ptext12 7C72  
                   __ptext21 7D82                     __ptext13 7A86                     __ptext22 77DE  
                   __ptext14 7908                     __ptext23 7838                     __ptext15 7B9A  
                   __ptext16 77CE                     __ptext17 781C                     __ptext18 79B6  
                   __ptext19 77C8                     _lcd_busy 79B6                     _lcd_init 787E  
         __end_of_init_serie 7856                     isa$xinst 0000                  ??_lcd_wrCom 0062  
      __end_of_joueCharivari 7A86                _lcd_ecritChar 7A86             joueCharivari@mot 0079  
              _lcd_initCGRam 7CE4               ?_lcd_ecritChar 0060             ?_lcd_lireDonnees 0060  
                   strlen@cp 0062             ?_lcd_curseurHome 0060               joueCharivari@c 007B  
             ?_lcd_initCGRam 0060  
