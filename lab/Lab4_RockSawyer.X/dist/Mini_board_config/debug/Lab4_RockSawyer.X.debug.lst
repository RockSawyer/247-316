

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 18 12:16:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 21/07/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F45K20 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataBANK0
    67   0008BE                     __pidataBANK0:
    68                           	callstack 0
    69                           
    70                           ;initializer for main@F2604
    71   0008BE  31                 	db	49
    72   0008BF  65                 	db	101
    73   0008C0  72                 	db	114
    74   0008C1  4D                 	db	77
    75   0008C2  6F                 	db	111
    76   0008C3  74                 	db	116
    77   0008C4  00                 	db	0
    78   0008C5  00                 	db	0
    79   0008C6  00                 	db	0
    80   0008C7  00                 	db	0
    81   0008C8  00                 	db	0
    82   0008C9  00                 	db	0
    83   0008CA  00                 	db	0
    84   0008CB  00                 	db	0
    85   0008CC  00                 	db	0
    86   0008CD  32                 	db	50
    87   0008CE  65                 	db	101
    88   0008CF  4D                 	db	77
    89   0008D0  6F                 	db	111
    90   0008D1  74                 	db	116
    91   0008D2  00                 	db	0
    92   0008D3  00                 	db	0
    93   0008D4  00                 	db	0
    94   0008D5  00                 	db	0
    95   0008D6  00                 	db	0
    96   0008D7  00                 	db	0
    97   0008D8  00                 	db	0
    98   0008D9  00                 	db	0
    99   0008DA  00                 	db	0
   100   0008DB  00                 	db	0
   101   0008DC  33                 	db	51
   102   0008DD  65                 	db	101
   103   0008DE  4D                 	db	77
   104   0008DF  6F                 	db	111
   105   0008E0  74                 	db	116
   106   0008E1  00                 	db	0
   107   0008E2  00                 	db	0
   108   0008E3  00                 	db	0
   109   0008E4  00                 	db	0
   110   0008E5  00                 	db	0
   111   0008E6  00                 	db	0
   112   0008E7  00                 	db	0
   113   0008E8  00                 	db	0
   114   0008E9  00                 	db	0
   115   0008EA  00                 	db	0
   116                           
   117                           ;initializer for setDel@F2614
   118   0008EB  0000               	dw	0
   119   0008ED  00FC               	dw	252
   120   0008EF  00FA               	dw	250
   121   0008F1  00F6               	dw	246
   122   0008F3  00EE               	dw	238
   123   0008F5  00DE               	dw	222
   124                           
   125                           ;initializer for setDel@F2612
   126   0008F7  0000               	dw	0
   127   0008F9  0002               	dw	2
   128   0008FB  0004               	dw	4
   129   0008FD  0008               	dw	8
   130   0008FF  0010               	dw	16
   131   000901  0020               	dw	32
   132                           
   133                           	psect	idataBANK1
   134   000946                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _matCGRAM
   138   000946  08                 	db	8
   139   000947  04                 	db	4
   140   000948  04                 	db	4
   141   000949  0A                 	db	10
   142   00094A  11                 	db	17
   143   00094B  1F                 	db	31
   144   00094C  11                 	db	17
   145   00094D  00                 	db	0
   146   00094E  02                 	db	2
   147   00094F  04                 	db	4
   148   000950  0E                 	db	14
   149   000951  11                 	db	17
   150   000952  1F                 	db	31
   151   000953  10                 	db	16
   152   000954  0E                 	db	14
   153   000955  00                 	db	0
   154   000956  02                 	db	2
   155   000957  04                 	db	4
   156   000958  1F                 	db	31
   157   000959  10                 	db	16
   158   00095A  1E                 	db	30
   159   00095B  10                 	db	16
   160   00095C  1F                 	db	31
   161   00095D  00                 	db	0
   162   00095E  08                 	db	8
   163   00095F  04                 	db	4
   164   000960  0E                 	db	14
   165   000961  11                 	db	17
   166   000962  1F                 	db	31
   167   000963  10                 	db	16
   168   000964  0E                 	db	14
   169   000965  00                 	db	0
   170   000966  08                 	db	8
   171   000967  04                 	db	4
   172   000968  1F                 	db	31
   173   000969  10                 	db	16
   174   00096A  1E                 	db	30
   175   00096B  10                 	db	16
   176   00096C  1F                 	db	31
   177   00096D  00                 	db	0
   178   00096E  04                 	db	4
   179   00096F  0A                 	db	10
   180   000970  0E                 	db	14
   181   000971  11                 	db	17
   182   000972  1F                 	db	31
   183   000973  10                 	db	16
   184   000974  0E                 	db	14
   185   000975  00                 	db	0
   186   000976  08                 	db	8
   187   000977  04                 	db	4
   188   000978  0E                 	db	14
   189   000979  01                 	db	1
   190   00097A  0F                 	db	15
   191   00097B  11                 	db	17
   192   00097C  0F                 	db	15
   193   00097D  00                 	db	0
   194   00097E  04                 	db	4
   195   00097F  0A                 	db	10
   196   000980  0E                 	db	14
   197   000981  01                 	db	1
   198   000982  0F                 	db	15
   199   000983  11                 	db	17
   200   000984  0F                 	db	15
   201   000985  00                 	db	0
   202   000000                     _RCREG	set	4014
   203   000000                     _TXREG	set	4013
   204   000000                     _ANSEL	set	3966
   205   000000                     _TRISA	set	3986
   206   000000                     _RCSTAbits	set	4011
   207   000000                     _TXSTAbits	set	4012
   208   000000                     _SPBRG	set	4015
   209   000000                     _SPBRGH	set	4016
   210   000000                     _RCIF	set	31989
   211   000000                     _TRISD	set	3989
   212   000000                     _TRISCbits	set	3988
   213   000000                     _TRISB	set	3987
   214   000000                     _PORTAbits	set	3968
   215   000000                     _PORTB	set	3969
   216   000000                     _PORTD	set	3971
   217   000000                     _PORTC	set	3970
   218   000000                     _BAUDCONbits	set	4024
   219                           
   220                           	psect	smallconst
   221   000600                     __psmallconst:
   222                           	callstack 0
   223   000600  00                 	db	0
   224   000601                     STR_1:
   225   000601  31                 	db	49	;'1'
   226   000602  2D                 	db	45
   227   000603  20                 	db	32
   228   000604  42                 	db	66	;'B'
   229   000605  6F                 	db	111	;'o'
   230   000606  6E                 	db	110	;'n'
   231   000607  68                 	db	104	;'h'
   232   000608  6F                 	db	111	;'o'
   233   000609  6D                 	db	109	;'m'
   234   00060A  6D                 	db	109	;'m'
   235   00060B  65                 	db	101	;'e'
   236   00060C  20                 	db	32
   237   00060D  70                 	db	112	;'p'
   238   00060E  65                 	db	101	;'e'
   239   00060F  6E                 	db	110	;'n'
   240   000610  64                 	db	100	;'d'
   241   000611  75                 	db	117	;'u'
   242   000612  20                 	db	32
   243   000613  20                 	db	32
   244   000614  20                 	db	32
   245   000615  32                 	db	50	;'2'
   246   000616  2D                 	db	45
   247   000617  20                 	db	32
   248   000618  43                 	db	67	;'C'
   249   000619  68                 	db	104	;'h'
   250   00061A  61                 	db	97	;'a'
   251   00061B  72                 	db	114	;'r'
   252   00061C  69                 	db	105	;'i'
   253   00061D  76                 	db	118	;'v'
   254   00061E  61                 	db	97	;'a'
   255   00061F  72                 	db	114	;'r'
   256   000620  69                 	db	105	;'i'
   257   000621  00                 	db	0
   258   000622  31                 	db	49	;'1'
   259   000623  2D                 	db	45
   260   000624  20                 	db	32
   261   000625  42                 	db	66	;'B'
   262   000626  6F                 	db	111	;'o'
   263   000627  6E                 	db	110	;'n'
   264   000628  68                 	db	104	;'h'
   265   000629  6F                 	db	111	;'o'
   266   00062A  6D                 	db	109	;'m'
   267   00062B  6D                 	db	109	;'m'
   268   00062C  65                 	db	101	;'e'
   269   00062D  20                 	db	32
   270   00062E  70                 	db	112	;'p'
   271   00062F  65                 	db	101	;'e'
   272   000630  6E                 	db	110	;'n'
   273   000631  64                 	db	100	;'d'
   274   000632  75                 	db	117	;'u'
   275   000633  0A                 	db	10
   276   000634  32                 	db	50	;'2'
   277   000635  2D                 	db	45
   278   000636  20                 	db	32
   279   000637  43                 	db	67	;'C'
   280   000638  68                 	db	104	;'h'
   281   000639  61                 	db	97	;'a'
   282   00063A  72                 	db	114	;'r'
   283   00063B  69                 	db	105	;'i'
   284   00063C  76                 	db	118	;'v'
   285   00063D  61                 	db	97	;'a'
   286   00063E  72                 	db	114	;'r'
   287   00063F  69                 	db	105	;'i'
   288   000640  0A                 	db	10
   289   000641  00                 	db	0
   290   000642  00                 	db	0	; dummy byte at the end
   291   000000                     
   292                           ; #config settings
   293                           
   294                           	psect	cinit
   295   000878                     __pcinit:
   296                           	callstack 0
   297   000878                     start_initialization:
   298                           	callstack 0
   299   000878                     __initialization:
   300                           	callstack 0
   301                           
   302                           ; Initialize objects allocated to BANK1 (64 bytes)
   303                           ; load TBLPTR registers with __pidataBANK1
   304   000878  0E46               	movlw	low __pidataBANK1
   305   00087A  6EF6               	movwf	tblptrl,c
   306   00087C  0E09               	movlw	high __pidataBANK1
   307   00087E  6EF7               	movwf	tblptrh,c
   308   000880  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   309   000882  6EF8               	movwf	tblptru,c
   310   000884  EE01  F000         	lfsr	0,__pdataBANK1
   311   000888  EE10 F040          	lfsr	1,64
   312   00088C                     copy_data0:
   313   00088C  0009               	tblrd		*+
   314   00088E  CFF5 FFEE          	movff	tablat,postinc0
   315   000892  50E5               	movf	postdec1,w,c
   316   000894  50E1               	movf	fsr1l,w,c
   317   000896  E1FA               	bnz	copy_data0
   318                           
   319                           ; Initialize objects allocated to BANK0 (69 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321   000898  0EBE               	movlw	low __pidataBANK0
   322   00089A  6EF6               	movwf	tblptrl,c
   323   00089C  0E08               	movlw	high __pidataBANK0
   324   00089E  6EF7               	movwf	tblptrh,c
   325   0008A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326   0008A2  6EF8               	movwf	tblptru,c
   327   0008A4  EE00  F060         	lfsr	0,__pdataBANK0
   328   0008A8  EE10 F045          	lfsr	1,69
   329   0008AC                     copy_data1:
   330   0008AC  0009               	tblrd		*+
   331   0008AE  CFF5 FFEE          	movff	tablat,postinc0
   332   0008B2  50E5               	movf	postdec1,w,c
   333   0008B4  50E1               	movf	fsr1l,w,c
   334   0008B6  E1FA               	bnz	copy_data1
   335   0008B8                     end_of_initialization:
   336                           	callstack 0
   337   0008B8                     __end_of__initialization:
   338                           	callstack 0
   339   0008B8  0100               	movlb	0
   340   0008BA  EFDD  F004         	goto	_main	;jump to C main() function
   341                           
   342                           	psect	dataBANK0
   343   000060                     __pdataBANK0:
   344                           	callstack 0
   345   000060                     main@F2604:
   346                           	callstack 0
   347   000060                     	ds	45
   348   00008D                     setDel@F2614:
   349                           	callstack 0
   350   00008D                     	ds	12
   351   000099                     setDel@F2612:
   352                           	callstack 0
   353   000099                     	ds	12
   354                           
   355                           	psect	dataBANK1
   356   000100                     __pdataBANK1:
   357                           	callstack 0
   358   000100                     _matCGRAM:
   359                           	callstack 0
   360   000100                     	ds	64
   361                           
   362                           	psect	cstackBANK0
   363   0000A5                     __pcstackBANK0:
   364                           	callstack 0
   365   0000A5                     ??_lcd_ecrireDonnees:
   366   0000A5                     ??_lcd_busy:
   367   0000A5                     
   368                           ; 1 bytes @ 0x0
   369   0000A5                     	ds	1
   370   0000A6                     lcd_ecrireDonnees@donnee:
   371                           	callstack 0
   372   0000A6                     lcd_busy@adresse:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1
   376   0000A6                     	ds	1
   377   0000A7                     ??_lcd_resetSequence:
   378   0000A7                     lcd_wrCom@commande:
   379                           	callstack 0
   380   0000A7                     lcd_wrData@caractere:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x2
   384   0000A7                     	ds	1
   385   0000A8                     ??_lcd_initCGRam:
   386   0000A8                     lcd_ecritChar@car:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x3
   390   0000A8                     	ds	1
   391   0000A9                     lcd_ecritChar@posRam:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x4
   395   0000A9                     	ds	1
   396   0000AA                     lcd_initCGRam@i:
   397                           	callstack 0
   398   0000AA                     lcd_putMessage@chaine:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x5
   402   0000AA                     	ds	1
   403   0000AB                     lcd_initCGRam@j:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x6
   407   0000AB                     	ds	1
   408   0000AC                     ??_lcd_putMessage:
   409                           
   410                           ; 1 bytes @ 0x7
   411   0000AC                     	ds	2
   412   0000AE                     lcd_putMessage@j:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x9
   416   0000AE                     	ds	1
   417   0000AF                     main@messages:
   418                           	callstack 0
   419                           
   420                           ; 45 bytes @ 0xA
   421   0000AF                     	ds	45
   422                           
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 50 in file "main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  messages       45   10[BANK0 ] unsigned char [15][3]
   433 ;;  trouve         15    0        unsigned char [15]
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   443 ;;      Params:         0       0       0       0       0       0       0
   444 ;;      Locals:         0      45       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0
   446 ;;      Totals:         0      45       0       0       0       0       0
   447 ;;Total ram usage:       45 bytes
   448 ;; Hardware stack levels required when called: 6
   449 ;; This function calls:
   450 ;;		_initialisation
   451 ;;		_lcd_init
   452 ;;		_lcd_putMessage
   453 ;; This function is called by:
   454 ;;		Startup code after reset
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text0
   459   0009BA                     __ptext0:
   460                           	callstack 0
   461   0009BA                     _main:
   462                           	callstack 25
   463   0009BA                     
   464                           ;main.c: 52: initialisation();
   465   0009BA  EC18  F005         	call	_initialisation	;wreg free
   466   0009BE                     
   467                           ;main.c: 53: lcd_init();
   468   0009BE  ECF6  F004         	call	_lcd_init	;wreg free
   469   0009C2                     
   470                           ;main.c: 54: lcd_putMessage("1- Bonhomme pendu   2- Charivari");
   471   0009C2  0E01               	movlw	low STR_1
   472   0009C4  0100               	movlb	0	; force () banked
   473   0009C6  6FAA               	movwf	lcd_putMessage@chaine& (0+255),b
   474   0009C8  0E06               	movlw	high STR_1
   475   0009CA  6FAB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   476   0009CC  EC71  F003         	call	_lcd_putMessage	;wreg free
   477   0009D0                     
   478                           ;main.c: 56: char trouve[15];;main.c: 57: char messages[3][15] = {"1erMot","2eMot","3eMo
      +                          t" };
   479   0009D0  EE20  F060         	lfsr	2,main@F2604
   480   0009D4  EE10  F0AF         	lfsr	1,main@messages
   481   0009D8  0E2C               	movlw	44
   482   0009DA                     u331:
   483   0009DA  CFDB FFE3          	movff	plusw2,plusw1
   484   0009DE  06E8               	decf	wreg,f,c
   485   0009E0  E2FC               	bc	u331
   486   0009E2                     
   487                           ;main.c: 60: __nop();
   488   0009E2  F000               	nop	
   489   0009E4                     l27:
   490   0009E4  EFF2  F004         	goto	l27
   491   0009E8  EF00  F000         	goto	start
   492   0009EC                     __end_of_main:
   493                           	callstack 0
   494                           
   495 ;; *************** function _lcd_putMessage *****************
   496 ;; Defined at:
   497 ;;		line 387 in file "Lcd4Lignes.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  chaine          2    5[BANK0 ] PTR const unsigned char 
   500 ;;		 -> STR_2(32), STR_1(33), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  j               1    9[BANK0 ] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       2       0       0       0       0       0
   513 ;;      Locals:         0       1       0       0       0       0       0
   514 ;;      Temps:          0       2       0       0       0       0       0
   515 ;;      Totals:         0       5       0       0       0       0       0
   516 ;;Total ram usage:        5 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 4
   519 ;; This function calls:
   520 ;;		_lcd_ecritChar
   521 ;; This function is called by:
   522 ;;		_main
   523 ;;		_MenuAccueil
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text1
   528   0006E2                     __ptext1:
   529                           	callstack 0
   530   0006E2                     _lcd_putMessage:
   531                           	callstack 26
   532   0006E2                     
   533                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
   534   0006E2  0E00               	movlw	0
   535   0006E4  0100               	movlb	0	; force () banked
   536   0006E6  6FAE               	movwf	lcd_putMessage@j& (0+255),b
   537   0006E8  EF8C  F003         	goto	l1475
   538   0006EC                     l1471:
   539                           
   540                           ; BSR set to: 0
   541                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
   542   0006EC  0100               	movlb	0	; force () banked
   543   0006EE  51AE               	movf	lcd_putMessage@j& (0+255),w,b
   544   0006F0  0100               	movlb	0	; force () banked
   545   0006F2  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
   546   0006F4  0100               	movlb	0	; force () banked
   547   0006F6  6FAC               	movwf	??_lcd_putMessage& (0+255),b
   548   0006F8  0E00               	movlw	0
   549   0006FA  0100               	movlb	0	; force () banked
   550   0006FC  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   551   0006FE  0100               	movlb	0	; force () banked
   552   000700  6FAD               	movwf	(??_lcd_putMessage+1)& (0+255),b
   553   000702  C0AC  FFF6         	movff	??_lcd_putMessage,tblptrl
   554   000706  C0AD  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   555   00070A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   556   00070A  6AF8               	clrf	tblptru,c
   557   00070C                     	endif
   558   00070C                     	if	0	;tblptru may be non-zero
   559   00070C                     	endif
   560   00070C  0008               	tblrd		*
   561   00070E  50F5               	movf	tablat,w,c
   562   000710  EC12  F004         	call	_lcd_ecritChar
   563   000714  0100               	movlb	0	; force () banked
   564   000716  2BAE               	incf	lcd_putMessage@j& (0+255),f,b
   565   000718                     l1475:
   566                           
   567                           ; BSR set to: 0
   568   000718  0100               	movlb	0	; force () banked
   569   00071A  51AE               	movf	lcd_putMessage@j& (0+255),w,b
   570   00071C  0100               	movlb	0	; force () banked
   571   00071E  25AA               	addwf	lcd_putMessage@chaine& (0+255),w,b
   572   000720  0100               	movlb	0	; force () banked
   573   000722  6FAC               	movwf	??_lcd_putMessage& (0+255),b
   574   000724  0E00               	movlw	0
   575   000726  0100               	movlb	0	; force () banked
   576   000728  21AB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
   577   00072A  0100               	movlb	0	; force () banked
   578   00072C  6FAD               	movwf	(??_lcd_putMessage+1)& (0+255),b
   579   00072E  C0AC  FFF6         	movff	??_lcd_putMessage,tblptrl
   580   000732  C0AD  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   581   000736                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   582   000736  6AF8               	clrf	tblptru,c
   583   000738                     	endif
   584   000738                     	if	0	;tblptru may be non-zero
   585   000738                     	endif
   586   000738  0008               	tblrd		*
   587   00073A  50F5               	movf	tablat,w,c
   588   00073C  0900               	iorlw	0
   589   00073E  A4D8               	btfss	status,2,c
   590   000740  EFA4  F003         	goto	u311
   591   000744  EFA6  F003         	goto	u310
   592   000748                     u311:
   593   000748  EF76  F003         	goto	l1471
   594   00074C                     u310:
   595   00074C                     
   596                           ; BSR set to: 0
   597   00074C  0012               	return		;funcret
   598   00074E                     __end_of_lcd_putMessage:
   599                           	callstack 0
   600                           
   601 ;; *************** function _lcd_ecritChar *****************
   602 ;; Defined at:
   603 ;;		line 359 in file "Lcd4Lignes.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  car             1    wreg     unsigned char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  car             1    3[BANK0 ] unsigned char 
   608 ;;  posRam          1    4[BANK0 ] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   618 ;;      Params:         0       0       0       0       0       0       0
   619 ;;      Locals:         0       2       0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0
   621 ;;      Totals:         0       2       0       0       0       0       0
   622 ;;Total ram usage:        2 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 3
   625 ;; This function calls:
   626 ;;		_lcd_wrCom
   627 ;;		_lcd_wrData
   628 ;; This function is called by:
   629 ;;		_lcd_putMessage
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text2
   634   000824                     __ptext2:
   635                           	callstack 0
   636   000824                     _lcd_ecritChar:
   637                           	callstack 26
   638                           
   639                           ; BSR set to: 0
   640                           ;incstack = 0
   641                           ;lcd_ecritChar@car stored from wreg
   642   000824  0100               	movlb	0	; force () banked
   643   000826  6FA8               	movwf	lcd_ecritChar@car& (0+255),b
   644   000828                     
   645                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
   646   000828  0100               	movlb	0	; force () banked
   647   00082A  51A8               	movf	lcd_ecritChar@car& (0+255),w,b
   648   00082C  ECC3  F004         	call	_lcd_wrData
   649   000830  0100               	movlb	0	; force () banked
   650   000832  6FA9               	movwf	lcd_ecritChar@posRam& (0+255),b
   651                           
   652                           ;Lcd4Lignes.c: 364: switch(posRam)
   653   000834  EF2B  F004         	goto	l1463
   654   000838                     l1455:
   655                           
   656                           ; BSR set to: 0
   657                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
   658   000838  0EC0               	movlw	192
   659   00083A  ECA7  F003         	call	_lcd_wrCom
   660                           
   661                           ;Lcd4Lignes.c: 368: break;
   662   00083E  EF3B  F004         	goto	l179
   663   000842                     l1457:
   664                           
   665                           ; BSR set to: 0
   666                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
   667   000842  0E94               	movlw	148
   668   000844  ECA7  F003         	call	_lcd_wrCom
   669                           
   670                           ;Lcd4Lignes.c: 371: break;
   671   000848  EF3B  F004         	goto	l179
   672   00084C                     l1459:
   673                           
   674                           ; BSR set to: 0
   675                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
   676   00084C  0ED4               	movlw	212
   677   00084E  ECA7  F003         	call	_lcd_wrCom
   678                           
   679                           ;Lcd4Lignes.c: 374: break;
   680   000852  EF3B  F004         	goto	l179
   681   000856                     l1463:
   682                           
   683                           ; BSR set to: 0
   684   000856  0100               	movlb	0	; force () banked
   685   000858  51A9               	movf	lcd_ecritChar@posRam& (0+255),w,b
   686                           
   687                           ; Switch size 1, requested type "simple"
   688                           ; Number of cases is 3, Range of values is 148 to 212
   689                           ; switch strategies available:
   690                           ; Name         Instructions Cycles
   691                           ; simple_byte           10     6 (average)
   692                           ;	Chosen strategy is simple_byte
   693   00085A  0A94               	xorlw	148	; case 148
   694   00085C  B4D8               	btfsc	status,2,c
   695   00085E  EF1C  F004         	goto	l1455
   696   000862  0A54               	xorlw	84	; case 192
   697   000864  B4D8               	btfsc	status,2,c
   698   000866  EF26  F004         	goto	l1459
   699   00086A  0A14               	xorlw	20	; case 212
   700   00086C  B4D8               	btfsc	status,2,c
   701   00086E  EF21  F004         	goto	l1457
   702   000872  EF3B  F004         	goto	l179
   703   000876                     l179:
   704   000876  0012               	return		;funcret
   705   000878                     __end_of_lcd_ecritChar:
   706                           	callstack 0
   707                           
   708 ;; *************** function _lcd_init *****************
   709 ;; Defined at:
   710 ;;		line 258 in file "Lcd4Lignes.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   724 ;;      Params:         0       0       0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 5
   731 ;; This function calls:
   732 ;;		_lcd_initCGRam
   733 ;;		_lcd_resetSequence
   734 ;;		_lcd_wrCom
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text3
   741   0009EC                     __ptext3:
   742                           	callstack 0
   743   0009EC                     _lcd_init:
   744                           	callstack 25
   745   0009EC                     
   746                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
   747   0009EC  ECDD  F003         	call	_lcd_resetSequence	;wreg free
   748                           
   749                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
   750   0009F0  0E28               	movlw	40
   751   0009F2  ECA7  F003         	call	_lcd_wrCom
   752                           
   753                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
   754   0009F6  0E0F               	movlw	15
   755   0009F8  ECA7  F003         	call	_lcd_wrCom
   756                           
   757                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
   758   0009FC  0E01               	movlw	1
   759   0009FE  ECA7  F003         	call	_lcd_wrCom
   760                           
   761                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
   762   000A02  0E06               	movlw	6
   763   000A04  ECA7  F003         	call	_lcd_wrCom
   764                           
   765                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
   766   000A08  0E80               	movlw	128
   767   000A0A  ECA7  F003         	call	_lcd_wrCom
   768   000A0E                     
   769                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
   770   000A0E  EC22  F003         	call	_lcd_initCGRam	;wreg free
   771   000A12  0012               	return		;funcret
   772   000A14                     __end_of_lcd_init:
   773                           	callstack 0
   774                           
   775 ;; *************** function _lcd_resetSequence *****************
   776 ;; Defined at:
   777 ;;		line 221 in file "Lcd4Lignes.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   791 ;;      Params:         0       0       0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0       0
   793 ;;      Temps:          0       1       0       0       0       0       0
   794 ;;      Totals:         0       1       0       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 1
   798 ;; This function calls:
   799 ;;		_lcd_ecrireDonnees
   800 ;;		_lcd_strobeEnableBit
   801 ;; This function is called by:
   802 ;;		_lcd_init
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text4
   807   0007BA                     __ptext4:
   808                           	callstack 0
   809   0007BA                     _lcd_resetSequence:
   810                           	callstack 28
   811   0007BA                     
   812                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
   813   0007BA  0E00               	movlw	0
   814   0007BC  6E95               	movwf	149,c	;volatile
   815   0007BE                     
   816                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
   817   0007BE  0E0D               	movlw	13
   818   0007C0  0100               	movlb	0	; force () banked
   819   0007C2  6FA7               	movwf	??_lcd_resetSequence& (0+255),b
   820   0007C4  0EFB               	movlw	251
   821   0007C6                     u347:
   822   0007C6  2EE8               	decfsz	wreg,f,c
   823   0007C8  D7FE               	bra	u347
   824   0007CA  2FA7               	decfsz	??_lcd_resetSequence& (0+255),f,b
   825   0007CC  D7FC               	bra	u347
   826   0007CE  F000 F000          	nop2	
   827   0007D2                     
   828                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
   829   0007D2  9080               	bcf	128,0,c	;volatile
   830   0007D4                     
   831                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
   832   0007D4  9280               	bcf	128,1,c	;volatile
   833   0007D6                     
   834                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
   835   0007D6  0E03               	movlw	3
   836   0007D8  EC0A  F005         	call	_lcd_ecrireDonnees
   837   0007DC                     
   838                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
   839   0007DC  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
   840   0007E0                     
   841                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
   842   0007E0  0E03               	movlw	3
   843   0007E2                     u357:
   844   0007E2  2EE8               	decfsz	wreg,f,c
   845   0007E4  D7FE               	bra	u357
   846   0007E6  F000               	nop	
   847   0007E8                     
   848                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
   849   0007E8  0E03               	movlw	3
   850   0007EA  EC0A  F005         	call	_lcd_ecrireDonnees
   851   0007EE                     
   852                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
   853   0007EE  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
   854   0007F2                     
   855                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
   856   0007F2  0E03               	movlw	3
   857   0007F4                     u367:
   858   0007F4  2EE8               	decfsz	wreg,f,c
   859   0007F6  D7FE               	bra	u367
   860   0007F8  F000               	nop	
   861   0007FA                     
   862                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
   863   0007FA  0E03               	movlw	3
   864   0007FC  EC0A  F005         	call	_lcd_ecrireDonnees
   865   000800                     
   866                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
   867   000800  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
   868   000804                     
   869                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
   870   000804  0E03               	movlw	3
   871   000806                     u377:
   872   000806  2EE8               	decfsz	wreg,f,c
   873   000808  D7FE               	bra	u377
   874   00080A  F000               	nop	
   875   00080C                     
   876                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
   877   00080C  0E02               	movlw	2
   878   00080E  EC0A  F005         	call	_lcd_ecrireDonnees
   879   000812                     
   880                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
   881   000812  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
   882   000816                     
   883                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
   884   000816  0E03               	movlw	3
   885   000818                     u387:
   886   000818  2EE8               	decfsz	wreg,f,c
   887   00081A  D7FE               	bra	u387
   888   00081C  F000               	nop	
   889   00081E                     
   890                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
   891   00081E  0E0F               	movlw	15
   892   000820  6E95               	movwf	149,c	;volatile
   893   000822  0012               	return		;funcret
   894   000824                     __end_of_lcd_resetSequence:
   895                           	callstack 0
   896                           
   897 ;; *************** function _lcd_initCGRam *****************
   898 ;; Defined at:
   899 ;;		line 417 in file "Lcd4Lignes.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  j               1    6[BANK0 ] unsigned char 
   904 ;;  i               1    5[BANK0 ] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       2       0       0       0       0       0
   916 ;;      Temps:          0       2       0       0       0       0       0
   917 ;;      Totals:         0       4       0       0       0       0       0
   918 ;;Total ram usage:        4 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 4
   921 ;; This function calls:
   922 ;;		_lcd_curseurHome
   923 ;;		_lcd_wrCom
   924 ;;		_lcd_wrData
   925 ;; This function is called by:
   926 ;;		_lcd_init
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text5
   931   000644                     __ptext5:
   932                           	callstack 0
   933   000644                     _lcd_initCGRam:
   934                           	callstack 25
   935   000644                     
   936                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
   937   000644  0E40               	movlw	64
   938   000646  ECA7  F003         	call	_lcd_wrCom
   939   00064A                     
   940                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
   941   00064A  0E00               	movlw	0
   942   00064C  0100               	movlb	0	; force () banked
   943   00064E  6FAA               	movwf	lcd_initCGRam@i& (0+255),b
   944   000650                     
   945                           ; BSR set to: 0
   946   000650  0E07               	movlw	7
   947   000652  0100               	movlb	0	; force () banked
   948   000654  65AA               	cpfsgt	lcd_initCGRam@i& (0+255),b
   949   000656  EF2F  F003         	goto	u271
   950   00065A  EF31  F003         	goto	u270
   951   00065E                     u271:
   952   00065E  EF33  F003         	goto	l1435
   953   000662                     u270:
   954   000662  EF6E  F003         	goto	l1451
   955   000666                     l1435:
   956                           
   957                           ; BSR set to: 0
   958                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
   959   000666  0E00               	movlw	0
   960   000668  0100               	movlb	0	; force () banked
   961   00066A  6FAB               	movwf	lcd_initCGRam@j& (0+255),b
   962   00066C                     
   963                           ; BSR set to: 0
   964   00066C  0E07               	movlw	7
   965   00066E  0100               	movlb	0	; force () banked
   966   000670  65AB               	cpfsgt	lcd_initCGRam@j& (0+255),b
   967   000672  EF3D  F003         	goto	u281
   968   000676  EF3F  F003         	goto	u280
   969   00067A                     u281:
   970   00067A  EF41  F003         	goto	l1441
   971   00067E                     u280:
   972   00067E  EF63  F003         	goto	l1447
   973   000682                     l1441:
   974                           
   975                           ; BSR set to: 0
   976                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
   977   000682  0100               	movlb	0	; force () banked
   978   000684  51AA               	movf	lcd_initCGRam@i& (0+255),w,b
   979   000686  0D08               	mullw	8
   980   000688  0E00               	movlw	low _matCGRAM
   981   00068A  24F3               	addwf	243,w,c
   982   00068C  0100               	movlb	0	; force () banked
   983   00068E  6FA8               	movwf	??_lcd_initCGRam& (0+255),b
   984   000690  0E01               	movlw	high _matCGRAM
   985   000692  20F4               	addwfc	prodh,w,c
   986   000694  6FA9               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   987   000696  0100               	movlb	0	; force () banked
   988   000698  51AB               	movf	lcd_initCGRam@j& (0+255),w,b
   989   00069A  0100               	movlb	0	; force () banked
   990   00069C  25A8               	addwf	??_lcd_initCGRam& (0+255),w,b
   991   00069E  6ED9               	movwf	fsr2l,c
   992   0006A0  0100               	movlb	0	; force () banked
   993   0006A2  0E00               	movlw	0
   994   0006A4  0100               	movlb	0	; force () banked
   995   0006A6  21A9               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   996   0006A8  6EDA               	movwf	fsr2h,c
   997   0006AA  50DF               	movf	indf2,w,c
   998   0006AC  ECC3  F004         	call	_lcd_wrData
   999   0006B0  0100               	movlb	0	; force () banked
  1000   0006B2  2BAB               	incf	lcd_initCGRam@j& (0+255),f,b
  1001   0006B4                     
  1002                           ; BSR set to: 0
  1003   0006B4  0E07               	movlw	7
  1004   0006B6  0100               	movlb	0	; force () banked
  1005   0006B8  65AB               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1006   0006BA  EF61  F003         	goto	u291
  1007   0006BE  EF63  F003         	goto	u290
  1008   0006C2                     u291:
  1009   0006C2  EF41  F003         	goto	l1441
  1010   0006C6                     u290:
  1011   0006C6                     l1447:
  1012                           
  1013                           ; BSR set to: 0
  1014   0006C6  0100               	movlb	0	; force () banked
  1015   0006C8  2BAA               	incf	lcd_initCGRam@i& (0+255),f,b
  1016   0006CA                     
  1017                           ; BSR set to: 0
  1018   0006CA  0E07               	movlw	7
  1019   0006CC  0100               	movlb	0	; force () banked
  1020   0006CE  65AA               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1021   0006D0  EF6C  F003         	goto	u301
  1022   0006D4  EF6E  F003         	goto	u300
  1023   0006D8                     u301:
  1024   0006D8  EF33  F003         	goto	l1435
  1025   0006DC                     u300:
  1026   0006DC                     l1451:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  1030   0006DC  EC1F  F005         	call	_lcd_curseurHome	;wreg free
  1031   0006E0  0012               	return		;funcret
  1032   0006E2                     __end_of_lcd_initCGRam:
  1033                           	callstack 0
  1034                           
  1035 ;; *************** function _lcd_wrData *****************
  1036 ;; Defined at:
  1037 ;;		line 188 in file "Lcd4Lignes.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  caractere       1    wreg     unsigned char 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  caractere       1    2[BANK0 ] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      unsigned char 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1051 ;;      Params:         0       0       0       0       0       0       0
  1052 ;;      Locals:         0       1       0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0       0       0
  1054 ;;      Totals:         0       1       0       0       0       0       0
  1055 ;;Total ram usage:        1 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 2
  1058 ;; This function calls:
  1059 ;;		_lcd_busy
  1060 ;;		_lcd_ecrireDonnees
  1061 ;;		_lcd_strobeEnableBit
  1062 ;; This function is called by:
  1063 ;;		_lcd_ecritChar
  1064 ;;		_lcd_initCGRam
  1065 ;;		_lcd_effaceChar
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text6
  1070   000986                     __ptext6:
  1071                           	callstack 0
  1072   000986                     _lcd_wrData:
  1073                           	callstack 26
  1074                           
  1075                           ;incstack = 0
  1076                           ;lcd_wrData@caractere stored from wreg
  1077   000986  0100               	movlb	0	; force () banked
  1078   000988  6FA7               	movwf	lcd_wrData@caractere& (0+255),b
  1079   00098A                     
  1080                           ;Lcd4Lignes.c: 190: lcd_busy();
  1081   00098A  EC82  F004         	call	_lcd_busy	;wreg free
  1082   00098E                     
  1083                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  1084   00098E  0E00               	movlw	0
  1085   000990  6E95               	movwf	149,c	;volatile
  1086   000992                     
  1087                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  1088   000992  8080               	bsf	128,0,c	;volatile
  1089   000994                     
  1090                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  1091   000994  9280               	bcf	128,1,c	;volatile
  1092   000996                     
  1093                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  1094   000996  0100               	movlb	0	; force () banked
  1095   000998  39A7               	swapf	lcd_wrData@caractere& (0+255),w,b
  1096   00099A  0B0F               	andlw	15
  1097   00099C  EC0A  F005         	call	_lcd_ecrireDonnees
  1098   0009A0                     
  1099                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  1100   0009A0  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
  1101   0009A4                     
  1102                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  1103   0009A4  0100               	movlb	0	; force () banked
  1104   0009A6  51A7               	movf	lcd_wrData@caractere& (0+255),w,b
  1105   0009A8  EC0A  F005         	call	_lcd_ecrireDonnees
  1106   0009AC                     
  1107                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  1108   0009AC  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
  1109   0009B0                     
  1110                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  1111   0009B0  0E0F               	movlw	15
  1112   0009B2  6E95               	movwf	149,c	;volatile
  1113   0009B4                     
  1114                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  1115                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  1116   0009B4  EC82  F004         	call	_lcd_busy	;wreg free
  1117   0009B8  0012               	return		;funcret
  1118   0009BA                     __end_of_lcd_wrData:
  1119                           	callstack 0
  1120                           
  1121 ;; *************** function _lcd_curseurHome *****************
  1122 ;; Defined at:
  1123 ;;		line 288 in file "Lcd4Lignes.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1137 ;;      Params:         0       0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 3
  1144 ;; This function calls:
  1145 ;;		_lcd_wrCom
  1146 ;; This function is called by:
  1147 ;;		_lcd_initCGRam
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text7
  1152   000A3E                     __ptext7:
  1153                           	callstack 0
  1154   000A3E                     _lcd_curseurHome:
  1155                           	callstack 25
  1156   000A3E                     
  1157                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  1158   000A3E  0E02               	movlw	2
  1159   000A40  ECA7  F003         	call	_lcd_wrCom
  1160   000A44  0012               	return		;funcret
  1161   000A46                     __end_of_lcd_curseurHome:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcd_wrCom *****************
  1165 ;; Defined at:
  1166 ;;		line 156 in file "Lcd4Lignes.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  commande        1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  commande        1    2[BANK0 ] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      unsigned char 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         0       0       0       0       0       0       0
  1181 ;;      Locals:         0       1       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0
  1183 ;;      Totals:         0       1       0       0       0       0       0
  1184 ;;Total ram usage:        1 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 2
  1187 ;; This function calls:
  1188 ;;		_lcd_busy
  1189 ;;		_lcd_ecrireDonnees
  1190 ;;		_lcd_strobeEnableBit
  1191 ;; This function is called by:
  1192 ;;		_lcd_init
  1193 ;;		_lcd_curseurHome
  1194 ;;		_lcd_ecritChar
  1195 ;;		_lcd_initCGRam
  1196 ;;		_lcd_effaceAffichage
  1197 ;;		_lcd_gotoXY
  1198 ;;		_lcd_cacheCurseur
  1199 ;;		_lcd_montreCurseur
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text8
  1204   00074E                     __ptext8:
  1205                           	callstack 0
  1206   00074E                     _lcd_wrCom:
  1207                           	callstack 26
  1208                           
  1209                           ;incstack = 0
  1210                           ;lcd_wrCom@commande stored from wreg
  1211   00074E  0100               	movlb	0	; force () banked
  1212   000750  6FA7               	movwf	lcd_wrCom@commande& (0+255),b
  1213   000752                     
  1214                           ;Lcd4Lignes.c: 158: lcd_busy();
  1215   000752  EC82  F004         	call	_lcd_busy	;wreg free
  1216   000756                     
  1217                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  1218   000756  0E00               	movlw	0
  1219   000758  6E95               	movwf	149,c	;volatile
  1220   00075A                     
  1221                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  1222   00075A  9080               	bcf	128,0,c	;volatile
  1223   00075C                     
  1224                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  1225   00075C  9280               	bcf	128,1,c	;volatile
  1226   00075E                     
  1227                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  1228   00075E  0100               	movlb	0	; force () banked
  1229   000760  39A7               	swapf	lcd_wrCom@commande& (0+255),w,b
  1230   000762  0B0F               	andlw	15
  1231   000764  EC0A  F005         	call	_lcd_ecrireDonnees
  1232   000768                     
  1233                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  1234   000768  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
  1235   00076C                     
  1236                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  1237   00076C  0100               	movlb	0	; force () banked
  1238   00076E  51A7               	movf	lcd_wrCom@commande& (0+255),w,b
  1239   000770  EC0A  F005         	call	_lcd_ecrireDonnees
  1240   000774                     
  1241                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  1242   000774  EC23  F005         	call	_lcd_strobeEnableBit	;wreg free
  1243   000778                     
  1244                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1245   000778  0E03               	movlw	3
  1246   00077A                     u397:
  1247   00077A  2EE8               	decfsz	wreg,f,c
  1248   00077C  D7FE               	bra	u397
  1249   00077E  F000               	nop	
  1250   000780                     
  1251                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  1252   000780  0100               	movlb	0	; force () banked
  1253   000782  05A7               	decf	lcd_wrCom@commande& (0+255),w,b
  1254   000784  B4D8               	btfsc	status,2,c
  1255   000786  EFC7  F003         	goto	u251
  1256   00078A  EFC9  F003         	goto	u250
  1257   00078E                     u251:
  1258   00078E  EFD3  F003         	goto	l1353
  1259   000792                     u250:
  1260   000792                     
  1261                           ; BSR set to: 0
  1262   000792  0E02               	movlw	2
  1263   000794  0100               	movlb	0	; force () banked
  1264   000796  19A7               	xorwf	lcd_wrCom@commande& (0+255),w,b
  1265   000798  A4D8               	btfss	status,2,c
  1266   00079A  EFD1  F003         	goto	u261
  1267   00079E  EFD3  F003         	goto	u260
  1268   0007A2                     u261:
  1269   0007A2  EFD8  F003         	goto	l1355
  1270   0007A6                     u260:
  1271   0007A6                     l1353:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  1275   0007A6  0EA6               	movlw	166
  1276   0007A8                     u407:
  1277   0007A8  2EE8               	decfsz	wreg,f,c
  1278   0007AA  D7FE               	bra	u407
  1279   0007AC  F000 F000          	nop2	
  1280   0007B0                     l1355:
  1281                           
  1282                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  1283   0007B0  0E0F               	movlw	15
  1284   0007B2  6E95               	movwf	149,c	;volatile
  1285   0007B4                     
  1286                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  1287   0007B4  EC82  F004         	call	_lcd_busy	;wreg free
  1288   0007B8  0012               	return		;funcret
  1289   0007BA                     __end_of_lcd_wrCom:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _lcd_strobeEnableBit *****************
  1293 ;; Defined at:
  1294 ;;		line 431 in file "Lcd4Lignes.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		None
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1308 ;;      Params:         0       0       0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_lcd_wrCom
  1318 ;;		_lcd_wrData
  1319 ;;		_lcd_resetSequence
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text9
  1324   000A46                     __ptext9:
  1325                           	callstack 0
  1326   000A46                     _lcd_strobeEnableBit:
  1327                           	callstack 27
  1328   000A46                     
  1329                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  1330   000A46  8480               	bsf	128,2,c	;volatile
  1331                           
  1332                           ;Lcd4Lignes.c: 434: __nop();
  1333   000A48  F000               	nop	
  1334                           
  1335                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  1336   000A4A  9480               	bcf	128,2,c	;volatile
  1337   000A4C  0012               	return		;funcret
  1338   000A4E                     __end_of_lcd_strobeEnableBit:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _lcd_ecrireDonnees *****************
  1342 ;; Defined at:
  1343 ;;		line 107 in file "Lcd4Lignes.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  donnee          1    wreg     unsigned char 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  donnee          1    1[BANK0 ] unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         0       0       0       0       0       0       0
  1358 ;;      Locals:         0       1       0       0       0       0       0
  1359 ;;      Temps:          0       1       0       0       0       0       0
  1360 ;;      Totals:         0       2       0       0       0       0       0
  1361 ;;Total ram usage:        2 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_lcd_wrCom
  1367 ;;		_lcd_wrData
  1368 ;;		_lcd_resetSequence
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text10
  1373   000A14                     __ptext10:
  1374                           	callstack 0
  1375   000A14                     _lcd_ecrireDonnees:
  1376                           	callstack 27
  1377                           
  1378                           ;incstack = 0
  1379                           ;lcd_ecrireDonnees@donnee stored from wreg
  1380   000A14  0100               	movlb	0	; force () banked
  1381   000A16  6FA6               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  1382   000A18                     
  1383                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  1384   000A18  CF83 F0A5          	movff	3971,??_lcd_ecrireDonnees	;volatile
  1385   000A1C  0EF0               	movlw	240
  1386   000A1E  0100               	movlb	0	; force () banked
  1387   000A20  17A5               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  1388   000A22  0100               	movlb	0	; force () banked
  1389   000A24  51A6               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  1390   000A26  0B0F               	andlw	15
  1391   000A28  0100               	movlb	0	; force () banked
  1392   000A2A  11A5               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  1393   000A2C  6E83               	movwf	131,c	;volatile
  1394   000A2E                     
  1395                           ; BSR set to: 0
  1396   000A2E  0012               	return		;funcret
  1397   000A30                     __end_of_lcd_ecrireDonnees:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _lcd_busy *****************
  1401 ;; Defined at:
  1402 ;;		line 124 in file "Lcd4Lignes.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  adresse         1    1[BANK0 ] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      unsigned char 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1416 ;;      Params:         0       0       0       0       0       0       0
  1417 ;;      Locals:         0       1       0       0       0       0       0
  1418 ;;      Temps:          0       1       0       0       0       0       0
  1419 ;;      Totals:         0       2       0       0       0       0       0
  1420 ;;Total ram usage:        2 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 1
  1423 ;; This function calls:
  1424 ;;		_lcd_lireDonnees
  1425 ;; This function is called by:
  1426 ;;		_lcd_wrCom
  1427 ;;		_lcd_wrData
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text11
  1432   000904                     __ptext11:
  1433                           	callstack 0
  1434   000904                     _lcd_busy:
  1435                           	callstack 26
  1436   000904                     
  1437                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  1438   000904  9080               	bcf	128,0,c	;volatile
  1439                           
  1440                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  1441   000906  8280               	bsf	128,1,c	;volatile
  1442   000908                     l130:
  1443                           
  1444                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  1445   000908  8480               	bsf	128,2,c	;volatile
  1446                           
  1447                           ;Lcd4Lignes.c: 134: __nop();
  1448   00090A  F000               	nop	
  1449   00090C                     
  1450                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  1451   00090C  EC27  F005         	call	_lcd_lireDonnees	;wreg free
  1452   000910  0100               	movlb	0	; force () banked
  1453   000912  6FA5               	movwf	??_lcd_busy& (0+255),b
  1454   000914  39A5               	swapf	??_lcd_busy& (0+255),w,b
  1455   000916  0BF0               	andlw	240
  1456   000918  0100               	movlb	0	; force () banked
  1457   00091A  6FA6               	movwf	lcd_busy@adresse& (0+255),b
  1458   00091C                     
  1459                           ; BSR set to: 0
  1460                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  1461   00091C  9480               	bcf	128,2,c	;volatile
  1462   00091E                     
  1463                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  1464   00091E  8480               	bsf	128,2,c	;volatile
  1465   000920                     
  1466                           ;Lcd4Lignes.c: 139: __nop();
  1467   000920  F000               	nop	
  1468                           
  1469                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  1470   000922  EC27  F005         	call	_lcd_lireDonnees	;wreg free
  1471   000926  0100               	movlb	0	; force () banked
  1472   000928  13A6               	iorwf	lcd_busy@adresse& (0+255),f,b
  1473   00092A                     
  1474                           ; BSR set to: 0
  1475                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  1476   00092A  9480               	bcf	128,2,c	;volatile
  1477   00092C                     
  1478                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  1479   00092C  0100               	movlb	0	; force () banked
  1480   00092E  BFA6               	btfsc	lcd_busy@adresse& (0+255),7,b
  1481   000930  EF9C  F004         	goto	u241
  1482   000934  EF9E  F004         	goto	u240
  1483   000938                     u241:
  1484   000938  EF84  F004         	goto	l130
  1485   00093C                     u240:
  1486   00093C                     
  1487                           ; BSR set to: 0
  1488                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  1489   00093C  9280               	bcf	128,1,c	;volatile
  1490   00093E                     
  1491                           ; BSR set to: 0
  1492                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  1493   00093E  0100               	movlb	0	; force () banked
  1494   000940  51A6               	movf	lcd_busy@adresse& (0+255),w,b
  1495   000942  0B7F               	andlw	127
  1496   000944                     
  1497                           ; BSR set to: 0
  1498   000944  0012               	return		;funcret
  1499   000946                     __end_of_lcd_busy:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _lcd_lireDonnees *****************
  1503 ;; Defined at:
  1504 ;;		line 93 in file "Lcd4Lignes.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      unsigned char 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_lcd_busy
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text12
  1532   000A4E                     __ptext12:
  1533                           	callstack 0
  1534   000A4E                     _lcd_lireDonnees:
  1535                           	callstack 26
  1536   000A4E                     
  1537                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  1538   000A4E  5083               	movf	131,w,c	;volatile
  1539   000A50  0B0F               	andlw	15
  1540   000A52  0012               	return		;funcret
  1541   000A54                     __end_of_lcd_lireDonnees:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _initialisation *****************
  1545 ;; Defined at:
  1546 ;;		line 98 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text13
  1574   000A30                     __ptext13:
  1575                           	callstack 0
  1576   000A30                     _initialisation:
  1577                           	callstack 30
  1578   000A30                     
  1579                           ;main.c: 100: TRISA = 0;
  1580   000A30  0E00               	movlw	0
  1581   000A32  6E92               	movwf	146,c	;volatile
  1582                           
  1583                           ;main.c: 101: TRISB = 0;
  1584   000A34  0E00               	movlw	0
  1585   000A36  6E93               	movwf	147,c	;volatile
  1586                           
  1587                           ;main.c: 104: ANSEL = 0;
  1588   000A38  0E00               	movlw	0
  1589   000A3A  6E7E               	movwf	126,c	;volatile
  1590   000A3C  0012               	return		;funcret
  1591   000A3E                     __end_of_initialisation:
  1592                           	callstack 0
  1593                           
  1594                           	psect	param0
  1595   000000                     
  1596                           	psect	idloc
  1597                           
  1598                           ;Config register IDLOC0 @ 0x200000
  1599                           ;	unspecified, using default values
  1600   200000                     	org	2097152
  1601   200000  FF                 	db	255
  1602                           
  1603                           ;Config register IDLOC1 @ 0x200001
  1604                           ;	unspecified, using default values
  1605   200001                     	org	2097153
  1606   200001  FF                 	db	255
  1607                           
  1608                           ;Config register IDLOC2 @ 0x200002
  1609                           ;	unspecified, using default values
  1610   200002                     	org	2097154
  1611   200002  FF                 	db	255
  1612                           
  1613                           ;Config register IDLOC3 @ 0x200003
  1614                           ;	unspecified, using default values
  1615   200003                     	org	2097155
  1616   200003  FF                 	db	255
  1617                           
  1618                           ;Config register IDLOC4 @ 0x200004
  1619                           ;	unspecified, using default values
  1620   200004                     	org	2097156
  1621   200004  FF                 	db	255
  1622                           
  1623                           ;Config register IDLOC5 @ 0x200005
  1624                           ;	unspecified, using default values
  1625   200005                     	org	2097157
  1626   200005  FF                 	db	255
  1627                           
  1628                           ;Config register IDLOC6 @ 0x200006
  1629                           ;	unspecified, using default values
  1630   200006                     	org	2097158
  1631   200006  FF                 	db	255
  1632                           
  1633                           ;Config register IDLOC7 @ 0x200007
  1634                           ;	unspecified, using default values
  1635   200007                     	org	2097159
  1636   200007  FF                 	db	255
  1637                           
  1638                           	psect	config
  1639                           
  1640                           ; Padding undefined space
  1641   300000                     	org	3145728
  1642   300000  FF                 	db	255
  1643                           
  1644                           ;Config register CONFIG1H @ 0x300001
  1645                           ;	Oscillator Selection bits
  1646                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1647                           ;	Fail-Safe Clock Monitor Enable bit
  1648                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1649                           ;	Internal/External Oscillator Switchover bit
  1650                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1651   300001                     	org	3145729
  1652   300001  08                 	db	8
  1653                           
  1654                           ;Config register CONFIG2L @ 0x300002
  1655                           ;	Power-up Timer Enable bit
  1656                           ;	PWRTEN = OFF, PWRT disabled
  1657                           ;	Brown-out Reset Enable bits
  1658                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1659                           ;	Brown Out Reset Voltage bits
  1660                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1661   300002                     	org	3145730
  1662   300002  1F                 	db	31
  1663                           
  1664                           ;Config register CONFIG2H @ 0x300003
  1665                           ;	Watchdog Timer Enable bit
  1666                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1667                           ;	Watchdog Timer Postscale Select bits
  1668                           ;	WDTPS = 32768, 1:32768
  1669   300003                     	org	3145731
  1670   300003  1E                 	db	30
  1671                           
  1672                           ; Padding undefined space
  1673   300004                     	org	3145732
  1674   300004  FF                 	db	255
  1675                           
  1676                           ;Config register CONFIG3H @ 0x300005
  1677                           ;	CCP2 MUX bit
  1678                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1679                           ;	PORTB A/D Enable bit
  1680                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1681                           ;	Low-Power Timer1 Oscillator Enable bit
  1682                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1683                           ;	HFINTOSC Fast Start-up
  1684                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1685                           ;	MCLR Pin Enable bit
  1686                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1687   300005                     	org	3145733
  1688   300005  8B                 	db	139
  1689                           
  1690                           ;Config register CONFIG4L @ 0x300006
  1691                           ;	Stack Full/Underflow Reset Enable bit
  1692                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1693                           ;	Single-Supply ICSP Enable bit
  1694                           ;	LVP = OFF, Single-Supply ICSP disabled
  1695                           ;	Extended Instruction Set Enable bit
  1696                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1697                           ;	Background Debugger Enable bit
  1698                           ;	DEBUG = 0x1, unprogrammed default
  1699   300006                     	org	3145734
  1700   300006  81                 	db	129
  1701                           
  1702                           ; Padding undefined space
  1703   300007                     	org	3145735
  1704   300007  FF                 	db	255
  1705                           
  1706                           ;Config register CONFIG5L @ 0x300008
  1707                           ;	Code Protection Block 0
  1708                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1709                           ;	Code Protection Block 1
  1710                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1711                           ;	Code Protection Block 2
  1712                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1713                           ;	Code Protection Block 3
  1714                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1715   300008                     	org	3145736
  1716   300008  0F                 	db	15
  1717                           
  1718                           ;Config register CONFIG5H @ 0x300009
  1719                           ;	Boot Block Code Protection bit
  1720                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1721                           ;	Data EEPROM Code Protection bit
  1722                           ;	CPD = OFF, Data EEPROM not code-protected
  1723   300009                     	org	3145737
  1724   300009  C0                 	db	192
  1725                           
  1726                           ;Config register CONFIG6L @ 0x30000A
  1727                           ;	Write Protection Block 0
  1728                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1729                           ;	Write Protection Block 1
  1730                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1731                           ;	Write Protection Block 2
  1732                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1733                           ;	Write Protection Block 3
  1734                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1735   30000A                     	org	3145738
  1736   30000A  0F                 	db	15
  1737                           
  1738                           ;Config register CONFIG6H @ 0x30000B
  1739                           ;	Configuration Register Write Protection bit
  1740                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1741                           ;	Boot Block Write Protection bit
  1742                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1743                           ;	Data EEPROM Write Protection bit
  1744                           ;	WRTD = OFF, Data EEPROM not write-protected
  1745   30000B                     	org	3145739
  1746   30000B  E0                 	db	224
  1747                           
  1748                           ;Config register CONFIG7L @ 0x30000C
  1749                           ;	Table Read Protection Block 0
  1750                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1751                           ;	Table Read Protection Block 1
  1752                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1753                           ;	Table Read Protection Block 2
  1754                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1755                           ;	Table Read Protection Block 3
  1756                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1757   30000C                     	org	3145740
  1758   30000C  0F                 	db	15
  1759                           
  1760                           ;Config register CONFIG7H @ 0x30000D
  1761                           ;	Boot Block Table Read Protection bit
  1762                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1763   30000D                     	org	3145741
  1764   30000D  40                 	db	64
  1765                           tosu	equ	0xFFF
  1766                           tosh	equ	0xFFE
  1767                           tosl	equ	0xFFD
  1768                           stkptr	equ	0xFFC
  1769                           pclatu	equ	0xFFB
  1770                           pclath	equ	0xFFA
  1771                           pcl	equ	0xFF9
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           prodh	equ	0xFF4
  1777                           prodl	equ	0xFF3
  1778                           indf0	equ	0xFEF
  1779                           postinc0	equ	0xFEE
  1780                           postdec0	equ	0xFED
  1781                           preinc0	equ	0xFEC
  1782                           plusw0	equ	0xFEB
  1783                           fsr0h	equ	0xFEA
  1784                           fsr0l	equ	0xFE9
  1785                           wreg	equ	0xFE8
  1786                           indf1	equ	0xFE7
  1787                           postinc1	equ	0xFE6
  1788                           postdec1	equ	0xFE5
  1789                           preinc1	equ	0xFE4
  1790                           plusw1	equ	0xFE3
  1791                           fsr1h	equ	0xFE2
  1792                           fsr1l	equ	0xFE1
  1793                           bsr	equ	0xFE0
  1794                           indf2	equ	0xFDF
  1795                           postinc2	equ	0xFDE
  1796                           postdec2	equ	0xFDD
  1797                           preinc2	equ	0xFDC
  1798                           plusw2	equ	0xFDB
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8

Data Sizes:
    Strings     65
    Constant    0
    Data        133
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     55     124
    BANK1           256      0      64
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[32]), STR_1(CODE[33]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0    1294
                                             10 BANK0     45    45      0
                     _initialisation
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     555
                                              5 BANK0      5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
       _lcd_wrData
         _lcd_busy
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
       _lcd_wrData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      40       6       25.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     37      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRll         1E      0       0      26        0.0%
BITBIGSFR_1hh       1B      0       0      19        0.0%
BITBIGSFRlhh         E      0       0      24        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_1llh       C      0       0      21        0.0%
BITBIGSFR_1hl        7      0       0      20        0.0%
BITBIGSFRh           6      0       0      23        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFR_1lll       1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BC      27        0.0%
DATA                 0      0      BC      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 18 12:16:32 2023

                         l33 0A3C                           l27 09E4                           l28 09E4  
                        l201 0A4C                          l130 0908                          l131 093C  
                        l124 0A52                          l132 0944                          l141 09B8  
                        l127 0A2E                          l144 0822                          l153 0A44  
                        l138 07B8                          l147 0A12                          l185 074C  
                        l179 0876                          l198 06E0                          u300 06DC  
                        u301 06D8                          u310 074C                          u311 0748  
                        u240 093C                          u241 0938                          u250 0792  
                        u251 078E                          u331 09DA                          u260 07A6  
                        u261 07A2                          u270 0662                          u407 07A8  
                        u271 065E                          u280 067E                          u281 067A  
                        u290 06C6                          u291 06C2                          u347 07C6  
                        u357 07E2                          u367 07F4                          u377 0806  
                        u387 0818                          u397 077A                          prod 0FF3  
                        wreg 0FE8                         l1301 0A18                         l1311 091E  
                       l1303 0904                         l1321 093E                         l1313 0920  
                       l1305 090C                         l1401 07D6                         l1315 092A  
                       l1307 091C                         l1331 075A                         l1411 07F2  
                       l1403 07DC                         l1157 0A30                         l1317 092C  
                       l1309 091E                         l1325 0A46                         l1341 076C  
                       l1333 075A                         l1421 0812                         l1413 07FA  
                       l1405 07E0                         l1501 09BE                         l1319 092C  
                       l1351 0792                         l1343 076C                         l1335 075C  
                       l1327 0752                         l1431 0650                         l1423 0816  
                       l1415 0800                         l1407 07E8                         l1503 09C2  
                       l1353 07A6                         l1345 0774                         l1337 075E  
                       l1329 0756                         l1441 0682                         l1425 081E  
                       l1417 0804                         l1409 07EE                         l1505 09D0  
                       l1355 07B0                         l1347 0778                         l1339 0768  
                       l1371 0994                         l1363 098A                         l1443 06B0  
                       l1451 06DC                         l1435 0666                         l1427 0644  
                       l1419 080C                         l1507 09E2                         l1357 07B4  
                       l1349 0780                         l1381 09AC                         l1373 0996  
                       l1365 098E                         l1445 06B4                         l1437 066C  
                       l1429 064A                         l1453 0828                         l1359 07B4  
                       l1391 0A3E                         l1383 09B0                         l1375 09A0  
                       l1367 0992                         l1447 06C6                         l1455 0838  
                       l1463 0856                         l1471 06EC                         l1297 0A4E  
                       l1385 09B0                         l1377 09A4                         l1369 0992  
                       l1449 06CA                         l1393 07BA                         l1465 09EC  
                       l1457 0842                         l1473 0714                         l1387 09B4  
                       l1379 09A4                         l1395 07BE                         l1467 0A0E  
                       l1459 084C                         l1475 0718                         l1397 07D2  
                       l1469 06E2                         l1399 07D4                         l1499 09BA  
                       STR_1 0601                         STR_2 0622                         _RCIF 7CF5  
           ??_initialisation 00A5                         _main 09BA                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         prodl 0FF3  
                       start 0000              ?_lcd_putMessage 00AA                 ___param_bank 0000  
            ??_lcd_ecritChar 00A8                        ?_main 00A5                        _ANSEL 0F7E  
                      _RCREG 0FAE                        _SPBRG 0FAF                        _PORTB 0F81  
                      _PORTC 0F82                        _PORTD 0F83                        _TRISA 0F92  
                      _TRISB 0F93                        _TRISD 0F95                        _TXREG 0FAD  
               main@messages 00AF              ??_lcd_initCGRam 00A8                        tablat 0FF5  
                      plusw1 0FE3                        plusw2 0FDB                        status 0FD8  
            __initialization 0878                 __end_of_main 09EC         lcd_putMessage@chaine 00AA  
                     ??_main 00AF                __activetblptr 0003                       _SPBRGH 0FB0  
             lcd_initCGRam@i 00AA               lcd_initCGRam@j 00AB             __end_of_lcd_busy 0946  
           __end_of_lcd_init 0A14                       isa$std 0001                 __mediumconst 0000  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
          _lcd_resetSequence 07BA                   __accesstop 0060      __end_of__initialization 08B8  
        _lcd_strobeEnableBit 0A46           ?_lcd_resetSequence 00A5                ___rparam_used 0000  
                setDel@F2612 0099                  setDel@F2614 008D                 __pidataBANK0 08BE  
               __pidataBANK1 0946          ??_lcd_resetSequence 00A7         ?_lcd_strobeEnableBit 00A5  
  __end_of_lcd_resetSequence 0824            _lcd_ecrireDonnees 0A14             ??_lcd_putMessage 00AC  
         ?_lcd_ecrireDonnees 00A5          ??_lcd_ecrireDonnees 00A5        ??_lcd_strobeEnableBit 00A5  
                 _lcd_wrData 0986    __end_of_lcd_ecrireDonnees 0A30                    ?_lcd_busy 00A5  
                  ?_lcd_init 00A5      lcd_ecrireDonnees@donnee 00A6                      __Hparam 0000  
                    __Lparam 0000            __end_of_lcd_wrCom 07BA                 __psmallconst 0600  
                    __pcinit 0878                      __ramtop 0600                      __ptext0 09BA  
                    __ptext1 06E2                      __ptext2 0824                      __ptext3 09EC  
                    __ptext4 07BA                      __ptext5 0644                      __ptext6 0986  
                    __ptext7 0A3E                      __ptext8 074E                      __ptext9 0A46  
      __end_of_lcd_ecritChar 0878              lcd_busy@adresse 00A6             lcd_ecritChar@car 00A8  
                 ??_lcd_busy 00A5                   ??_lcd_init 00AC         end_of_initialization 08B8  
      __end_of_lcd_initCGRam 06E2            ??_lcd_lireDonnees 00A5                    _RCSTAbits 0FAB  
                    postdec1 0FE5                      postinc0 0FEE            ??_lcd_curseurHome 00A8  
        lcd_ecritChar@posRam 00A9                    _PORTAbits 0F80                    _TRISCbits 0F94  
                ?_lcd_wrData 00A5                    _TXSTAbits 0FAC                  _BAUDCONbits 0FB8  
        start_initialization 0878                  __pdataBANK0 0060                  __pdataBANK1 0100  
              __pcstackBANK0 00A5  __end_of_lcd_strobeEnableBit 0A4E               _initialisation 0A30  
                  _lcd_wrCom 074E                  __smallconst 0600              _lcd_lireDonnees 0A4E  
        lcd_wrData@caractere 00A7              _lcd_curseurHome 0A3E       __end_of_initialisation 0A3E  
                  main@F2604 0060                   ?_lcd_wrCom 00A5                 ??_lcd_wrData 00A7  
          lcd_wrCom@commande 00A7                    copy_data0 088C                    copy_data1 08AC  
                   __Hparam0 0000                     __Lparam0 0000              ?_initialisation 00A5  
         __end_of_lcd_wrData 09BA              lcd_putMessage@j 00AE      __end_of_lcd_lireDonnees 0A54  
                   _matCGRAM 0100      __end_of_lcd_curseurHome 0A46                     __ptext10 0A14  
                   __ptext11 0904                     __ptext12 0A4E                     __ptext13 0A30  
                   _lcd_busy 0904                     _lcd_init 09EC                     isa$xinst 0000  
                ??_lcd_wrCom 00A7                _lcd_ecritChar 0824                _lcd_initCGRam 0644  
             _lcd_putMessage 06E2               ?_lcd_ecritChar 00A5             ?_lcd_lireDonnees 00A5  
           ?_lcd_curseurHome 00A5               ?_lcd_initCGRam 00A5       __end_of_lcd_putMessage 074E  
