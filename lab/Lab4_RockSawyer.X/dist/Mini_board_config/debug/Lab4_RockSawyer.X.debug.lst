

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 08 13:10:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1,minocg
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1,minocg
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 21/07/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F45K20 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataBANK0
    77   00758E                     __pidataBANK0:
    78                           	callstack 0
    79                           
    80                           ;initializer for _randx
    81   00758E  0001               	dw	1
    82   007590  0000               	dw	0
    83                           
    84                           	psect	idataBANK1
    85   0079CB                     __pidataBANK1:
    86                           	callstack 0
    87                           
    88                           ;initializer for _matCGRAM
    89   0079CB  08                 	db	8
    90   0079CC  04                 	db	4
    91   0079CD  04                 	db	4
    92   0079CE  0A                 	db	10
    93   0079CF  11                 	db	17
    94   0079D0  1F                 	db	31
    95   0079D1  11                 	db	17
    96   0079D2  00                 	db	0
    97   0079D3  02                 	db	2
    98   0079D4  04                 	db	4
    99   0079D5  0E                 	db	14
   100   0079D6  11                 	db	17
   101   0079D7  1F                 	db	31
   102   0079D8  10                 	db	16
   103   0079D9  0E                 	db	14
   104   0079DA  00                 	db	0
   105   0079DB  02                 	db	2
   106   0079DC  04                 	db	4
   107   0079DD  1F                 	db	31
   108   0079DE  10                 	db	16
   109   0079DF  1E                 	db	30
   110   0079E0  10                 	db	16
   111   0079E1  1F                 	db	31
   112   0079E2  00                 	db	0
   113   0079E3  08                 	db	8
   114   0079E4  04                 	db	4
   115   0079E5  0E                 	db	14
   116   0079E6  11                 	db	17
   117   0079E7  1F                 	db	31
   118   0079E8  10                 	db	16
   119   0079E9  0E                 	db	14
   120   0079EA  00                 	db	0
   121   0079EB  08                 	db	8
   122   0079EC  04                 	db	4
   123   0079ED  1F                 	db	31
   124   0079EE  10                 	db	16
   125   0079EF  1E                 	db	30
   126   0079F0  10                 	db	16
   127   0079F1  1F                 	db	31
   128   0079F2  00                 	db	0
   129   0079F3  04                 	db	4
   130   0079F4  0A                 	db	10
   131   0079F5  0E                 	db	14
   132   0079F6  11                 	db	17
   133   0079F7  1F                 	db	31
   134   0079F8  10                 	db	16
   135   0079F9  0E                 	db	14
   136   0079FA  00                 	db	0
   137   0079FB  08                 	db	8
   138   0079FC  04                 	db	4
   139   0079FD  0E                 	db	14
   140   0079FE  01                 	db	1
   141   0079FF  0F                 	db	15
   142   007A00  11                 	db	17
   143   007A01  0F                 	db	15
   144   007A02  00                 	db	0
   145   007A03  04                 	db	4
   146   007A04  0A                 	db	10
   147   007A05  0E                 	db	14
   148   007A06  01                 	db	1
   149   007A07  0F                 	db	15
   150   007A08  11                 	db	17
   151   007A09  0F                 	db	15
   152   007A0A  00                 	db	0
   153                           
   154                           ;initializer for main@F2866
   155   007A0B  70                 	db	112
   156   007A0C  6F                 	db	111
   157   007A0D  72                 	db	114
   158   007A0E  74                 	db	116
   159   007A0F  61                 	db	97
   160   007A10  62                 	db	98
   161   007A11  6C                 	db	108
   162   007A12  65                 	db	101
   163   007A13  00                 	db	0
   164   007A14  00                 	db	0
   165   007A15  00                 	db	0
   166   007A16  00                 	db	0
   167   007A17  00                 	db	0
   168   007A18  00                 	db	0
   169   007A19  00                 	db	0
   170   007A1A  32                 	db	50
   171   007A1B  65                 	db	101
   172   007A1C  4D                 	db	77
   173   007A1D  6F                 	db	111
   174   007A1E  74                 	db	116
   175   007A1F  00                 	db	0
   176   007A20  00                 	db	0
   177   007A21  00                 	db	0
   178   007A22  00                 	db	0
   179   007A23  00                 	db	0
   180   007A24  00                 	db	0
   181   007A25  00                 	db	0
   182   007A26  00                 	db	0
   183   007A27  00                 	db	0
   184   007A28  00                 	db	0
   185   007A29  33                 	db	51
   186   007A2A  65                 	db	101
   187   007A2B  4D                 	db	77
   188   007A2C  6F                 	db	111
   189   007A2D  74                 	db	116
   190   007A2E  00                 	db	0
   191   007A2F  00                 	db	0
   192   007A30  00                 	db	0
   193   007A31  00                 	db	0
   194   007A32  00                 	db	0
   195   007A33  00                 	db	0
   196   007A34  00                 	db	0
   197   007A35  00                 	db	0
   198   007A36  00                 	db	0
   199   007A37  00                 	db	0
   200   000000                     _RCREG	set	4014
   201   000000                     _TXREG	set	4013
   202   000000                     _ANSEL	set	3966
   203   000000                     _TRISA	set	3986
   204   000000                     _RCSTAbits	set	4011
   205   000000                     _TXSTAbits	set	4012
   206   000000                     _SPBRG	set	4015
   207   000000                     _SPBRGH	set	4016
   208   000000                     _RCIF	set	31989
   209   000000                     _TRISD	set	3989
   210   000000                     _TRISCbits	set	3988
   211   000000                     _TRISB	set	3987
   212   000000                     _PORTAbits	set	3968
   213   000000                     _PORTD	set	3971
   214   000000                     _BAUDCONbits	set	4024
   215                           
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219   007750                     __pcinit:
   220                           	callstack 0
   221   007750                     start_initialization:
   222                           	callstack 0
   223   007750                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (109 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228   007750  0ECB               	movlw	low __pidataBANK1
   229   007752  6EF6               	movwf	tblptrl,c
   230   007754  0E79               	movlw	high __pidataBANK1
   231   007756  6EF7               	movwf	tblptrh,c
   232   007758  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233   00775A  6EF8               	movwf	tblptru,c
   234   00775C  EE01  F000         	lfsr	0,__pdataBANK1
   235   007760  EE10 F06D          	lfsr	1,109
   236   007764                     copy_data0:
   237   007764  0009               	tblrd		*+
   238   007766  CFF5 FFEE          	movff	tablat,postinc0
   239   00776A  50E5               	movf	postdec1,w,c
   240   00776C  50E1               	movf	fsr1l,w,c
   241   00776E  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (4 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245   007770  0E8E               	movlw	low __pidataBANK0
   246   007772  6EF6               	movwf	tblptrl,c
   247   007774  0E75               	movlw	high __pidataBANK0
   248   007776  6EF7               	movwf	tblptrh,c
   249   007778  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250   00777A  6EF8               	movwf	tblptru,c
   251   00777C  EE00  F0D8         	lfsr	0,__pdataBANK0
   252   007780  EE10 F004          	lfsr	1,4
   253   007784                     copy_data1:
   254   007784  0009               	tblrd		*+
   255   007786  CFF5 FFEE          	movff	tablat,postinc0
   256   00778A  50E5               	movf	postdec1,w,c
   257   00778C  50E1               	movf	fsr1l,w,c
   258   00778E  E1FA               	bnz	copy_data1
   259   007790                     end_of_initialization:
   260                           	callstack 0
   261   007790                     __end_of__initialization:
   262                           	callstack 0
   263   007790  0100               	movlb	0
   264   007792  EF38  F03B         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	dataBANK0
   267   0000D8                     __pdataBANK0:
   268                           	callstack 0
   269   0000D8                     _randx:
   270                           	callstack 0
   271   0000D8                     	ds	4
   272                           
   273                           	psect	dataBANK1
   274   000100                     __pdataBANK1:
   275                           	callstack 0
   276   000100                     _matCGRAM:
   277                           	callstack 0
   278   000100                     	ds	64
   279   000140                     main@F2866:
   280                           	callstack 0
   281   000140                     	ds	45
   282                           
   283                           	psect	cstackBANK1
   284   00016D                     __pcstackBANK1:
   285                           	callstack 0
   286   00016D                     main@messages:
   287                           	callstack 0
   288                           
   289                           ; 45 bytes @ 0x0
   290   00016D                     	ds	45
   291                           
   292                           	psect	cstackBANK0
   293   000060                     __pcstackBANK0:
   294                           	callstack 0
   295   000060                     ??_lcd_ecrireDonnees:
   296   000060                     ??_lcd_busy:
   297   000060                     ?_strlen:
   298                           	callstack 0
   299   000060                     ?___wmul:
   300                           	callstack 0
   301   000060                     ?___lmul:
   302                           	callstack 0
   303   000060                     getch@c:
   304                           	callstack 0
   305   000060                     ___wmul@multiplier:
   306                           	callstack 0
   307   000060                     strlen@s:
   308                           	callstack 0
   309   000060                     ___lmul@multiplier:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0x0
   313   000060                     	ds	1
   314   000061                     lcd_ecrireDonnees@donnee:
   315                           	callstack 0
   316   000061                     lcd_busy@adresse:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1
   320   000061                     	ds	1
   321   000062                     ??_lcd_resetSequence:
   322   000062                     lcd_wrCom@commande:
   323                           	callstack 0
   324   000062                     lcd_wrData@caractere:
   325                           	callstack 0
   326   000062                     ___wmul@multiplicand:
   327                           	callstack 0
   328   000062                     strlen@cp:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000062                     	ds	1
   333   000063                     ??_lcd_initCGRam:
   334   000063                     lcd_gotoXY@y:
   335                           	callstack 0
   336   000063                     lcd_ecritChar@car:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x3
   340   000063                     	ds	1
   341   000064                     lcd_gotoXY@x:
   342                           	callstack 0
   343   000064                     lcd_ecritChar@posRam:
   344                           	callstack 0
   345   000064                     ___wmul@product:
   346                           	callstack 0
   347   000064                     ___lmul@multiplicand:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x4
   351   000064                     	ds	1
   352   000065                     lcd_initCGRam@i:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x5
   356   000065                     	ds	1
   357   000066                     lcd_initCGRam@j:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x6
   361   000066                     	ds	1
   362   000067                     
   363                           ; 1 bytes @ 0x7
   364   000067                     	ds	1
   365   000068                     ___lmul@product:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x8
   369   000068                     	ds	4
   370   00006C                     ?_rand:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xC
   374   00006C                     	ds	2
   375   00006E                     ?___awmod:
   376                           	callstack 0
   377   00006E                     ___awmod@dividend:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xE
   381   00006E                     	ds	2
   382   000070                     ___awmod@divisor:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x10
   386   000070                     	ds	2
   387   000072                     ___awmod@counter:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x12
   391   000072                     	ds	1
   392   000073                     ___awmod@sign:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x13
   396   000073                     	ds	1
   397   000074                     afficheMelange@mot:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x14
   401   000074                     	ds	2
   402   000076                     ??_afficheMelange:
   403                           
   404                           ; 1 bytes @ 0x16
   405   000076                     	ds	3
   406   000079                     afficheMelange@oqp:
   407                           	callstack 0
   408                           
   409                           ; 80 bytes @ 0x19
   410   000079                     	ds	80
   411   0000C9                     afficheMelange@ligne:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x69
   415   0000C9                     	ds	2
   416   0000CB                     afficheMelange@colonne:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x6B
   420   0000CB                     	ds	2
   421   0000CD                     afficheMelange@lgMot:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x6D
   425   0000CD                     	ds	1
   426   0000CE                     afficheMelange@lettre:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x6E
   430   0000CE                     	ds	1
   431   0000CF                     afficheMelange@i_114:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6F
   435   0000CF                     	ds	2
   436   0000D1                     afficheMelange@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x71
   440   0000D1                     	ds	2
   441   0000D3                     afficheMelange@j:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x73
   445   0000D3                     	ds	2
   446   0000D5                     joueCharivari@mot:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x75
   450   0000D5                     	ds	2
   451   0000D7                     joueCharivari@c:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x77
   455   0000D7                     	ds	1
   456   0000D8                     
   457                           ; 1 bytes @ 0x78
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 31 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  messages       45    0[BANK1 ] unsigned char [15][3]
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0      45       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         0       0      45       0       0       0       0
   481 ;;Total ram usage:       45 bytes
   482 ;; Hardware stack levels required when called: 6
   483 ;; This function calls:
   484 ;;		_init_serie
   485 ;;		_initialisation
   486 ;;		_joueCharivari
   487 ;;		_lcd_init
   488 ;; This function is called by:
   489 ;;		Startup code after reset
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text0
   494   007670                     __ptext0:
   495                           	callstack 0
   496   007670                     _main:
   497                           	callstack 25
   498   007670                     
   499                           ;main.c: 33: char messages[3][15] = {"portable","2eMot","3eMot"};
   500   007670  EE21  F040         	lfsr	2,main@F2866
   501   007674  EE11  F06D         	lfsr	1,main@messages
   502   007678  0E2C               	movlw	44
   503   00767A                     u691:
   504   00767A  CFDB FFE3          	movff	plusw2,plusw1
   505   00767E  06E8               	decf	wreg,f,c
   506   007680  E2FC               	bc	u691
   507   007682                     
   508                           ;main.c: 34: initialisation();
   509   007682  ECD4  F03A         	call	_initialisation	;wreg free
   510   007686                     
   511                           ;main.c: 35: lcd_init();
   512   007686  EC24  F03B         	call	_lcd_init	;wreg free
   513   00768A                     
   514                           ;main.c: 36: init_serie();
   515   00768A  EC01  F03B         	call	_init_serie	;wreg free
   516   00768E                     
   517                           ;main.c: 40: joueCharivari(messages[0]);
   518   00768E  0E6D               	movlw	low main@messages
   519   007690  0100               	movlb	0	; force () banked
   520   007692  6FD5               	movwf	joueCharivari@mot& (0+255),b
   521   007694  0E01               	movlw	high main@messages
   522   007696  6FD6               	movwf	(joueCharivari@mot+1)& (0+255),b
   523   007698  ECCB  F03B         	call	_joueCharivari	;wreg free
   524   00769C  EF00  F000         	goto	start
   525   0076A0                     __end_of_main:
   526                           	callstack 0
   527                           
   528 ;; *************** function _lcd_init *****************
   529 ;; Defined at:
   530 ;;		line 258 in file "Lcd4Lignes.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 5
   551 ;; This function calls:
   552 ;;		_lcd_initCGRam
   553 ;;		_lcd_resetSequence
   554 ;;		_lcd_wrCom
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text1
   561   007648                     __ptext1:
   562                           	callstack 0
   563   007648                     _lcd_init:
   564                           	callstack 25
   565   007648                     
   566                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
   567   007648  EC44  F03C         	call	_lcd_resetSequence	;wreg free
   568                           
   569                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
   570   00764C  0E28               	movlw	40
   571   00764E  EC79  F03C         	call	_lcd_wrCom
   572                           
   573                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
   574   007652  0E0F               	movlw	15
   575   007654  EC79  F03C         	call	_lcd_wrCom
   576                           
   577                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
   578   007658  0E01               	movlw	1
   579   00765A  EC79  F03C         	call	_lcd_wrCom
   580                           
   581                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
   582   00765E  0E06               	movlw	6
   583   007660  EC79  F03C         	call	_lcd_wrCom
   584                           
   585                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
   586   007664  0E80               	movlw	128
   587   007666  EC79  F03C         	call	_lcd_wrCom
   588   00766A                     
   589                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
   590   00766A  EC55  F03D         	call	_lcd_initCGRam	;wreg free
   591   00766E  0012               	return		;funcret
   592   007670                     __end_of_lcd_init:
   593                           	callstack 0
   594                           
   595 ;; *************** function _lcd_resetSequence *****************
   596 ;; Defined at:
   597 ;;		line 221 in file "Lcd4Lignes.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   611 ;;      Params:         0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0
   613 ;;      Temps:          0       1       0       0       0       0       0
   614 ;;      Totals:         0       1       0       0       0       0       0
   615 ;;Total ram usage:        1 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 1
   618 ;; This function calls:
   619 ;;		_lcd_ecrireDonnees
   620 ;;		_lcd_strobeEnableBit
   621 ;; This function is called by:
   622 ;;		_lcd_init
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text2
   627   007888                     __ptext2:
   628                           	callstack 0
   629   007888                     _lcd_resetSequence:
   630                           	callstack 28
   631   007888                     
   632                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
   633   007888  0E00               	movlw	0
   634   00788A  6E95               	movwf	149,c	;volatile
   635   00788C                     
   636                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
   637   00788C  0E0D               	movlw	13
   638   00788E  0100               	movlb	0	; force () banked
   639   007890  6F62               	movwf	??_lcd_resetSequence& (0+255),b
   640   007892  0EFB               	movlw	251
   641   007894                     u807:
   642   007894  2EE8               	decfsz	wreg,f,c
   643   007896  D7FE               	bra	u807
   644   007898  2F62               	decfsz	??_lcd_resetSequence& (0+255),f,b
   645   00789A  D7FC               	bra	u807
   646   00789C  F000 F000          	nop2	
   647   0078A0                     
   648                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
   649   0078A0  9080               	bcf	128,0,c	;volatile
   650   0078A2                     
   651                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
   652   0078A2  9280               	bcf	128,1,c	;volatile
   653   0078A4                     
   654                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
   655   0078A4  0E03               	movlw	3
   656   0078A6  ECF3  F03A         	call	_lcd_ecrireDonnees
   657   0078AA                     
   658                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
   659   0078AA  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
   660   0078AE                     
   661                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
   662   0078AE  0E03               	movlw	3
   663   0078B0                     u817:
   664   0078B0  2EE8               	decfsz	wreg,f,c
   665   0078B2  D7FE               	bra	u817
   666   0078B4  F000               	nop	
   667   0078B6                     
   668                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
   669   0078B6  0E03               	movlw	3
   670   0078B8  ECF3  F03A         	call	_lcd_ecrireDonnees
   671   0078BC                     
   672                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
   673   0078BC  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
   674   0078C0                     
   675                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
   676   0078C0  0E03               	movlw	3
   677   0078C2                     u827:
   678   0078C2  2EE8               	decfsz	wreg,f,c
   679   0078C4  D7FE               	bra	u827
   680   0078C6  F000               	nop	
   681   0078C8                     
   682                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
   683   0078C8  0E03               	movlw	3
   684   0078CA  ECF3  F03A         	call	_lcd_ecrireDonnees
   685   0078CE                     
   686                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
   687   0078CE  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
   688   0078D2                     
   689                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
   690   0078D2  0E03               	movlw	3
   691   0078D4                     u837:
   692   0078D4  2EE8               	decfsz	wreg,f,c
   693   0078D6  D7FE               	bra	u837
   694   0078D8  F000               	nop	
   695   0078DA                     
   696                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
   697   0078DA  0E02               	movlw	2
   698   0078DC  ECF3  F03A         	call	_lcd_ecrireDonnees
   699   0078E0                     
   700                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
   701   0078E0  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
   702   0078E4                     
   703                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
   704   0078E4  0E03               	movlw	3
   705   0078E6                     u847:
   706   0078E6  2EE8               	decfsz	wreg,f,c
   707   0078E8  D7FE               	bra	u847
   708   0078EA  F000               	nop	
   709   0078EC                     
   710                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
   711   0078EC  0E0F               	movlw	15
   712   0078EE  6E95               	movwf	149,c	;volatile
   713   0078F0  0012               	return		;funcret
   714   0078F2                     __end_of_lcd_resetSequence:
   715                           	callstack 0
   716                           
   717 ;; *************** function _lcd_initCGRam *****************
   718 ;; Defined at:
   719 ;;		line 417 in file "Lcd4Lignes.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  j               1    6[BANK0 ] unsigned char 
   724 ;;  i               1    5[BANK0 ] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   734 ;;      Params:         0       0       0       0       0       0       0
   735 ;;      Locals:         0       2       0       0       0       0       0
   736 ;;      Temps:          0       2       0       0       0       0       0
   737 ;;      Totals:         0       4       0       0       0       0       0
   738 ;;Total ram usage:        4 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; Hardware stack levels required when called: 4
   741 ;; This function calls:
   742 ;;		_lcd_curseurHome
   743 ;;		_lcd_wrCom
   744 ;;		_lcd_wrData
   745 ;; This function is called by:
   746 ;;		_lcd_init
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text3
   751   007AAA                     __ptext3:
   752                           	callstack 0
   753   007AAA                     _lcd_initCGRam:
   754                           	callstack 25
   755   007AAA                     
   756                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
   757   007AAA  0E40               	movlw	64
   758   007AAC  EC79  F03C         	call	_lcd_wrCom
   759   007AB0                     
   760                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
   761   007AB0  0E00               	movlw	0
   762   007AB2  0100               	movlb	0	; force () banked
   763   007AB4  6F65               	movwf	lcd_initCGRam@i& (0+255),b
   764   007AB6                     
   765                           ; BSR set to: 0
   766   007AB6  0E07               	movlw	7
   767   007AB8  0100               	movlb	0	; force () banked
   768   007ABA  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
   769   007ABC  EF62  F03D         	goto	u621
   770   007AC0  EF64  F03D         	goto	u620
   771   007AC4                     u621:
   772   007AC4  EF66  F03D         	goto	l1770
   773   007AC8                     u620:
   774   007AC8  EFA1  F03D         	goto	l1786
   775   007ACC                     l1770:
   776                           
   777                           ; BSR set to: 0
   778                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
   779   007ACC  0E00               	movlw	0
   780   007ACE  0100               	movlb	0	; force () banked
   781   007AD0  6F66               	movwf	lcd_initCGRam@j& (0+255),b
   782   007AD2                     
   783                           ; BSR set to: 0
   784   007AD2  0E07               	movlw	7
   785   007AD4  0100               	movlb	0	; force () banked
   786   007AD6  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
   787   007AD8  EF70  F03D         	goto	u631
   788   007ADC  EF72  F03D         	goto	u630
   789   007AE0                     u631:
   790   007AE0  EF74  F03D         	goto	l1776
   791   007AE4                     u630:
   792   007AE4  EF96  F03D         	goto	l1782
   793   007AE8                     l1776:
   794                           
   795                           ; BSR set to: 0
   796                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
   797   007AE8  0100               	movlb	0	; force () banked
   798   007AEA  5165               	movf	lcd_initCGRam@i& (0+255),w,b
   799   007AEC  0D08               	mullw	8
   800   007AEE  0E00               	movlw	low _matCGRAM
   801   007AF0  24F3               	addwf	243,w,c
   802   007AF2  0100               	movlb	0	; force () banked
   803   007AF4  6F63               	movwf	??_lcd_initCGRam& (0+255),b
   804   007AF6  0E01               	movlw	high _matCGRAM
   805   007AF8  20F4               	addwfc	prodh,w,c
   806   007AFA  6F64               	movwf	(??_lcd_initCGRam+1)& (0+255),b
   807   007AFC  0100               	movlb	0	; force () banked
   808   007AFE  5166               	movf	lcd_initCGRam@j& (0+255),w,b
   809   007B00  0100               	movlb	0	; force () banked
   810   007B02  2563               	addwf	??_lcd_initCGRam& (0+255),w,b
   811   007B04  6ED9               	movwf	fsr2l,c
   812   007B06  0100               	movlb	0	; force () banked
   813   007B08  0E00               	movlw	0
   814   007B0A  0100               	movlb	0	; force () banked
   815   007B0C  2164               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
   816   007B0E  6EDA               	movwf	fsr2h,c
   817   007B10  50DF               	movf	indf2,w,c
   818   007B12  EC50  F03B         	call	_lcd_wrData
   819   007B16  0100               	movlb	0	; force () banked
   820   007B18  2B66               	incf	lcd_initCGRam@j& (0+255),f,b
   821   007B1A                     
   822                           ; BSR set to: 0
   823   007B1A  0E07               	movlw	7
   824   007B1C  0100               	movlb	0	; force () banked
   825   007B1E  6566               	cpfsgt	lcd_initCGRam@j& (0+255),b
   826   007B20  EF94  F03D         	goto	u641
   827   007B24  EF96  F03D         	goto	u640
   828   007B28                     u641:
   829   007B28  EF74  F03D         	goto	l1776
   830   007B2C                     u640:
   831   007B2C                     l1782:
   832                           
   833                           ; BSR set to: 0
   834   007B2C  0100               	movlb	0	; force () banked
   835   007B2E  2B65               	incf	lcd_initCGRam@i& (0+255),f,b
   836   007B30                     
   837                           ; BSR set to: 0
   838   007B30  0E07               	movlw	7
   839   007B32  0100               	movlb	0	; force () banked
   840   007B34  6565               	cpfsgt	lcd_initCGRam@i& (0+255),b
   841   007B36  EF9F  F03D         	goto	u651
   842   007B3A  EFA1  F03D         	goto	u650
   843   007B3E                     u651:
   844   007B3E  EF66  F03D         	goto	l1770
   845   007B42                     u650:
   846   007B42                     l1786:
   847                           
   848                           ; BSR set to: 0
   849                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
   850   007B42  ECD0  F03A         	call	_lcd_curseurHome	;wreg free
   851   007B46  0012               	return		;funcret
   852   007B48                     __end_of_lcd_initCGRam:
   853                           	callstack 0
   854                           
   855 ;; *************** function _lcd_curseurHome *****************
   856 ;; Defined at:
   857 ;;		line 288 in file "Lcd4Lignes.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 3
   878 ;; This function calls:
   879 ;;		_lcd_wrCom
   880 ;; This function is called by:
   881 ;;		_lcd_initCGRam
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text4
   886   0075A0                     __ptext4:
   887                           	callstack 0
   888   0075A0                     _lcd_curseurHome:
   889                           	callstack 25
   890   0075A0                     
   891                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
   892   0075A0  0E02               	movlw	2
   893   0075A2  EC79  F03C         	call	_lcd_wrCom
   894   0075A6  0012               	return		;funcret
   895   0075A8                     __end_of_lcd_curseurHome:
   896                           	callstack 0
   897                           
   898 ;; *************** function _joueCharivari *****************
   899 ;; Defined at:
   900 ;;		line 135 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  mot             2  117[BANK0 ] PTR unsigned char 
   903 ;;		 -> main@messages(45), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  c               1  119[BANK0 ] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      unsigned char 
   908 ;; Registers used:
   909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   915 ;;      Params:         0       2       0       0       0       0       0
   916 ;;      Locals:         0       1       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0
   918 ;;      Totals:         0       3       0       0       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 5
   922 ;; This function calls:
   923 ;;		_afficheMelange
   924 ;;		_getch
   925 ;;		_kbhit
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text5
   932   007796                     __ptext5:
   933                           	callstack 0
   934   007796                     _joueCharivari:
   935                           	callstack 25
   936   007796                     
   937                           ;main.c: 137: char c = 0;
   938   007796  0E00               	movlw	0
   939   007798  0100               	movlb	0	; force () banked
   940   00779A  6FD7               	movwf	joueCharivari@c& (0+255),b
   941   00779C                     
   942                           ; BSR set to: 0
   943                           ;main.c: 140: afficheMelange(mot);
   944   00779C  C0D5  F074         	movff	joueCharivari@mot,afficheMelange@mot
   945   0077A0  C0D6  F075         	movff	joueCharivari@mot+1,afficheMelange@mot+1
   946   0077A4  ECFD  F03D         	call	_afficheMelange	;wreg free
   947   0077A8                     l1814:
   948                           
   949                           ;main.c: 143: {;main.c: 144: kbhit();
   950   0077A8  ECE7  F03A         	call	_kbhit	;wreg free
   951   0077AC                     
   952                           ;main.c: 145: {;main.c: 146: c = getch();
   953   0077AC  ECDB  F03A         	call	_getch	;wreg free
   954   0077B0  0100               	movlb	0	; force () banked
   955   0077B2  6FD7               	movwf	joueCharivari@c& (0+255),b
   956   0077B4                     
   957                           ; BSR set to: 0
   958                           ;main.c: 148: };main.c: 149: };main.c: 150: while(c=='\r' || c==27);
   959   0077B4  0E0D               	movlw	13
   960   0077B6  0100               	movlb	0	; force () banked
   961   0077B8  19D7               	xorwf	joueCharivari@c& (0+255),w,b
   962   0077BA  B4D8               	btfsc	status,2,c
   963   0077BC  EFE2  F03B         	goto	u661
   964   0077C0  EFE4  F03B         	goto	u660
   965   0077C4                     u661:
   966   0077C4  EFD4  F03B         	goto	l1814
   967   0077C8                     u660:
   968   0077C8                     
   969                           ; BSR set to: 0
   970   0077C8  0E1B               	movlw	27
   971   0077CA  0100               	movlb	0	; force () banked
   972   0077CC  19D7               	xorwf	joueCharivari@c& (0+255),w,b
   973   0077CE  B4D8               	btfsc	status,2,c
   974   0077D0  EFEC  F03B         	goto	u671
   975   0077D4  EFEE  F03B         	goto	u670
   976   0077D8                     u671:
   977   0077D8  EFD4  F03B         	goto	l1814
   978   0077DC                     u670:
   979   0077DC                     
   980                           ; BSR set to: 0
   981   0077DC  0012               	return		;funcret
   982   0077DE                     __end_of_joueCharivari:
   983                           	callstack 0
   984                           
   985 ;; *************** function _kbhit *****************
   986 ;; Defined at:
   987 ;;		line 99 in file "serie.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_joueCharivari
  1011 ;;		_jouePendu
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text6
  1016   0075CE                     __ptext6:
  1017                           	callstack 0
  1018   0075CE                     _kbhit:
  1019                           	callstack 29
  1020   0075CE                     
  1021                           ;serie.c: 101: return RCIF;
  1022   0075CE  BA9E               	btfsc	158,5,c	;volatile
  1023   0075D0  EFEC  F03A         	goto	u541
  1024   0075D4  EFEE  F03A         	goto	u540
  1025   0075D8                     u541:
  1026   0075D8  EFF1  F03A         	goto	l1670
  1027   0075DC                     u540:
  1028   0075DC  90D8               	bcf	status,0,c
  1029   0075DE  EFF2  F03A         	goto	l124
  1030   0075E2                     l1670:
  1031   0075E2  80D8               	bsf	status,0,c
  1032   0075E4                     l124:
  1033   0075E4  0012               	return		;funcret
  1034   0075E6                     __end_of_kbhit:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _getch *****************
  1038 ;; Defined at:
  1039 ;;		line 65 in file "serie.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  c               1    0[BANK0 ] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      unsigned char 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1053 ;;      Params:         0       0       0       0       0       0       0
  1054 ;;      Locals:         0       1       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0
  1056 ;;      Totals:         0       1       0       0       0       0       0
  1057 ;;Total ram usage:        1 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_joueCharivari
  1063 ;;		_jouePendu
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text7
  1068   0075B6                     __ptext7:
  1069                           	callstack 0
  1070   0075B6                     _getch:
  1071                           	callstack 29
  1072   0075B6                     l109:
  1073   0075B6  AA9E               	btfss	158,5,c	;volatile
  1074   0075B8  EFE0  F03A         	goto	u551
  1075   0075BC  EFE2  F03A         	goto	u550
  1076   0075C0                     u551:
  1077   0075C0  EFDB  F03A         	goto	l109
  1078   0075C4                     u550:
  1079   0075C4                     
  1080                           ;serie.c: 71: c = RCREG;
  1081   0075C4  CFAE F060          	movff	4014,getch@c	;volatile
  1082   0075C8                     
  1083                           ;serie.c: 73: return c;
  1084   0075C8  0100               	movlb	0	; force () banked
  1085   0075CA  5160               	movf	getch@c& (0+255),w,b
  1086   0075CC                     
  1087                           ; BSR set to: 0
  1088   0075CC  0012               	return		;funcret
  1089   0075CE                     __end_of_getch:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _afficheMelange *****************
  1093 ;; Defined at:
  1094 ;;		line 178 in file "main.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  mot             2   20[BANK0 ] PTR unsigned char 
  1097 ;;		 -> main@messages(45), 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  j               2  115[BANK0 ] int 
  1100 ;;  i               2  111[BANK0 ] int 
  1101 ;;  i               2  113[BANK0 ] int 
  1102 ;;  oqp            80   25[BANK0 ] unsigned char [20][4]
  1103 ;;  colonne         2  107[BANK0 ] int 
  1104 ;;  ligne           2  105[BANK0 ] int 
  1105 ;;  lettre          1  110[BANK0 ] unsigned char 
  1106 ;;  lgMot           1  109[BANK0 ] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         0       2       0       0       0       0       0
  1117 ;;      Locals:         0      92       0       0       0       0       0
  1118 ;;      Temps:          0       3       0       0       0       0       0
  1119 ;;      Totals:         0      97       0       0       0       0       0
  1120 ;;Total ram usage:       97 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 4
  1123 ;; This function calls:
  1124 ;;		___awmod
  1125 ;;		___wmul
  1126 ;;		_lcd_ecritChar
  1127 ;;		_lcd_gotoXY
  1128 ;;		_rand
  1129 ;;		_strlen
  1130 ;; This function is called by:
  1131 ;;		_joueCharivari
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136   007BFA                     __ptext8:
  1137                           	callstack 0
  1138   007BFA                     _afficheMelange:
  1139                           	callstack 25
  1140   007BFA                     
  1141                           ;main.c: 181: char oqp[4][20];;main.c: 182: char lgMot = strlen(mot);
  1142   007BFA  C074  F060         	movff	afficheMelange@mot,strlen@s
  1143   007BFE  C075  F061         	movff	afficheMelange@mot+1,strlen@s+1
  1144   007C02  EC6A  F03B         	call	_strlen	;wreg free
  1145   007C06  0100               	movlb	0	; force () banked
  1146   007C08  5160               	movf	?_strlen& (0+255),w,b
  1147   007C0A  0100               	movlb	0	; force () banked
  1148   007C0C  6FCD               	movwf	afficheMelange@lgMot& (0+255),b
  1149   007C0E                     
  1150                           ; BSR set to: 0
  1151                           ;main.c: 183: char lettre = 0;
  1152   007C0E  0E00               	movlw	0
  1153   007C10  0100               	movlb	0	; force () banked
  1154   007C12  6FCE               	movwf	afficheMelange@lettre& (0+255),b
  1155   007C14                     
  1156                           ; BSR set to: 0
  1157                           ;main.c: 184: int ligne = 0;
  1158   007C14  0E00               	movlw	0
  1159   007C16  0100               	movlb	0	; force () banked
  1160   007C18  6FCA               	movwf	(afficheMelange@ligne+1)& (0+255),b
  1161   007C1A  0E00               	movlw	0
  1162   007C1C  6FC9               	movwf	afficheMelange@ligne& (0+255),b
  1163   007C1E                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 185: int colonne = 0;
  1166   007C1E  0E00               	movlw	0
  1167   007C20  0100               	movlb	0	; force () banked
  1168   007C22  6FCC               	movwf	(afficheMelange@colonne+1)& (0+255),b
  1169   007C24  0E00               	movlw	0
  1170   007C26  6FCB               	movwf	afficheMelange@colonne& (0+255),b
  1171   007C28                     
  1172                           ; BSR set to: 0
  1173                           ;main.c: 187: for(int i = 0; i <= 4; i++)
  1174   007C28  0E00               	movlw	0
  1175   007C2A  0100               	movlb	0	; force () banked
  1176   007C2C  6FD2               	movwf	(afficheMelange@i+1)& (0+255),b
  1177   007C2E  0E00               	movlw	0
  1178   007C30  6FD1               	movwf	afficheMelange@i& (0+255),b
  1179   007C32                     
  1180                           ; BSR set to: 0
  1181   007C32  0100               	movlb	0	; force () banked
  1182   007C34  BFD2               	btfsc	(afficheMelange@i+1)& (0+255),7,b
  1183   007C36  EF26  F03E         	goto	u561
  1184   007C3A  51D2               	movf	(afficheMelange@i+1)& (0+255),w,b
  1185   007C3C  E109               	bnz	u560
  1186   007C3E  0E05               	movlw	5
  1187   007C40  5DD1               	subwf	afficheMelange@i& (0+255),w,b
  1188   007C42  A0D8               	btfss	status,0,c
  1189   007C44  EF26  F03E         	goto	u561
  1190   007C48  EF28  F03E         	goto	u560
  1191   007C4C                     u561:
  1192   007C4C  EF2A  F03E         	goto	l1694
  1193   007C50                     u560:
  1194   007C50  EF84  F03E         	goto	l1710
  1195   007C54                     l1694:
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;main.c: 188: {;main.c: 189: for(int j = 0; j <= 20; j++)
  1199   007C54  0E00               	movlw	0
  1200   007C56  0100               	movlb	0	; force () banked
  1201   007C58  6FD4               	movwf	(afficheMelange@j+1)& (0+255),b
  1202   007C5A  0E00               	movlw	0
  1203   007C5C  6FD3               	movwf	afficheMelange@j& (0+255),b
  1204   007C5E                     
  1205                           ; BSR set to: 0
  1206   007C5E  0100               	movlb	0	; force () banked
  1207   007C60  BFD4               	btfsc	(afficheMelange@j+1)& (0+255),7,b
  1208   007C62  EF3C  F03E         	goto	u571
  1209   007C66  51D4               	movf	(afficheMelange@j+1)& (0+255),w,b
  1210   007C68  E109               	bnz	u570
  1211   007C6A  0E15               	movlw	21
  1212   007C6C  5DD3               	subwf	afficheMelange@j& (0+255),w,b
  1213   007C6E  A0D8               	btfss	status,0,c
  1214   007C70  EF3C  F03E         	goto	u571
  1215   007C74  EF3E  F03E         	goto	u570
  1216   007C78                     u571:
  1217   007C78  EF40  F03E         	goto	l1700
  1218   007C7C                     u570:
  1219   007C7C  EF72  F03E         	goto	l1706
  1220   007C80                     l1700:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;main.c: 190: {;main.c: 191: oqp[i][j] = 0;
  1224   007C80  C0D1  F060         	movff	afficheMelange@i,___wmul@multiplier
  1225   007C84  C0D2  F061         	movff	afficheMelange@i+1,___wmul@multiplier+1
  1226   007C88  0E00               	movlw	0
  1227   007C8A  0100               	movlb	0	; force () banked
  1228   007C8C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1229   007C8E  0E14               	movlw	20
  1230   007C90  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1231   007C92  EC10  F03B         	call	___wmul	;wreg free
  1232   007C96  0E79               	movlw	low afficheMelange@oqp
  1233   007C98  0100               	movlb	0	; force () banked
  1234   007C9A  2560               	addwf	?___wmul& (0+255),w,b
  1235   007C9C  0100               	movlb	0	; force () banked
  1236   007C9E  6F76               	movwf	??_afficheMelange& (0+255),b
  1237   007CA0  0E00               	movlw	high afficheMelange@oqp
  1238   007CA2  0100               	movlb	0	; force () banked
  1239   007CA4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1240   007CA6  0100               	movlb	0	; force () banked
  1241   007CA8  6F77               	movwf	(??_afficheMelange+1)& (0+255),b
  1242   007CAA  0100               	movlb	0	; force () banked
  1243   007CAC  51D3               	movf	afficheMelange@j& (0+255),w,b
  1244   007CAE  0100               	movlb	0	; force () banked
  1245   007CB0  2576               	addwf	??_afficheMelange& (0+255),w,b
  1246   007CB2  6ED9               	movwf	fsr2l,c
  1247   007CB4  0100               	movlb	0	; force () banked
  1248   007CB6  51D4               	movf	(afficheMelange@j+1)& (0+255),w,b
  1249   007CB8  0100               	movlb	0	; force () banked
  1250   007CBA  2177               	addwfc	(??_afficheMelange+1)& (0+255),w,b
  1251   007CBC  6EDA               	movwf	fsr2h,c
  1252   007CBE  6ADF               	clrf	indf2,c
  1253   007CC0                     
  1254                           ; BSR set to: 0
  1255   007CC0  0100               	movlb	0	; force () banked
  1256   007CC2  4BD3               	infsnz	afficheMelange@j& (0+255),f,b
  1257   007CC4  2BD4               	incf	(afficheMelange@j+1)& (0+255),f,b
  1258   007CC6                     
  1259                           ; BSR set to: 0
  1260   007CC6  0100               	movlb	0	; force () banked
  1261   007CC8  BFD4               	btfsc	(afficheMelange@j+1)& (0+255),7,b
  1262   007CCA  EF70  F03E         	goto	u581
  1263   007CCE  51D4               	movf	(afficheMelange@j+1)& (0+255),w,b
  1264   007CD0  E109               	bnz	u580
  1265   007CD2  0E15               	movlw	21
  1266   007CD4  5DD3               	subwf	afficheMelange@j& (0+255),w,b
  1267   007CD6  A0D8               	btfss	status,0,c
  1268   007CD8  EF70  F03E         	goto	u581
  1269   007CDC  EF72  F03E         	goto	u580
  1270   007CE0                     u581:
  1271   007CE0  EF40  F03E         	goto	l1700
  1272   007CE4                     u580:
  1273   007CE4                     l1706:
  1274                           
  1275                           ; BSR set to: 0
  1276   007CE4  0100               	movlb	0	; force () banked
  1277   007CE6  4BD1               	infsnz	afficheMelange@i& (0+255),f,b
  1278   007CE8  2BD2               	incf	(afficheMelange@i+1)& (0+255),f,b
  1279   007CEA                     
  1280                           ; BSR set to: 0
  1281   007CEA  0100               	movlb	0	; force () banked
  1282   007CEC  BFD2               	btfsc	(afficheMelange@i+1)& (0+255),7,b
  1283   007CEE  EF82  F03E         	goto	u591
  1284   007CF2  51D2               	movf	(afficheMelange@i+1)& (0+255),w,b
  1285   007CF4  E109               	bnz	u590
  1286   007CF6  0E05               	movlw	5
  1287   007CF8  5DD1               	subwf	afficheMelange@i& (0+255),w,b
  1288   007CFA  A0D8               	btfss	status,0,c
  1289   007CFC  EF82  F03E         	goto	u591
  1290   007D00  EF84  F03E         	goto	u590
  1291   007D04                     u591:
  1292   007D04  EF2A  F03E         	goto	l1694
  1293   007D08                     u590:
  1294   007D08                     l1710:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 195: {;main.c: 196: for(int i = 0 ; i <= lgMot; i++)
  1298   007D08  0E00               	movlw	0
  1299   007D0A  0100               	movlb	0	; force () banked
  1300   007D0C  6FD0               	movwf	(afficheMelange@i_114+1)& (0+255),b
  1301   007D0E  0E00               	movlw	0
  1302   007D10  6FCF               	movwf	afficheMelange@i_114& (0+255),b
  1303   007D12  EFBE  F03E         	goto	l1724
  1304   007D16                     l1712:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;main.c: 197: {;main.c: 198: lettre = mot[i];
  1308   007D16  0100               	movlb	0	; force () banked
  1309   007D18  51CF               	movf	afficheMelange@i_114& (0+255),w,b
  1310   007D1A  0100               	movlb	0	; force () banked
  1311   007D1C  2574               	addwf	afficheMelange@mot& (0+255),w,b
  1312   007D1E  6ED9               	movwf	fsr2l,c
  1313   007D20  0100               	movlb	0	; force () banked
  1314   007D22  51D0               	movf	(afficheMelange@i_114+1)& (0+255),w,b
  1315   007D24  0100               	movlb	0	; force () banked
  1316   007D26  2175               	addwfc	(afficheMelange@mot+1)& (0+255),w,b
  1317   007D28  6EDA               	movwf	fsr2h,c
  1318   007D2A  50DF               	movf	indf2,w,c
  1319   007D2C  0100               	movlb	0	; force () banked
  1320   007D2E  6FCE               	movwf	afficheMelange@lettre& (0+255),b
  1321   007D30                     
  1322                           ; BSR set to: 0
  1323                           ;main.c: 199: ligne = rand()%20;
  1324   007D30  EC19  F03C         	call	_rand	;wreg free
  1325   007D34  C06C  F06E         	movff	?_rand,___awmod@dividend
  1326   007D38  C06D  F06F         	movff	?_rand+1,___awmod@dividend+1
  1327   007D3C  0E00               	movlw	0
  1328   007D3E  0100               	movlb	0	; force () banked
  1329   007D40  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  1330   007D42  0E14               	movlw	20
  1331   007D44  6F70               	movwf	___awmod@divisor& (0+255),b
  1332   007D46  ECA4  F03D         	call	___awmod	;wreg free
  1333   007D4A  C06E  F0C9         	movff	?___awmod,afficheMelange@ligne
  1334   007D4E  C06F  F0CA         	movff	?___awmod+1,afficheMelange@ligne+1
  1335   007D52                     
  1336                           ;main.c: 200: colonne = rand()%4;
  1337   007D52  EC19  F03C         	call	_rand	;wreg free
  1338   007D56  0E03               	movlw	3
  1339   007D58  0100               	movlb	0	; force () banked
  1340   007D5A  156C               	andwf	?_rand& (0+255),w,b
  1341   007D5C  0100               	movlb	0	; force () banked
  1342   007D5E  6FCB               	movwf	afficheMelange@colonne& (0+255),b
  1343   007D60  6BCC               	clrf	(afficheMelange@colonne+1)& (0+255),b
  1344   007D62                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 201: lcd_gotoXY(ligne, colonne);
  1347   007D62  C0CB  F063         	movff	afficheMelange@colonne,lcd_gotoXY@y
  1348   007D66  0100               	movlb	0	; force () banked
  1349   007D68  51C9               	movf	afficheMelange@ligne& (0+255),w,b
  1350   007D6A  EC1C  F03D         	call	_lcd_gotoXY
  1351   007D6E                     
  1352                           ;main.c: 202: lcd_ecritChar(lettre);
  1353   007D6E  0100               	movlb	0	; force () banked
  1354   007D70  51CE               	movf	afficheMelange@lettre& (0+255),w,b
  1355   007D72  ECEF  F03B         	call	_lcd_ecritChar
  1356   007D76  0100               	movlb	0	; force () banked
  1357   007D78  4BCF               	infsnz	afficheMelange@i_114& (0+255),f,b
  1358   007D7A  2BD0               	incf	(afficheMelange@i_114+1)& (0+255),f,b
  1359   007D7C                     l1724:
  1360                           
  1361                           ; BSR set to: 0
  1362   007D7C  0100               	movlb	0	; force () banked
  1363   007D7E  51CD               	movf	afficheMelange@lgMot& (0+255),w,b
  1364   007D80  0100               	movlb	0	; force () banked
  1365   007D82  6F76               	movwf	??_afficheMelange& (0+255),b
  1366   007D84  6B77               	clrf	(??_afficheMelange+1)& (0+255),b
  1367   007D86  0100               	movlb	0	; force () banked
  1368   007D88  51CF               	movf	afficheMelange@i_114& (0+255),w,b
  1369   007D8A  0100               	movlb	0	; force () banked
  1370   007D8C  5D76               	subwf	??_afficheMelange& (0+255),w,b
  1371   007D8E  5177               	movf	(??_afficheMelange+1)& (0+255),w,b
  1372   007D90  0A80               	xorlw	128
  1373   007D92  6F78               	movwf	(??_afficheMelange+2)& (0+255),b
  1374   007D94  0100               	movlb	0	; force () banked
  1375   007D96  51D0               	movf	(afficheMelange@i_114+1)& (0+255),w,b
  1376   007D98  0A80               	xorlw	128
  1377   007D9A  0100               	movlb	0	; force () banked
  1378   007D9C  5978               	subwfb	(??_afficheMelange+2)& (0+255),w,b
  1379   007D9E  B0D8               	btfsc	status,0,c
  1380   007DA0  EFD4  F03E         	goto	u601
  1381   007DA4  EFD6  F03E         	goto	u600
  1382   007DA8                     u601:
  1383   007DA8  EF8B  F03E         	goto	l1712
  1384   007DAC                     u600:
  1385   007DAC                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 203: };main.c: 204: };main.c: 206: while(oqp[4][20] == 1);
  1388   007DAC  0100               	movlb	0	; force () banked
  1389   007DAE  05DD               	decf	(afficheMelange@oqp+100)& (0+255),w,b
  1390   007DB0  B4D8               	btfsc	status,2,c
  1391   007DB2  EFDD  F03E         	goto	u611
  1392   007DB6  EFDF  F03E         	goto	u610
  1393   007DBA                     u611:
  1394   007DBA  EF84  F03E         	goto	l1710
  1395   007DBE                     u610:
  1396   007DBE                     
  1397                           ; BSR set to: 0
  1398   007DBE  0012               	return		;funcret
  1399   007DC0                     __end_of_afficheMelange:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function _strlen *****************
  1403 ;; Defined at:
  1404 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strlen.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  1407 ;;		 -> main@messages(45), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  1410 ;;		 -> main@messages(45), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2    0[BANK0 ] unsigned int 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       2       0       0       0       0       0
  1421 ;;      Locals:         0       2       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0
  1423 ;;      Totals:         0       4       0       0       0       0       0
  1424 ;;Total ram usage:        4 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_afficheMelange
  1430 ;;		_jouePendu
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text9
  1435   0076D4                     __ptext9:
  1436                           	callstack 0
  1437   0076D4                     _strlen:
  1438                           	callstack 28
  1439   0076D4  C060  F062         	movff	strlen@s,strlen@cp
  1440   0076D8  C061  F063         	movff	strlen@s+1,strlen@cp+1
  1441   0076DC  EF73  F03B         	goto	l1582
  1442   0076E0                     l1580:
  1443   0076E0  0100               	movlb	0	; () banked
  1444   0076E2  4B62               	infsnz	strlen@cp& (0+255),f,b
  1445   0076E4  2B63               	incf	(strlen@cp+1)& (0+255),f,b
  1446   0076E6                     l1582:
  1447   0076E6  C062  FFD9         	movff	strlen@cp,fsr2l
  1448   0076EA  C063  FFDA         	movff	strlen@cp+1,fsr2h
  1449   0076EE  50DF               	movf	indf2,w,c
  1450   0076F0  A4D8               	btfss	status,2,c
  1451   0076F2  EF7D  F03B         	goto	u471
  1452   0076F6  EF7F  F03B         	goto	u470
  1453   0076FA                     u471:
  1454   0076FA  EF70  F03B         	goto	l1580
  1455   0076FE                     u470:
  1456   0076FE  0100               	movlb	0	; () banked
  1457   007700  5160               	movf	strlen@s& (0+255),w,b
  1458   007702  5D62               	subwf	strlen@cp& (0+255),w,b
  1459   007704  6F60               	movwf	?_strlen& (0+255),b
  1460   007706  5161               	movf	(strlen@s+1)& (0+255),w,b
  1461   007708  5963               	subwfb	(strlen@cp+1)& (0+255),w,b
  1462   00770A  6F61               	movwf	(?_strlen+1)& (0+255),b
  1463   00770C                     
  1464                           ; BSR set to: 0
  1465   00770C  0012               	return		;funcret
  1466   00770E                     __end_of_strlen:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _rand *****************
  1470 ;; Defined at:
  1471 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\rand.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2   12[BANK0 ] int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       2       0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0
  1488 ;;      Totals:         0       2       0       0       0       0       0
  1489 ;;Total ram usage:        2 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 1
  1492 ;; This function calls:
  1493 ;;		___lmul
  1494 ;; This function is called by:
  1495 ;;		_afficheMelange
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text10
  1500   007832                     __ptext10:
  1501                           	callstack 0
  1502   007832                     _rand:
  1503                           	callstack 27
  1504   007832  C0D8  F060         	movff	_randx,___lmul@multiplier
  1505   007836  C0D9  F061         	movff	_randx+1,___lmul@multiplier+1
  1506   00783A  C0DA  F062         	movff	_randx+2,___lmul@multiplier+2
  1507   00783E  C0DB  F063         	movff	_randx+3,___lmul@multiplier+3
  1508   007842  0E6D               	movlw	109
  1509   007844  0100               	movlb	0	; () banked
  1510   007846  6F64               	movwf	___lmul@multiplicand& (0+255),b
  1511   007848  0E4E               	movlw	78
  1512   00784A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1513   00784C  0EC6               	movlw	198
  1514   00784E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1515   007850  0E41               	movlw	65
  1516   007852  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1517   007854  ECAF  F03C         	call	___lmul	;wreg free
  1518   007858  C060  F0D8         	movff	?___lmul,_randx
  1519   00785C  C061  F0D9         	movff	?___lmul+1,_randx+1
  1520   007860  C062  F0DA         	movff	?___lmul+2,_randx+2
  1521   007864  C063  F0DB         	movff	?___lmul+3,_randx+3
  1522   007868  0E39               	movlw	57
  1523   00786A  0100               	movlb	0	; () banked
  1524   00786C  27D8               	addwf	_randx& (0+255),f,b
  1525   00786E  0E30               	movlw	48
  1526   007870  23D9               	addwfc	(_randx+1)& (0+255),f,b
  1527   007872  0E00               	movlw	0
  1528   007874  23DA               	addwfc	(_randx+2)& (0+255),f,b
  1529   007876  0E00               	movlw	0
  1530   007878  23DB               	addwfc	(_randx+3)& (0+255),f,b
  1531   00787A                     
  1532                           ; BSR set to: 0
  1533   00787A  0EFF               	movlw	255
  1534   00787C  15DA               	andwf	(_randx+2)& (0+255),w,b
  1535   00787E  6F6C               	movwf	?_rand& (0+255),b
  1536   007880  0E7F               	movlw	127
  1537   007882  15DB               	andwf	(_randx+3)& (0+255),w,b
  1538   007884  6F6D               	movwf	(?_rand+1)& (0+255),b
  1539   007886                     
  1540                           ; BSR set to: 0
  1541   007886  0012               	return		;funcret
  1542   007888                     __end_of_rand:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function ___lmul *****************
  1546 ;; Defined at:
  1547 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1550 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  product         4    8[BANK0 ] unsigned long 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  4    0[BANK0 ] unsigned long 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       8       0       0       0       0       0
  1563 ;;      Locals:         0       4       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0
  1565 ;;      Totals:         0      12       0       0       0       0       0
  1566 ;;Total ram usage:       12 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_rand
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text11
  1576   00795E                     __ptext11:
  1577                           	callstack 0
  1578   00795E                     ___lmul:
  1579                           	callstack 27
  1580   00795E  0E00               	movlw	0
  1581   007960  0100               	movlb	0	; () banked
  1582   007962  6F68               	movwf	___lmul@product& (0+255),b
  1583   007964  0E00               	movlw	0
  1584   007966  6F69               	movwf	(___lmul@product+1)& (0+255),b
  1585   007968  0E00               	movlw	0
  1586   00796A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
  1587   00796C  0E00               	movlw	0
  1588   00796E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
  1589   007970                     l1570:
  1590                           
  1591                           ; BSR set to: 0
  1592   007970  A160               	btfss	___lmul@multiplier& (0+255),0,b
  1593   007972  EFBD  F03C         	goto	u451
  1594   007976  EFBF  F03C         	goto	u450
  1595   00797A                     u451:
  1596   00797A  EFC7  F03C         	goto	l1574
  1597   00797E                     u450:
  1598   00797E                     
  1599                           ; BSR set to: 0
  1600   00797E  5164               	movf	___lmul@multiplicand& (0+255),w,b
  1601   007980  2768               	addwf	___lmul@product& (0+255),f,b
  1602   007982  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1603   007984  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
  1604   007986  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1605   007988  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
  1606   00798A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1607   00798C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
  1608   00798E                     l1574:
  1609                           
  1610                           ; BSR set to: 0
  1611   00798E  90D8               	bcf	status,0,c
  1612   007990  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
  1613   007992  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1614   007994  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1615   007996  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1616   007998                     
  1617                           ; BSR set to: 0
  1618   007998  90D8               	bcf	status,0,c
  1619   00799A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1620   00799C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1621   00799E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1622   0079A0  3360               	rrcf	___lmul@multiplier& (0+255),f,b
  1623   0079A2  5160               	movf	___lmul@multiplier& (0+255),w,b
  1624   0079A4  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1625   0079A6  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1626   0079A8  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1627   0079AA  A4D8               	btfss	status,2,c
  1628   0079AC  EFDA  F03C         	goto	u461
  1629   0079B0  EFDC  F03C         	goto	u460
  1630   0079B4                     u461:
  1631   0079B4  EFB8  F03C         	goto	l1570
  1632   0079B8                     u460:
  1633   0079B8                     
  1634                           ; BSR set to: 0
  1635   0079B8  C068  F060         	movff	___lmul@product,?___lmul
  1636   0079BC  C069  F061         	movff	___lmul@product+1,?___lmul+1
  1637   0079C0  C06A  F062         	movff	___lmul@product+2,?___lmul+2
  1638   0079C4  C06B  F063         	movff	___lmul@product+3,?___lmul+3
  1639   0079C8                     
  1640                           ; BSR set to: 0
  1641   0079C8  0012               	return		;funcret
  1642   0079CA                     __end_of___lmul:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _lcd_gotoXY *****************
  1646 ;; Defined at:
  1647 ;;		line 314 in file "Lcd4Lignes.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  x               1    wreg     unsigned char 
  1650 ;;  y               1    3[BANK0 ] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  x               1    4[BANK0 ] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         0       1       0       0       0       0       0
  1663 ;;      Locals:         0       1       0       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0
  1665 ;;      Totals:         0       2       0       0       0       0       0
  1666 ;;Total ram usage:        2 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 3
  1669 ;; This function calls:
  1670 ;;		_lcd_wrCom
  1671 ;; This function is called by:
  1672 ;;		_afficheMelange
  1673 ;;		_jouePendu
  1674 ;;		_lcd_effaceLigne
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text12
  1679   007A38                     __ptext12:
  1680                           	callstack 0
  1681   007A38                     _lcd_gotoXY:
  1682                           	callstack 25
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;incstack = 0
  1686                           ;lcd_gotoXY@x stored from wreg
  1687   007A38  0100               	movlb	0	; force () banked
  1688   007A3A  6F64               	movwf	lcd_gotoXY@x& (0+255),b
  1689   007A3C                     
  1690                           ;Lcd4Lignes.c: 316: switch(y)
  1691   007A3C  EF40  F03D         	goto	l1612
  1692   007A40                     l1602:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  1696   007A40  0100               	movlb	0	; force () banked
  1697   007A42  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1698   007A44  0F7F               	addlw	127
  1699   007A46  0980               	iorlw	128
  1700   007A48  EC79  F03C         	call	_lcd_wrCom
  1701                           
  1702                           ;Lcd4Lignes.c: 320: break;
  1703   007A4C  EF54  F03D         	goto	l187
  1704   007A50                     l1604:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  1708   007A50  0100               	movlb	0	; force () banked
  1709   007A52  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1710   007A54  0FBF               	addlw	191
  1711   007A56  0980               	iorlw	128
  1712   007A58  EC79  F03C         	call	_lcd_wrCom
  1713                           
  1714                           ;Lcd4Lignes.c: 323: break;
  1715   007A5C  EF54  F03D         	goto	l187
  1716   007A60                     l1606:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  1720   007A60  0100               	movlb	0	; force () banked
  1721   007A62  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1722   007A64  0F93               	addlw	147
  1723   007A66  0980               	iorlw	128
  1724   007A68  EC79  F03C         	call	_lcd_wrCom
  1725                           
  1726                           ;Lcd4Lignes.c: 326: break;
  1727   007A6C  EF54  F03D         	goto	l187
  1728   007A70                     l1608:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  1732   007A70  0100               	movlb	0	; force () banked
  1733   007A72  5164               	movf	lcd_gotoXY@x& (0+255),w,b
  1734   007A74  0FD3               	addlw	211
  1735   007A76  0980               	iorlw	128
  1736   007A78  EC79  F03C         	call	_lcd_wrCom
  1737                           
  1738                           ;Lcd4Lignes.c: 329: break;
  1739   007A7C  EF54  F03D         	goto	l187
  1740   007A80                     l1612:
  1741   007A80  0100               	movlb	0	; force () banked
  1742   007A82  5163               	movf	lcd_gotoXY@y& (0+255),w,b
  1743                           
  1744                           ; Switch size 1, requested type "simple"
  1745                           ; Number of cases is 4, Range of values is 1 to 4
  1746                           ; switch strategies available:
  1747                           ; Name         Instructions Cycles
  1748                           ; simple_byte           13     7 (average)
  1749                           ;	Chosen strategy is simple_byte
  1750   007A84  0A01               	xorlw	1	; case 1
  1751   007A86  B4D8               	btfsc	status,2,c
  1752   007A88  EF20  F03D         	goto	l1602
  1753   007A8C  0A03               	xorlw	3	; case 2
  1754   007A8E  B4D8               	btfsc	status,2,c
  1755   007A90  EF28  F03D         	goto	l1604
  1756   007A94  0A01               	xorlw	1	; case 3
  1757   007A96  B4D8               	btfsc	status,2,c
  1758   007A98  EF30  F03D         	goto	l1606
  1759   007A9C  0A07               	xorlw	7	; case 4
  1760   007A9E  B4D8               	btfsc	status,2,c
  1761   007AA0  EF38  F03D         	goto	l1608
  1762   007AA4  EF54  F03D         	goto	l187
  1763   007AA8                     l187:
  1764   007AA8  0012               	return		;funcret
  1765   007AAA                     __end_of_lcd_gotoXY:
  1766                           	callstack 0
  1767                           
  1768 ;; *************** function _lcd_ecritChar *****************
  1769 ;; Defined at:
  1770 ;;		line 359 in file "Lcd4Lignes.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  car             1    wreg     unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  car             1    3[BANK0 ] unsigned char 
  1775 ;;  posRam          1    4[BANK0 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1785 ;;      Params:         0       0       0       0       0       0       0
  1786 ;;      Locals:         0       2       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0
  1788 ;;      Totals:         0       2       0       0       0       0       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 3
  1792 ;; This function calls:
  1793 ;;		_lcd_wrCom
  1794 ;;		_lcd_wrData
  1795 ;; This function is called by:
  1796 ;;		_afficheMelange
  1797 ;;		_jouePendu
  1798 ;;		_lcd_putMessage
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text13
  1803   0077DE                     __ptext13:
  1804                           	callstack 0
  1805   0077DE                     _lcd_ecritChar:
  1806                           	callstack 25
  1807                           
  1808                           ;incstack = 0
  1809                           ;lcd_ecritChar@car stored from wreg
  1810   0077DE  0100               	movlb	0	; force () banked
  1811   0077E0  6F63               	movwf	lcd_ecritChar@car& (0+255),b
  1812   0077E2                     
  1813                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  1814   0077E2  0100               	movlb	0	; force () banked
  1815   0077E4  5163               	movf	lcd_ecritChar@car& (0+255),w,b
  1816   0077E6  EC50  F03B         	call	_lcd_wrData
  1817   0077EA  0100               	movlb	0	; force () banked
  1818   0077EC  6F64               	movwf	lcd_ecritChar@posRam& (0+255),b
  1819                           
  1820                           ;Lcd4Lignes.c: 364: switch(posRam)
  1821   0077EE  EF08  F03C         	goto	l1598
  1822   0077F2                     l1590:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  1826   0077F2  0EC0               	movlw	192
  1827   0077F4  EC79  F03C         	call	_lcd_wrCom
  1828                           
  1829                           ;Lcd4Lignes.c: 368: break;
  1830   0077F8  EF18  F03C         	goto	l198
  1831   0077FC                     l1592:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  1835   0077FC  0E94               	movlw	148
  1836   0077FE  EC79  F03C         	call	_lcd_wrCom
  1837                           
  1838                           ;Lcd4Lignes.c: 371: break;
  1839   007802  EF18  F03C         	goto	l198
  1840   007806                     l1594:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  1844   007806  0ED4               	movlw	212
  1845   007808  EC79  F03C         	call	_lcd_wrCom
  1846                           
  1847                           ;Lcd4Lignes.c: 374: break;
  1848   00780C  EF18  F03C         	goto	l198
  1849   007810                     l1598:
  1850                           
  1851                           ; BSR set to: 0
  1852   007810  0100               	movlb	0	; force () banked
  1853   007812  5164               	movf	lcd_ecritChar@posRam& (0+255),w,b
  1854                           
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 3, Range of values is 148 to 212
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           10     6 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861   007814  0A94               	xorlw	148	; case 148
  1862   007816  B4D8               	btfsc	status,2,c
  1863   007818  EFF9  F03B         	goto	l1590
  1864   00781C  0A54               	xorlw	84	; case 192
  1865   00781E  B4D8               	btfsc	status,2,c
  1866   007820  EF03  F03C         	goto	l1594
  1867   007824  0A14               	xorlw	20	; case 212
  1868   007826  B4D8               	btfsc	status,2,c
  1869   007828  EFFE  F03B         	goto	l1592
  1870   00782C  EF18  F03C         	goto	l198
  1871   007830                     l198:
  1872   007830  0012               	return		;funcret
  1873   007832                     __end_of_lcd_ecritChar:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _lcd_wrData *****************
  1877 ;; Defined at:
  1878 ;;		line 188 in file "Lcd4Lignes.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  caractere       1    wreg     unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  caractere       1    2[BANK0 ] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      unsigned char 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1892 ;;      Params:         0       0       0       0       0       0       0
  1893 ;;      Locals:         0       1       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0
  1895 ;;      Totals:         0       1       0       0       0       0       0
  1896 ;;Total ram usage:        1 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 2
  1899 ;; This function calls:
  1900 ;;		_lcd_busy
  1901 ;;		_lcd_ecrireDonnees
  1902 ;;		_lcd_strobeEnableBit
  1903 ;; This function is called by:
  1904 ;;		_lcd_ecritChar
  1905 ;;		_lcd_initCGRam
  1906 ;;		_lcd_effaceChar
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text14
  1911   0076A0                     __ptext14:
  1912                           	callstack 0
  1913   0076A0                     _lcd_wrData:
  1914                           	callstack 26
  1915                           
  1916                           ;incstack = 0
  1917                           ;lcd_wrData@caractere stored from wreg
  1918   0076A0  0100               	movlb	0	; force () banked
  1919   0076A2  6F62               	movwf	lcd_wrData@caractere& (0+255),b
  1920   0076A4                     
  1921                           ;Lcd4Lignes.c: 190: lcd_busy();
  1922   0076A4  EC87  F03B         	call	_lcd_busy	;wreg free
  1923   0076A8                     
  1924                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  1925   0076A8  0E00               	movlw	0
  1926   0076AA  6E95               	movwf	149,c	;volatile
  1927   0076AC                     
  1928                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  1929   0076AC  8080               	bsf	128,0,c	;volatile
  1930   0076AE                     
  1931                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  1932   0076AE  9280               	bcf	128,1,c	;volatile
  1933   0076B0                     
  1934                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  1935   0076B0  0100               	movlb	0	; force () banked
  1936   0076B2  3962               	swapf	lcd_wrData@caractere& (0+255),w,b
  1937   0076B4  0B0F               	andlw	15
  1938   0076B6  ECF3  F03A         	call	_lcd_ecrireDonnees
  1939   0076BA                     
  1940                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  1941   0076BA  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
  1942   0076BE                     
  1943                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  1944   0076BE  0100               	movlb	0	; force () banked
  1945   0076C0  5162               	movf	lcd_wrData@caractere& (0+255),w,b
  1946   0076C2  ECF3  F03A         	call	_lcd_ecrireDonnees
  1947   0076C6                     
  1948                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  1949   0076C6  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
  1950   0076CA                     
  1951                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  1952   0076CA  0E0F               	movlw	15
  1953   0076CC  6E95               	movwf	149,c	;volatile
  1954   0076CE                     
  1955                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  1956                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  1957   0076CE  EC87  F03B         	call	_lcd_busy	;wreg free
  1958   0076D2  0012               	return		;funcret
  1959   0076D4                     __end_of_lcd_wrData:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _lcd_wrCom *****************
  1963 ;; Defined at:
  1964 ;;		line 156 in file "Lcd4Lignes.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  commande        1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  commande        1    2[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      unsigned char 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         0       0       0       0       0       0       0
  1979 ;;      Locals:         0       1       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0
  1981 ;;      Totals:         0       1       0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 2
  1985 ;; This function calls:
  1986 ;;		_lcd_busy
  1987 ;;		_lcd_ecrireDonnees
  1988 ;;		_lcd_strobeEnableBit
  1989 ;; This function is called by:
  1990 ;;		_lcd_init
  1991 ;;		_lcd_curseurHome
  1992 ;;		_lcd_gotoXY
  1993 ;;		_lcd_ecritChar
  1994 ;;		_lcd_initCGRam
  1995 ;;		_lcd_effaceAffichage
  1996 ;;		_lcd_cacheCurseur
  1997 ;;		_lcd_montreCurseur
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text15
  2002   0078F2                     __ptext15:
  2003                           	callstack 0
  2004   0078F2                     _lcd_wrCom:
  2005                           	callstack 27
  2006                           
  2007                           ;incstack = 0
  2008                           ;lcd_wrCom@commande stored from wreg
  2009   0078F2  0100               	movlb	0	; force () banked
  2010   0078F4  6F62               	movwf	lcd_wrCom@commande& (0+255),b
  2011   0078F6                     
  2012                           ;Lcd4Lignes.c: 158: lcd_busy();
  2013   0078F6  EC87  F03B         	call	_lcd_busy	;wreg free
  2014   0078FA                     
  2015                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  2016   0078FA  0E00               	movlw	0
  2017   0078FC  6E95               	movwf	149,c	;volatile
  2018   0078FE                     
  2019                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  2020   0078FE  9080               	bcf	128,0,c	;volatile
  2021   007900                     
  2022                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  2023   007900  9280               	bcf	128,1,c	;volatile
  2024   007902                     
  2025                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  2026   007902  0100               	movlb	0	; force () banked
  2027   007904  3962               	swapf	lcd_wrCom@commande& (0+255),w,b
  2028   007906  0B0F               	andlw	15
  2029   007908  ECF3  F03A         	call	_lcd_ecrireDonnees
  2030   00790C                     
  2031                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  2032   00790C  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
  2033   007910                     
  2034                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  2035   007910  0100               	movlb	0	; force () banked
  2036   007912  5162               	movf	lcd_wrCom@commande& (0+255),w,b
  2037   007914  ECF3  F03A         	call	_lcd_ecrireDonnees
  2038   007918                     
  2039                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  2040   007918  ECCC  F03A         	call	_lcd_strobeEnableBit	;wreg free
  2041   00791C                     
  2042                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  2043   00791C  0E03               	movlw	3
  2044   00791E                     u857:
  2045   00791E  2EE8               	decfsz	wreg,f,c
  2046   007920  D7FE               	bra	u857
  2047   007922  F000               	nop	
  2048   007924                     
  2049                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  2050   007924  0100               	movlb	0	; force () banked
  2051   007926  0562               	decf	lcd_wrCom@commande& (0+255),w,b
  2052   007928  B4D8               	btfsc	status,2,c
  2053   00792A  EF99  F03C         	goto	u431
  2054   00792E  EF9B  F03C         	goto	u430
  2055   007932                     u431:
  2056   007932  EFA5  F03C         	goto	l1530
  2057   007936                     u430:
  2058   007936                     
  2059                           ; BSR set to: 0
  2060   007936  0E02               	movlw	2
  2061   007938  0100               	movlb	0	; force () banked
  2062   00793A  1962               	xorwf	lcd_wrCom@commande& (0+255),w,b
  2063   00793C  A4D8               	btfss	status,2,c
  2064   00793E  EFA3  F03C         	goto	u441
  2065   007942  EFA5  F03C         	goto	u440
  2066   007946                     u441:
  2067   007946  EFAA  F03C         	goto	l1532
  2068   00794A                     u440:
  2069   00794A                     l1530:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  2073   00794A  0EA6               	movlw	166
  2074   00794C                     u867:
  2075   00794C  2EE8               	decfsz	wreg,f,c
  2076   00794E  D7FE               	bra	u867
  2077   007950  F000 F000          	nop2	
  2078   007954                     l1532:
  2079                           
  2080                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  2081   007954  0E0F               	movlw	15
  2082   007956  6E95               	movwf	149,c	;volatile
  2083   007958                     
  2084                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  2085   007958  EC87  F03B         	call	_lcd_busy	;wreg free
  2086   00795C  0012               	return		;funcret
  2087   00795E                     __end_of_lcd_wrCom:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _lcd_strobeEnableBit *****************
  2091 ;; Defined at:
  2092 ;;		line 431 in file "Lcd4Lignes.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		None
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2106 ;;      Params:         0       0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_lcd_wrCom
  2116 ;;		_lcd_wrData
  2117 ;;		_lcd_resetSequence
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text16
  2122   007598                     __ptext16:
  2123                           	callstack 0
  2124   007598                     _lcd_strobeEnableBit:
  2125                           	callstack 28
  2126   007598                     
  2127                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  2128   007598  8480               	bsf	128,2,c	;volatile
  2129                           
  2130                           ;Lcd4Lignes.c: 434: __nop();
  2131   00759A  F000               	nop	
  2132                           
  2133                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  2134   00759C  9480               	bcf	128,2,c	;volatile
  2135   00759E  0012               	return		;funcret
  2136   0075A0                     __end_of_lcd_strobeEnableBit:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function _lcd_ecrireDonnees *****************
  2140 ;; Defined at:
  2141 ;;		line 107 in file "Lcd4Lignes.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  donnee          1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  donnee          1    1[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2155 ;;      Params:         0       0       0       0       0       0       0
  2156 ;;      Locals:         0       1       0       0       0       0       0
  2157 ;;      Temps:          0       1       0       0       0       0       0
  2158 ;;      Totals:         0       2       0       0       0       0       0
  2159 ;;Total ram usage:        2 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_lcd_wrCom
  2165 ;;		_lcd_wrData
  2166 ;;		_lcd_resetSequence
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text17
  2171   0075E6                     __ptext17:
  2172                           	callstack 0
  2173   0075E6                     _lcd_ecrireDonnees:
  2174                           	callstack 28
  2175                           
  2176                           ;incstack = 0
  2177                           ;lcd_ecrireDonnees@donnee stored from wreg
  2178   0075E6  0100               	movlb	0	; force () banked
  2179   0075E8  6F61               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  2180   0075EA                     
  2181                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  2182   0075EA  CF83 F060          	movff	3971,??_lcd_ecrireDonnees	;volatile
  2183   0075EE  0EF0               	movlw	240
  2184   0075F0  0100               	movlb	0	; force () banked
  2185   0075F2  1760               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  2186   0075F4  0100               	movlb	0	; force () banked
  2187   0075F6  5161               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  2188   0075F8  0B0F               	andlw	15
  2189   0075FA  0100               	movlb	0	; force () banked
  2190   0075FC  1160               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  2191   0075FE  6E83               	movwf	131,c	;volatile
  2192   007600                     
  2193                           ; BSR set to: 0
  2194   007600  0012               	return		;funcret
  2195   007602                     __end_of_lcd_ecrireDonnees:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _lcd_busy *****************
  2199 ;; Defined at:
  2200 ;;		line 124 in file "Lcd4Lignes.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  adresse         1    1[BANK0 ] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2214 ;;      Params:         0       0       0       0       0       0       0
  2215 ;;      Locals:         0       1       0       0       0       0       0
  2216 ;;      Temps:          0       1       0       0       0       0       0
  2217 ;;      Totals:         0       2       0       0       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 1
  2221 ;; This function calls:
  2222 ;;		_lcd_lireDonnees
  2223 ;; This function is called by:
  2224 ;;		_lcd_wrCom
  2225 ;;		_lcd_wrData
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text18
  2230   00770E                     __ptext18:
  2231                           	callstack 0
  2232   00770E                     _lcd_busy:
  2233                           	callstack 27
  2234   00770E                     
  2235                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  2236   00770E  9080               	bcf	128,0,c	;volatile
  2237                           
  2238                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  2239   007710  8280               	bsf	128,1,c	;volatile
  2240   007712                     l149:
  2241                           
  2242                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  2243   007712  8480               	bsf	128,2,c	;volatile
  2244                           
  2245                           ;Lcd4Lignes.c: 134: __nop();
  2246   007714  F000               	nop	
  2247   007716                     
  2248                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  2249   007716  ECC9  F03A         	call	_lcd_lireDonnees	;wreg free
  2250   00771A  0100               	movlb	0	; force () banked
  2251   00771C  6F60               	movwf	??_lcd_busy& (0+255),b
  2252   00771E  3960               	swapf	??_lcd_busy& (0+255),w,b
  2253   007720  0BF0               	andlw	240
  2254   007722  0100               	movlb	0	; force () banked
  2255   007724  6F61               	movwf	lcd_busy@adresse& (0+255),b
  2256   007726                     
  2257                           ; BSR set to: 0
  2258                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  2259   007726  9480               	bcf	128,2,c	;volatile
  2260   007728                     
  2261                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  2262   007728  8480               	bsf	128,2,c	;volatile
  2263   00772A                     
  2264                           ;Lcd4Lignes.c: 139: __nop();
  2265   00772A  F000               	nop	
  2266                           
  2267                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  2268   00772C  ECC9  F03A         	call	_lcd_lireDonnees	;wreg free
  2269   007730  0100               	movlb	0	; force () banked
  2270   007732  1361               	iorwf	lcd_busy@adresse& (0+255),f,b
  2271   007734                     
  2272                           ; BSR set to: 0
  2273                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  2274   007734  9480               	bcf	128,2,c	;volatile
  2275   007736                     
  2276                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  2277   007736  0100               	movlb	0	; force () banked
  2278   007738  BF61               	btfsc	lcd_busy@adresse& (0+255),7,b
  2279   00773A  EFA1  F03B         	goto	u421
  2280   00773E  EFA3  F03B         	goto	u420
  2281   007742                     u421:
  2282   007742  EF89  F03B         	goto	l149
  2283   007746                     u420:
  2284   007746                     
  2285                           ; BSR set to: 0
  2286                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  2287   007746  9280               	bcf	128,1,c	;volatile
  2288   007748                     
  2289                           ; BSR set to: 0
  2290                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  2291   007748  0100               	movlb	0	; force () banked
  2292   00774A  5161               	movf	lcd_busy@adresse& (0+255),w,b
  2293   00774C  0B7F               	andlw	127
  2294   00774E                     
  2295                           ; BSR set to: 0
  2296   00774E  0012               	return		;funcret
  2297   007750                     __end_of_lcd_busy:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _lcd_lireDonnees *****************
  2301 ;; Defined at:
  2302 ;;		line 93 in file "Lcd4Lignes.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      unsigned char 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2316 ;;      Params:         0       0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_lcd_busy
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text19
  2330   007592                     __ptext19:
  2331                           	callstack 0
  2332   007592                     _lcd_lireDonnees:
  2333                           	callstack 27
  2334   007592                     
  2335                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  2336   007592  5083               	movf	131,w,c	;volatile
  2337   007594  0B0F               	andlw	15
  2338   007596  0012               	return		;funcret
  2339   007598                     __end_of_lcd_lireDonnees:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___wmul *****************
  2343 ;; Defined at:
  2344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2347 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  product         2    4[BANK0 ] unsigned int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  2    0[BANK0 ] unsigned int 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, prodl, prodh
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2359 ;;      Params:         0       4       0       0       0       0       0
  2360 ;;      Locals:         0       2       0       0       0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0
  2362 ;;      Totals:         0       6       0       0       0       0       0
  2363 ;;Total ram usage:        6 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_afficheMelange
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text20
  2373   007620                     __ptext20:
  2374                           	callstack 0
  2375   007620                     ___wmul:
  2376                           	callstack 28
  2377   007620  0100               	movlb	0	; () banked
  2378   007622  5160               	movf	___wmul@multiplier& (0+255),w,b
  2379   007624  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2380   007626  CFF3 F064          	movff	prodl,___wmul@product
  2381   00762A  CFF4 F065          	movff	prodh,___wmul@product+1
  2382   00762E  5160               	movf	___wmul@multiplier& (0+255),w,b
  2383   007630  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2384   007632  50F3               	movf	243,w,c
  2385   007634  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2386   007636  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2387   007638  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2388   00763A  50F3               	movf	243,w,c
  2389   00763C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2390   00763E                     
  2391                           ; BSR set to: 0
  2392   00763E  C064  F060         	movff	___wmul@product,?___wmul
  2393   007642  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2394   007646                     
  2395                           ; BSR set to: 0
  2396   007646  0012               	return		;funcret
  2397   007648                     __end_of___wmul:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function ___awmod *****************
  2401 ;; Defined at:
  2402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  dividend        2   14[BANK0 ] int 
  2405 ;;  divisor         2   16[BANK0 ] int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  sign            1   19[BANK0 ] unsigned char 
  2408 ;;  counter         1   18[BANK0 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2   14[BANK0 ] int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         0       4       0       0       0       0       0
  2419 ;;      Locals:         0       2       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0
  2421 ;;      Totals:         0       6       0       0       0       0       0
  2422 ;;Total ram usage:        6 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_afficheMelange
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text21
  2432   007B48                     __ptext21:
  2433                           	callstack 0
  2434   007B48                     ___awmod:
  2435                           	callstack 28
  2436   007B48  0E00               	movlw	0
  2437   007B4A  0100               	movlb	0	; () banked
  2438   007B4C  6F73               	movwf	___awmod@sign& (0+255),b
  2439   007B4E                     
  2440                           ; BSR set to: 0
  2441   007B4E  BF6F               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2442   007B50  EFAE  F03D         	goto	u480
  2443   007B54  EFAC  F03D         	goto	u481
  2444   007B58                     u481:
  2445   007B58  EFB4  F03D         	goto	l1638
  2446   007B5C                     u480:
  2447   007B5C                     
  2448                           ; BSR set to: 0
  2449   007B5C  6D6E               	negf	___awmod@dividend& (0+255),b
  2450   007B5E  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2451   007B60  B0D8               	btfsc	status,0,c
  2452   007B62  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2453   007B64                     
  2454                           ; BSR set to: 0
  2455   007B64  0E01               	movlw	1
  2456   007B66  6F73               	movwf	___awmod@sign& (0+255),b
  2457   007B68                     l1638:
  2458                           
  2459                           ; BSR set to: 0
  2460   007B68  BF71               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2461   007B6A  EFBB  F03D         	goto	u490
  2462   007B6E  EFB9  F03D         	goto	u491
  2463   007B72                     u491:
  2464   007B72  EFBF  F03D         	goto	l1642
  2465   007B76                     u490:
  2466   007B76                     
  2467                           ; BSR set to: 0
  2468   007B76  6D70               	negf	___awmod@divisor& (0+255),b
  2469   007B78  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  2470   007B7A  B0D8               	btfsc	status,0,c
  2471   007B7C  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  2472   007B7E                     l1642:
  2473                           
  2474                           ; BSR set to: 0
  2475   007B7E  5170               	movf	___awmod@divisor& (0+255),w,b
  2476   007B80  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2477   007B82  B4D8               	btfsc	status,2,c
  2478   007B84  EFC6  F03D         	goto	u501
  2479   007B88  EFC8  F03D         	goto	u500
  2480   007B8C                     u501:
  2481   007B8C  EFEC  F03D         	goto	l1658
  2482   007B90                     u500:
  2483   007B90                     
  2484                           ; BSR set to: 0
  2485   007B90  0E01               	movlw	1
  2486   007B92  6F72               	movwf	___awmod@counter& (0+255),b
  2487   007B94  EFD0  F03D         	goto	l1648
  2488   007B98                     l1646:
  2489                           
  2490                           ; BSR set to: 0
  2491   007B98  90D8               	bcf	status,0,c
  2492   007B9A  3770               	rlcf	___awmod@divisor& (0+255),f,b
  2493   007B9C  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2494   007B9E  2B72               	incf	___awmod@counter& (0+255),f,b
  2495   007BA0                     l1648:
  2496                           
  2497                           ; BSR set to: 0
  2498   007BA0  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2499   007BA2  EFD5  F03D         	goto	u511
  2500   007BA6  EFD7  F03D         	goto	u510
  2501   007BAA                     u511:
  2502   007BAA  EFCC  F03D         	goto	l1646
  2503   007BAE                     u510:
  2504   007BAE                     l1650:
  2505                           
  2506                           ; BSR set to: 0
  2507   007BAE  5170               	movf	___awmod@divisor& (0+255),w,b
  2508   007BB0  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  2509   007BB2  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2510   007BB4  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2511   007BB6  A0D8               	btfss	status,0,c
  2512   007BB8  EFE0  F03D         	goto	u521
  2513   007BBC  EFE2  F03D         	goto	u520
  2514   007BC0                     u521:
  2515   007BC0  EFE6  F03D         	goto	l1654
  2516   007BC4                     u520:
  2517   007BC4                     
  2518                           ; BSR set to: 0
  2519   007BC4  5170               	movf	___awmod@divisor& (0+255),w,b
  2520   007BC6  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  2521   007BC8  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  2522   007BCA  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2523   007BCC                     l1654:
  2524                           
  2525                           ; BSR set to: 0
  2526   007BCC  90D8               	bcf	status,0,c
  2527   007BCE  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2528   007BD0  3370               	rrcf	___awmod@divisor& (0+255),f,b
  2529   007BD2                     
  2530                           ; BSR set to: 0
  2531   007BD2  2F72               	decfsz	___awmod@counter& (0+255),f,b
  2532   007BD4  EFD7  F03D         	goto	l1650
  2533   007BD8                     l1658:
  2534                           
  2535                           ; BSR set to: 0
  2536   007BD8  5173               	movf	___awmod@sign& (0+255),w,b
  2537   007BDA  B4D8               	btfsc	status,2,c
  2538   007BDC  EFF2  F03D         	goto	u531
  2539   007BE0  EFF4  F03D         	goto	u530
  2540   007BE4                     u531:
  2541   007BE4  EFF8  F03D         	goto	l1662
  2542   007BE8                     u530:
  2543   007BE8                     
  2544                           ; BSR set to: 0
  2545   007BE8  6D6E               	negf	___awmod@dividend& (0+255),b
  2546   007BEA  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  2547   007BEC  B0D8               	btfsc	status,0,c
  2548   007BEE  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  2549   007BF0                     l1662:
  2550                           
  2551                           ; BSR set to: 0
  2552   007BF0  C06E  F06E         	movff	___awmod@dividend,?___awmod
  2553   007BF4  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  2554   007BF8                     
  2555                           ; BSR set to: 0
  2556   007BF8  0012               	return		;funcret
  2557   007BFA                     __end_of___awmod:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _initialisation *****************
  2561 ;; Defined at:
  2562 ;;		line 50 in file "main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2576 ;;      Params:         0       0       0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text22
  2590   0075A8                     __ptext22:
  2591                           	callstack 0
  2592   0075A8                     _initialisation:
  2593                           	callstack 30
  2594   0075A8                     
  2595                           ;main.c: 52: TRISA = 0;
  2596   0075A8  0E00               	movlw	0
  2597   0075AA  6E92               	movwf	146,c	;volatile
  2598                           
  2599                           ;main.c: 53: TRISB = 0;
  2600   0075AC  0E00               	movlw	0
  2601   0075AE  6E93               	movwf	147,c	;volatile
  2602                           
  2603                           ;main.c: 56: ANSEL = 0;
  2604   0075B0  0E00               	movlw	0
  2605   0075B2  6E7E               	movwf	126,c	;volatile
  2606   0075B4  0012               	return		;funcret
  2607   0075B6                     __end_of_initialisation:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _init_serie *****************
  2611 ;; Defined at:
  2612 ;;		line 24 in file "serie.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         0       0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text23
  2640   007602                     __ptext23:
  2641                           	callstack 0
  2642   007602                     _init_serie:
  2643                           	callstack 30
  2644   007602                     
  2645                           ;serie.c: 27: TRISCbits.TRISC7=1;
  2646   007602  8E94               	bsf	148,7,c	;volatile
  2647                           
  2648                           ;serie.c: 28: TRISCbits.TRISC6=1;
  2649   007604  8C94               	bsf	148,6,c	;volatile
  2650   007606                     
  2651                           ;serie.c: 32: SPBRGH=0x00;
  2652   007606  0E00               	movlw	0
  2653   007608  6EB0               	movwf	176,c	;volatile
  2654                           
  2655                           ;serie.c: 33: SPBRG=25;
  2656   00760A  0E19               	movlw	25
  2657   00760C  6EAF               	movwf	175,c	;volatile
  2658   00760E                     
  2659                           ;serie.c: 34: BAUDCONbits.BRG16=1;
  2660   00760E  86B8               	bsf	184,3,c	;volatile
  2661   007610                     
  2662                           ;serie.c: 35: TXSTAbits.BRGH=1;
  2663   007610  84AC               	bsf	172,2,c	;volatile
  2664   007612                     
  2665                           ;serie.c: 38: TXSTAbits.SYNC=0;
  2666   007612  98AC               	bcf	172,4,c	;volatile
  2667   007614                     
  2668                           ;serie.c: 39: TXSTAbits.TXEN=1;
  2669   007614  8AAC               	bsf	172,5,c	;volatile
  2670   007616                     
  2671                           ;serie.c: 40: RCSTAbits.CREN = 1;
  2672   007616  88AB               	bsf	171,4,c	;volatile
  2673   007618                     
  2674                           ;serie.c: 41: RCSTAbits.SPEN=1;
  2675   007618  8EAB               	bsf	171,7,c	;volatile
  2676                           
  2677                           ;serie.c: 42: ANSEL = 0;
  2678   00761A  0E00               	movlw	0
  2679   00761C  6E7E               	movwf	126,c	;volatile
  2680   00761E  0012               	return		;funcret
  2681   007620                     __end_of_init_serie:
  2682                           	callstack 0
  2683   000000                     
  2684                           	psect	param0
  2685   000000                     
  2686                           	psect	idloc
  2687                           
  2688                           ;Config register IDLOC0 @ 0x200000
  2689                           ;	unspecified, using default values
  2690   200000                     	org	2097152
  2691   200000  FF                 	db	255
  2692                           
  2693                           ;Config register IDLOC1 @ 0x200001
  2694                           ;	unspecified, using default values
  2695   200001                     	org	2097153
  2696   200001  FF                 	db	255
  2697                           
  2698                           ;Config register IDLOC2 @ 0x200002
  2699                           ;	unspecified, using default values
  2700   200002                     	org	2097154
  2701   200002  FF                 	db	255
  2702                           
  2703                           ;Config register IDLOC3 @ 0x200003
  2704                           ;	unspecified, using default values
  2705   200003                     	org	2097155
  2706   200003  FF                 	db	255
  2707                           
  2708                           ;Config register IDLOC4 @ 0x200004
  2709                           ;	unspecified, using default values
  2710   200004                     	org	2097156
  2711   200004  FF                 	db	255
  2712                           
  2713                           ;Config register IDLOC5 @ 0x200005
  2714                           ;	unspecified, using default values
  2715   200005                     	org	2097157
  2716   200005  FF                 	db	255
  2717                           
  2718                           ;Config register IDLOC6 @ 0x200006
  2719                           ;	unspecified, using default values
  2720   200006                     	org	2097158
  2721   200006  FF                 	db	255
  2722                           
  2723                           ;Config register IDLOC7 @ 0x200007
  2724                           ;	unspecified, using default values
  2725   200007                     	org	2097159
  2726   200007  FF                 	db	255
  2727                           
  2728                           	psect	config
  2729                           
  2730                           ; Padding undefined space
  2731   300000                     	org	3145728
  2732   300000  FF                 	db	255
  2733                           
  2734                           ;Config register CONFIG1H @ 0x300001
  2735                           ;	Oscillator Selection bits
  2736                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2737                           ;	Fail-Safe Clock Monitor Enable bit
  2738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2739                           ;	Internal/External Oscillator Switchover bit
  2740                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2741   300001                     	org	3145729
  2742   300001  08                 	db	8
  2743                           
  2744                           ;Config register CONFIG2L @ 0x300002
  2745                           ;	Power-up Timer Enable bit
  2746                           ;	PWRTEN = OFF, PWRT disabled
  2747                           ;	Brown-out Reset Enable bits
  2748                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2749                           ;	Brown Out Reset Voltage bits
  2750                           ;	BORV = 18, VBOR set to 1.8 V nominal
  2751   300002                     	org	3145730
  2752   300002  1F                 	db	31
  2753                           
  2754                           ;Config register CONFIG2H @ 0x300003
  2755                           ;	Watchdog Timer Enable bit
  2756                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2757                           ;	Watchdog Timer Postscale Select bits
  2758                           ;	WDTPS = 32768, 1:32768
  2759   300003                     	org	3145731
  2760   300003  1E                 	db	30
  2761                           
  2762                           ; Padding undefined space
  2763   300004                     	org	3145732
  2764   300004  FF                 	db	255
  2765                           
  2766                           ;Config register CONFIG3H @ 0x300005
  2767                           ;	CCP2 MUX bit
  2768                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2769                           ;	PORTB A/D Enable bit
  2770                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2771                           ;	Low-Power Timer1 Oscillator Enable bit
  2772                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2773                           ;	HFINTOSC Fast Start-up
  2774                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  2775                           ;	MCLR Pin Enable bit
  2776                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2777   300005                     	org	3145733
  2778   300005  8B                 	db	139
  2779                           
  2780                           ;Config register CONFIG4L @ 0x300006
  2781                           ;	Stack Full/Underflow Reset Enable bit
  2782                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2783                           ;	Single-Supply ICSP Enable bit
  2784                           ;	LVP = OFF, Single-Supply ICSP disabled
  2785                           ;	Extended Instruction Set Enable bit
  2786                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2787                           ;	Background Debugger Enable bit
  2788                           ;	DEBUG = 0x1, unprogrammed default
  2789   300006                     	org	3145734
  2790   300006  81                 	db	129
  2791                           
  2792                           ; Padding undefined space
  2793   300007                     	org	3145735
  2794   300007  FF                 	db	255
  2795                           
  2796                           ;Config register CONFIG5L @ 0x300008
  2797                           ;	Code Protection Block 0
  2798                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2799                           ;	Code Protection Block 1
  2800                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2801                           ;	Code Protection Block 2
  2802                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2803                           ;	Code Protection Block 3
  2804                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2805   300008                     	org	3145736
  2806   300008  0F                 	db	15
  2807                           
  2808                           ;Config register CONFIG5H @ 0x300009
  2809                           ;	Boot Block Code Protection bit
  2810                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2811                           ;	Data EEPROM Code Protection bit
  2812                           ;	CPD = OFF, Data EEPROM not code-protected
  2813   300009                     	org	3145737
  2814   300009  C0                 	db	192
  2815                           
  2816                           ;Config register CONFIG6L @ 0x30000A
  2817                           ;	Write Protection Block 0
  2818                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2819                           ;	Write Protection Block 1
  2820                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2821                           ;	Write Protection Block 2
  2822                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2823                           ;	Write Protection Block 3
  2824                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2825   30000A                     	org	3145738
  2826   30000A  0F                 	db	15
  2827                           
  2828                           ;Config register CONFIG6H @ 0x30000B
  2829                           ;	Configuration Register Write Protection bit
  2830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2831                           ;	Boot Block Write Protection bit
  2832                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2833                           ;	Data EEPROM Write Protection bit
  2834                           ;	WRTD = OFF, Data EEPROM not write-protected
  2835   30000B                     	org	3145739
  2836   30000B  E0                 	db	224
  2837                           
  2838                           ;Config register CONFIG7L @ 0x30000C
  2839                           ;	Table Read Protection Block 0
  2840                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2841                           ;	Table Read Protection Block 1
  2842                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2843                           ;	Table Read Protection Block 2
  2844                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2845                           ;	Table Read Protection Block 3
  2846                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2847   30000C                     	org	3145740
  2848   30000C  0F                 	db	15
  2849                           
  2850                           ;Config register CONFIG7H @ 0x30000D
  2851                           ;	Boot Block Table Read Protection bit
  2852                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2853   30000D                     	org	3145741
  2854   30000D  40                 	db	64
  2855                           tosu	equ	0xFFF
  2856                           tosh	equ	0xFFE
  2857                           tosl	equ	0xFFD
  2858                           stkptr	equ	0xFFC
  2859                           pclatu	equ	0xFFB
  2860                           pclath	equ	0xFFA
  2861                           pcl	equ	0xFF9
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           indf0	equ	0xFEF
  2869                           postinc0	equ	0xFEE
  2870                           postdec0	equ	0xFED
  2871                           preinc0	equ	0xFEC
  2872                           plusw0	equ	0xFEB
  2873                           fsr0h	equ	0xFEA
  2874                           fsr0l	equ	0xFE9
  2875                           wreg	equ	0xFE8
  2876                           indf1	equ	0xFE7
  2877                           postinc1	equ	0xFE6
  2878                           postdec1	equ	0xFE5
  2879                           preinc1	equ	0xFE4
  2880                           plusw1	equ	0xFE3
  2881                           fsr1h	equ	0xFE2
  2882                           fsr1l	equ	0xFE1
  2883                           bsr	equ	0xFE0
  2884                           indf2	equ	0xFDF
  2885                           postinc2	equ	0xFDE
  2886                           postdec2	equ	0xFDD
  2887                           preinc2	equ	0xFDC
  2888                           plusw2	equ	0xFDB
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        113
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160    120     124
    BANK1           256     45     154
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK1[45]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK1[45]), 

    afficheMelange@mot	PTR unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK1[45]), 

    joueCharivari@mot	PTR unsigned char  size(2) Largest target is 45
		 -> main@messages(BANK1[45]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_joueCharivari
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _joueCharivari->_afficheMelange
    _afficheMelange->___awmod
    _rand->___lmul
    _lcd_gotoXY->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees
    ___awmod->_rand

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    3628
                                              0 BANK1     45    45      0
                         _init_serie
                     _initialisation
                      _joueCharivari
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _joueCharivari                                        3     1      2    2865
                                            117 BANK0      3     1      2
                     _afficheMelange
                              _getch
                              _kbhit
 ---------------------------------------------------------------------------------
 (2) _kbhit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getch                                                1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _afficheMelange                                      97    95      2    2698
                                             20 BANK0     97    95      2
                            ___awmod
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
                               _rand
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoXY                                           2     1      1     570
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (4) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_serie
   _initialisation
   _joueCharivari
     _afficheMelange
       ___awmod
         _rand (ARG)
           ___lmul
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
       _rand
       _strlen
     _getch
     _kbhit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
       _lcd_wrCom
       _lcd_wrData
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     2D      9A       6       60.2%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     78      7C       4       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRll         1E      0       0      27        0.0%
BITBIGSFR_1hh       1B      0       0      19        0.0%
BITBIGSFRlhh         E      0       0      24        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_1llh       C      0       0      21        0.0%
BITBIGSFR_1hl        7      0       0      20        0.0%
BITBIGSFRh           6      0       0      23        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhlh        2      0       0      25        0.0%
BITBIGSFRlhll        1      0       0      26        0.0%
BITBIGSFR_1lll       1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      28        0.0%
DATA                 0      0     116      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 08 13:10:43 2023

                         l35 769C                           l38 75B4                           l65 77DC  
                         l77 7DBE          ___wmul@multiplicand 0062                          l100 761E  
                        l111 75C4                          l112 75CC                          l220 759E  
                        l124 75E4                          l109 75B6                          l150 7746  
                        l223 7646                          l143 7596                          l151 774E  
                        l160 76D2                          l217 7B46                          l146 7600  
                        l234 79B8                          l235 79C8                          l163 78F0  
                        l172 75A6                          l149 7712                          l157 795C  
                        l166 766E                          l187 7AA8                          l198 7830  
                        l467 7BF8                          l890 7886                          l896 770C  
                        u500 7B90                          u420 7746                          u501 7B8C  
                        u421 7742                          u510 7BAE                          u430 7936  
                        u511 7BAA                          u431 7932                          u520 7BC4  
                        u440 794A                          u600 7DAC                          u521 7BC0  
                        u441 7946                          u601 7DA8                          u530 7BE8  
                        u450 797E                          u610 7DBE                          u531 7BE4  
                        u451 797A                          u611 7DBA                          u460 79B8  
                        u540 75DC                          u620 7AC8                          u461 79B4  
                        u541 75D8                          u621 7AC4                          u470 76FE  
                        u550 75C4                          u630 7AE4                          u471 76FA  
                        u551 75C0                          u631 7AE0                          u480 7B5C  
                        u560 7C50                          u640 7B2C                          u481 7B58  
                        u561 7C4C                          u641 7B28                          u490 7B76  
                        u570 7C7C                          u650 7B42                          u491 7B72  
                        u571 7C78                          u651 7B3E                          u580 7CE4  
                        u660 77C8                          u581 7CE0                          u661 77C4  
                        u590 7D08                          u670 77DC                          u591 7D04  
                        u671 77D8                          u807 7894                          u817 78B0  
                        u827 78C2                          u691 767A                          u837 78D4  
                        u847 78E6                          u857 791E                          u867 794C  
               ___awmod@sign 0073                          prod 0FF3                  lcd_gotoXY@x 0064  
                        wreg 0FE8                  lcd_gotoXY@y 0063                         l1502 7598  
                       l1510 78FE                         l1520 7910                         l1512 7900  
                       l1504 78F6                         l1600 7A3C                         l1530 794A  
                       l1522 7918                         l1514 7902                         l1506 78FA  
                       l1602 7A40                         l1532 7954                         l1524 791C  
                       l1516 790C                         l1508 78FE                         l1540 76A4  
                       l1604 7A50                         l1612 7A80                         l1700 7C80  
                       l1630 7B48                         l1534 7958                         l1526 7924  
                       l1518 7910                         l1550 76B0                         l1542 76A8  
                       l1606 7A60                         l1614 7832                         l1702 7CC0  
                       l1710 7D08                         l1622 75A0                         l1800 7610  
                       l1640 7B76                         l1632 7B4E                         l1624 7620  
                       l1480 770E                         l1536 7958                         l1528 7936  
                       l1560 76CA                         l1552 76BA                         l1544 76AC  
                       l1608 7A70                         l1616 7868                         l1720 7D6E  
                       l1712 7D16                         l1704 7CC6                         l1802 7612  
                       l1650 7BAE                         l1642 7B7E                         l1634 7B5C  
                       l1626 763E                         l1474 7592                         l1490 772A  
                       l1482 7716                         l1562 76CA                         l1554 76BE  
                       l1546 76AC                         l1570 7970                         l1618 787A  
                       l1722 7D76                         l1714 7D30                         l1706 7CE4  
                       l1810 7796                         l1730 788C                         l1804 7614  
                       l1660 7BE8                         l1652 7BC4                         l1644 7B90  
                       l1636 7B64                         l1492 7734                         l1484 7726  
                       l1564 76CE                         l1556 76BE                         l1548 76AE  
                       l1572 797E                         l1580 76E0                         l1716 7D52  
                       l1724 7D7C                         l1708 7CEA                         l1820 77C8  
                       l1812 779C                         l1740 78AE                         l1732 78A0  
                       l1806 7616                         l1662 7BF0                         l1654 7BCC  
                       l1646 7B98                         l1638 7B68                         l1494 7736  
                       l1486 7728                         l1478 75EA                         l1558 76C6  
                       l1590 77F2                         l1574 798E                         l1582 76E6  
                       l1726 7DAC                         l1718 7D62                         l1670 75E2  
                       l1814 77A8                         l1750 78CE                         l1742 78B6  
                       l1734 78A2                         l1830 7670                         l1808 7618  
                       l1656 7BD2                         l1648 7BA0                         l1496 7736  
                       l1488 7728                         l1592 77FC                         l1576 7998  
                       l1568 795E                         l1584 76FE                         l1680 7BFA  
                       l1816 77AC                         l1760 78EC                         l1752 78D2  
                       l1744 78BC                         l1736 78A4                         l1728 7888  
                       l1832 7682                         l1658 7BD8                         l1498 7748  
                       l1594 7806                         l1578 76D4                         l1690 7C32  
                       l1682 7C0E                         l1674 75B6                         l1666 75CE  
                       l1818 77B4                         l1770 7ACC                         l1762 7AAA  
                       l1754 78DA                         l1746 78C0                         l1738 78AA  
                       l1834 7686                         l1588 77E2                         l1684 7C14  
                       l1676 75C8                         l1668 75DC                         l1780 7B1A  
                       l1772 7AD2                         l1764 7AB0                         l1756 78E0  
                       l1748 78C8                         l1836 768A                         l1598 7810  
                       l1694 7C54                         l1686 7C1E                         l1782 7B2C  
                       l1766 7AB6                         l1758 78E4                         l1790 7648  
                       l1838 768E                         l1696 7C5E                         l1688 7C28  
                       l1784 7B30                         l1776 7AE8                         l1792 766A  
                       l1794 7602                         l1778 7B16                         l1786 7B42  
                       l1796 7606                         l1788 75A8                         l1798 760E  
                       _RCIF 7CF5             ??_initialisation 0060                         _main 7670  
                       _rand 7832                         fsr2h 0FDA                         indf2 0FDF  
                       fsr1l 0FE1                         fsr2l 0FD9                         prodh 0FF4  
                       prodl 0FF3                         start 0000             ??_afficheMelange 0076  
               ___param_bank 0000              ??_lcd_ecritChar 0063                        ?_main 0060  
                      ?_rand 006C              __end_of___awmod 7BFA                        _ANSEL 0F7E  
        afficheMelange@i_114 00CF                        _RCREG 0FAE                        _SPBRG 0FAF  
                      _PORTD 0F83                        _TRISA 0F92                        _TRISB 0F93  
                      _TRISD 0F95                        _TXREG 0FAD          afficheMelange@lgMot 00CD  
        ___lmul@multiplicand 0064          afficheMelange@ligne 00C9                 main@messages 016D  
            ??_lcd_initCGRam 0063                        _getch 75B6                        _kbhit 75CE  
                      _randx 00D8                        tablat 0FF5                        plusw1 0FE3  
                      plusw2 0FDB                        status 0FD8              __initialization 7750  
               __end_of_main 76A0                 __end_of_rand 7888                       ??_main 00D8  
                     ??_rand 006E                __activetblptr 0003                       ?_getch 0060  
                     ?_kbhit 0060                       _SPBRGH 0FB0         afficheMelange@lettre 00CE  
             lcd_initCGRam@i 0065               lcd_initCGRam@j 0066             __end_of_lcd_busy 7750  
           __end_of_lcd_init 7670                       ___lmul 795E                       ___wmul 7620  
                  ??___awmod 0072              ___awmod@divisor 0070                       isa$std 0001  
            ___awmod@counter 0072                       getch@c 0060                       _strlen 76D4  
                     tblptrh 0FF7                       tblptrl 0FF6                       tblptru 0FF8  
          _lcd_resetSequence 7888                   __accesstop 0060      __end_of__initialization 7790  
        _lcd_strobeEnableBit 7598           ?_lcd_resetSequence 0060                ___rparam_used 0000  
               __pidataBANK0 758E                 __pidataBANK1 79CB          ??_lcd_resetSequence 0062  
          afficheMelange@mot 0074            afficheMelange@oqp 0079                __end_of_getch 75CE  
              __end_of_kbhit 75E6         ?_lcd_strobeEnableBit 0060                      ??_getch 0060  
                    ??_kbhit 0060    __end_of_lcd_resetSequence 78F2            _lcd_ecrireDonnees 75E6  
         ?_lcd_ecrireDonnees 0060          ??_lcd_ecrireDonnees 0060                      ?___lmul 0060  
                    ?___wmul 0060               ___lmul@product 0068        ??_lcd_strobeEnableBit 0060  
                    ?_strlen 0060                _joueCharivari 7796                   _lcd_gotoXY 7A38  
                 _lcd_wrData 76A0    __end_of_lcd_ecrireDonnees 7602                    ?_lcd_busy 0060  
                  ?_lcd_init 0060      lcd_ecrireDonnees@donnee 0061        afficheMelange@colonne 00CB  
                    __Hparam 0000                      __Lparam 0000            __end_of_lcd_wrCom 795E  
                    ___awmod 7B48                      __pcinit 7750                   _init_serie 7602  
                    __ramtop 0600                      __ptext0 7670                      __ptext1 7648  
                    __ptext2 7888                      __ptext3 7AAA                      __ptext4 75A0  
                    __ptext5 7796                      __ptext6 75CE                      __ptext7 75B6  
                    __ptext8 7BFA                      __ptext9 76D4        __end_of_lcd_ecritChar 7832  
             ?_joueCharivari 00D5              lcd_busy@adresse 0061             ___awmod@dividend 006E  
           lcd_ecritChar@car 0063                   ??_lcd_busy 0060                   ??_lcd_init 0067  
       end_of_initialization 7790        __end_of_lcd_initCGRam 7B48            ??_lcd_lireDonnees 0060  
                  _RCSTAbits 0FAB                      postdec1 0FE5                      postinc0 0FEE  
          ??_lcd_curseurHome 0063          lcd_ecritChar@posRam 0064                      strlen@s 0060  
                  _PORTAbits 0F80                  ?_lcd_gotoXY 0063                    _TRISCbits 0F94  
                ?_lcd_wrData 0060                    _TXSTAbits 0FAC               __end_of___lmul 79CA  
             __end_of___wmul 7648                  _BAUDCONbits 0FB8              ??_joueCharivari 00D7  
                ?_init_serie 0060               __end_of_strlen 770E          start_initialization 7750  
                   ??___lmul 0068                     ??___wmul 0064                  __pdataBANK0 00D8  
                __pdataBANK1 0100                     ??_strlen 0062                __pcstackBANK0 0060  
              __pcstackBANK1 016D  __end_of_lcd_strobeEnableBit 75A0               _initialisation 75A8  
                   ?___awmod 006E                    _lcd_wrCom 78F2               _afficheMelange 7BFA  
            _lcd_lireDonnees 7592          lcd_wrData@caractere 0062              _lcd_curseurHome 75A0  
             ___wmul@product 0064       __end_of_initialisation 75B6                    main@F2866 0140  
     __end_of_afficheMelange 7DC0                   ?_lcd_wrCom 0060            ___wmul@multiplier 0060  
               ??_lcd_gotoXY 0064                 ??_lcd_wrData 0062            lcd_wrCom@commande 0062  
          ___lmul@multiplier 0060                    copy_data0 7764                    copy_data1 7784  
                   __Hparam0 0000                     __Lparam0 0000              ?_initialisation 0060  
         __end_of_lcd_gotoXY 7AAA           __end_of_lcd_wrData 76D4              ?_afficheMelange 0074  
               ??_init_serie 0060              afficheMelange@i 00D1              afficheMelange@j 00D3  
    __end_of_lcd_lireDonnees 7598                     _matCGRAM 0100      __end_of_lcd_curseurHome 75A8  
                   __ptext10 7832                     __ptext11 795E                     __ptext20 7620  
                   __ptext12 7A38                     __ptext21 7B48                     __ptext13 77DE  
                   __ptext22 75A8                     __ptext14 76A0                     __ptext23 7602  
                   __ptext15 78F2                     __ptext16 7598                     __ptext17 75E6  
                   __ptext18 770E                     __ptext19 7592                     _lcd_busy 770E  
                   _lcd_init 7648           __end_of_init_serie 7620                     isa$xinst 0000  
                ??_lcd_wrCom 0062        __end_of_joueCharivari 77DE                _lcd_ecritChar 77DE  
           joueCharivari@mot 00D5                _lcd_initCGRam 7AAA               ?_lcd_ecritChar 0060  
           ?_lcd_lireDonnees 0060                     strlen@cp 0062             ?_lcd_curseurHome 0060  
             joueCharivari@c 00D7               ?_lcd_initCGRam 0060  
