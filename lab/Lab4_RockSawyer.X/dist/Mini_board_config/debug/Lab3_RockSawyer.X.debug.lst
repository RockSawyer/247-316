

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 08 13:48:58 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataBANK0
    54   007C1A                     __pidataBANK0:
    55                           	callstack 0
    56                           
    57                           ;initializer for setDel@F2589
    58   007C1A  0000               	dw	0
    59   007C1C  00FC               	dw	252
    60   007C1E  00FA               	dw	250
    61   007C20  00F6               	dw	246
    62   007C22  00EE               	dw	238
    63   007C24  00DE               	dw	222
    64                           
    65                           ;initializer for setDel@F2587
    66   007C26  0000               	dw	0
    67   007C28  0002               	dw	2
    68   007C2A  0004               	dw	4
    69   007C2C  0008               	dw	8
    70   007C2E  0010               	dw	16
    71   007C30  0020               	dw	32
    72   000000                     _RCREG	set	4014
    73   000000                     _TXREG	set	4013
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ANSEL	set	3966
    76   000000                     _ANSELH	set	3967
    77   000000                     _TRISB	set	3987
    78   000000                     _RCSTAbits	set	4011
    79   000000                     _TXSTAbits	set	4012
    80   000000                     _SPBRG	set	4015
    81   000000                     _SPBRGH	set	4016
    82   000000                     _RCIF	set	31989
    83   000000                     _TRISC	set	3988
    84   000000                     _PORTB	set	3969
    85   000000                     _PORTC	set	3970
    86   000000                     _BAUDCONbits	set	4024
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   007C32                     __pcinit:
    92                           	callstack 0
    93   007C32                     start_initialization:
    94                           	callstack 0
    95   007C32                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Initialize objects allocated to BANK0 (24 bytes)
    99                           ; load TBLPTR registers with __pidataBANK0
   100   007C32  0E1A               	movlw	low __pidataBANK0
   101   007C34  6EF6               	movwf	tblptrl,c
   102   007C36  0E7C               	movlw	high __pidataBANK0
   103   007C38  6EF7               	movwf	tblptrh,c
   104   007C3A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   105   007C3C  6EF8               	movwf	tblptru,c
   106   007C3E  EE00  F081         	lfsr	0,__pdataBANK0
   107   007C42  EE10 F018          	lfsr	1,24
   108   007C46                     copy_data0:
   109   007C46  0009               	tblrd		*+
   110   007C48  CFF5 FFEE          	movff	tablat,postinc0
   111   007C4C  50E5               	movf	postdec1,w,c
   112   007C4E  50E1               	movf	fsr1l,w,c
   113   007C50  E1FA               	bnz	copy_data0
   114   007C52                     end_of_initialization:
   115                           	callstack 0
   116   007C52                     __end_of__initialization:
   117                           	callstack 0
   118   007C52  0100               	movlb	0
   119   007C54  EFF9  F03D         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122   000081                     __pdataBANK0:
   123                           	callstack 0
   124   000081                     setDel@F2589:
   125                           	callstack 0
   126   000081                     	ds	12
   127   00008D                     setDel@F2587:
   128                           	callstack 0
   129   00008D                     	ds	12
   130                           
   131                           	psect	cstackBANK0
   132   000060                     __pcstackBANK0:
   133                           	callstack 0
   134   000060                     setDel@ligne:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138   000060                     	ds	2
   139   000062                     setDel@colonne:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143   000062                     	ds	2
   144   000064                     setDel@tableauLi:
   145                           	callstack 0
   146                           
   147                           ; 12 bytes @ 0x4
   148   000064                     	ds	12
   149   000070                     setDel@tableauCo:
   150                           	callstack 0
   151                           
   152                           ; 12 bytes @ 0x10
   153   000070                     	ds	12
   154   00007C                     ??_testMatrice:
   155                           
   156                           ; 1 bytes @ 0x1C
   157   00007C                     	ds	1
   158   00007D                     testMatrice@i:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x1D
   162   00007D                     	ds	2
   163   00007F                     testMatrice@j:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x1F
   167   00007F                     	ds	2
   168   000081                     
   169                           ; 1 bytes @ 0x21
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 43 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called: 2
   195 ;; This function calls:
   196 ;;		_initialisation
   197 ;;		_testMatrice
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text0
   204   007BF2                     __ptext0:
   205                           	callstack 0
   206   007BF2                     _main:
   207                           	callstack 29
   208   007BF2                     
   209                           ;main.c: 45: initialisation();
   210   007BF2  EC02  F03E         	call	_initialisation	;wreg free
   211   007BF6                     
   212                           ;main.c: 46: testMatrice();
   213   007BF6  EC57  F03E         	call	_testMatrice	;wreg free
   214   007BFA                     
   215                           ;main.c: 59: __nop();
   216   007BFA  F000               	nop	
   217   007BFC                     l23:
   218   007BFC  EFFE  F03D         	goto	l23
   219   007C00  EF00  F000         	goto	start
   220   007C04                     __end_of_main:
   221                           	callstack 0
   222                           
   223 ;; *************** function _testMatrice *****************
   224 ;; Defined at:
   225 ;;		line 152 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  j               2   31[BANK0 ] int 
   230 ;;  i               2   29[BANK0 ] int 
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   240 ;;      Params:         0       0       0       0       0       0       0
   241 ;;      Locals:         0       4       0       0       0       0       0
   242 ;;      Temps:          0       1       0       0       0       0       0
   243 ;;      Totals:         0       5       0       0       0       0       0
   244 ;;Total ram usage:        5 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		_setDel
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text1
   255   007CAE                     __ptext1:
   256                           	callstack 0
   257   007CAE                     _testMatrice:
   258                           	callstack 29
   259   007CAE                     
   260                           ;main.c: 154: for (int i = 1; i < 6; i++)
   261   007CAE  0E00               	movlw	0
   262   007CB0  0100               	movlb	0	; force () banked
   263   007CB2  6F7E               	movwf	(testMatrice@i+1)& (0+255),b
   264   007CB4  0E01               	movlw	1
   265   007CB6  6F7D               	movwf	testMatrice@i& (0+255),b
   266   007CB8                     
   267                           ; BSR set to: 0
   268   007CB8  0100               	movlb	0	; force () banked
   269   007CBA  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   270   007CBC  EF69  F03E         	goto	u161
   271   007CC0  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   272   007CC2  E109               	bnz	u160
   273   007CC4  0E06               	movlw	6
   274   007CC6  5D7D               	subwf	testMatrice@i& (0+255),w,b
   275   007CC8  A0D8               	btfss	status,0,c
   276   007CCA  EF69  F03E         	goto	u161
   277   007CCE  EF6B  F03E         	goto	u160
   278   007CD2                     u161:
   279   007CD2  EF6D  F03E         	goto	l977
   280   007CD6                     u160:
   281   007CD6  EFDF  F03E         	goto	l44
   282   007CDA                     l977:
   283                           
   284                           ; BSR set to: 0
   285                           ;main.c: 155: {;main.c: 156: _delay((unsigned long)((300)*(1000000/4000.0)));
   286   007CDA  0E62               	movlw	98
   287   007CDC  0100               	movlb	0	; force () banked
   288   007CDE  6F7C               	movwf	??_testMatrice& (0+255),b
   289   007CE0  0E65               	movlw	101
   290   007CE2                     u227:
   291   007CE2  2EE8               	decfsz	wreg,f,c
   292   007CE4  D7FE               	bra	u227
   293   007CE6  2F7C               	decfsz	??_testMatrice& (0+255),f,b
   294   007CE8  D7FC               	bra	u227
   295   007CEA  F000 F000          	nop2	
   296   007CEE                     
   297                           ;main.c: 157: for (int j = 1; j < 6; j++)
   298   007CEE  0E00               	movlw	0
   299   007CF0  0100               	movlb	0	; force () banked
   300   007CF2  6F80               	movwf	(testMatrice@j+1)& (0+255),b
   301   007CF4  0E01               	movlw	1
   302   007CF6  6F7F               	movwf	testMatrice@j& (0+255),b
   303   007CF8                     
   304                           ; BSR set to: 0
   305   007CF8  0100               	movlb	0	; force () banked
   306   007CFA  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   307   007CFC  EF89  F03E         	goto	u171
   308   007D00  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   309   007D02  E109               	bnz	u170
   310   007D04  0E06               	movlw	6
   311   007D06  5D7F               	subwf	testMatrice@j& (0+255),w,b
   312   007D08  A0D8               	btfss	status,0,c
   313   007D0A  EF89  F03E         	goto	u171
   314   007D0E  EF8B  F03E         	goto	u170
   315   007D12                     u171:
   316   007D12  EF8D  F03E         	goto	l985
   317   007D16                     u170:
   318   007D16  EFCD  F03E         	goto	l999
   319   007D1A                     l985:
   320                           
   321                           ; BSR set to: 0
   322                           ;main.c: 158: {;main.c: 159: setDel(i,j);
   323   007D1A  C07D  F060         	movff	testMatrice@i,setDel@ligne
   324   007D1E  C07E  F061         	movff	testMatrice@i+1,setDel@ligne+1
   325   007D22  C07F  F062         	movff	testMatrice@j,setDel@colonne
   326   007D26  C080  F063         	movff	testMatrice@j+1,setDel@colonne+1
   327   007D2A  EC2C  F03E         	call	_setDel	;wreg free
   328   007D2E                     
   329                           ;main.c: 160: _delay((unsigned long)((300)*(1000000/4000.0)));
   330   007D2E  0E62               	movlw	98
   331   007D30  0100               	movlb	0	; force () banked
   332   007D32  6F7C               	movwf	??_testMatrice& (0+255),b
   333   007D34  0E65               	movlw	101
   334   007D36                     u237:
   335   007D36  2EE8               	decfsz	wreg,f,c
   336   007D38  D7FE               	bra	u237
   337   007D3A  2F7C               	decfsz	??_testMatrice& (0+255),f,b
   338   007D3C  D7FC               	bra	u237
   339   007D3E  F000 F000          	nop2	
   340   007D42                     
   341                           ;main.c: 161: if(i == 6 & j == 6)
   342   007D42  0E06               	movlw	6
   343   007D44  0100               	movlb	0	; force () banked
   344   007D46  197D               	xorwf	testMatrice@i& (0+255),w,b
   345   007D48  117E               	iorwf	(testMatrice@i+1)& (0+255),w,b
   346   007D4A  A4D8               	btfss	status,2,c
   347   007D4C  EFAA  F03E         	goto	u181
   348   007D50  EFAC  F03E         	goto	u180
   349   007D54                     u181:
   350   007D54  EFBB  F03E         	goto	l995
   351   007D58                     u180:
   352   007D58                     
   353                           ; BSR set to: 0
   354   007D58  0E06               	movlw	6
   355   007D5A  0100               	movlb	0	; force () banked
   356   007D5C  197F               	xorwf	testMatrice@j& (0+255),w,b
   357   007D5E  1180               	iorwf	(testMatrice@j+1)& (0+255),w,b
   358   007D60  A4D8               	btfss	status,2,c
   359   007D62  EFB5  F03E         	goto	u191
   360   007D66  EFB7  F03E         	goto	u190
   361   007D6A                     u191:
   362   007D6A  EFBB  F03E         	goto	l995
   363   007D6E                     u190:
   364   007D6E                     
   365                           ; BSR set to: 0
   366                           ;main.c: 162: {;main.c: 163: PORTB = 0b00000000;
   367   007D6E  0E00               	movlw	0
   368   007D70  6E81               	movwf	129,c	;volatile
   369                           
   370                           ;main.c: 164: PORTC = 0b11111110;
   371   007D72  0EFE               	movlw	254
   372   007D74  6E82               	movwf	130,c	;volatile
   373   007D76                     l995:
   374                           
   375                           ; BSR set to: 0
   376   007D76  0100               	movlb	0	; force () banked
   377   007D78  4B7F               	infsnz	testMatrice@j& (0+255),f,b
   378   007D7A  2B80               	incf	(testMatrice@j+1)& (0+255),f,b
   379   007D7C                     
   380                           ; BSR set to: 0
   381   007D7C  0100               	movlb	0	; force () banked
   382   007D7E  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   383   007D80  EFCB  F03E         	goto	u201
   384   007D84  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   385   007D86  E109               	bnz	u200
   386   007D88  0E06               	movlw	6
   387   007D8A  5D7F               	subwf	testMatrice@j& (0+255),w,b
   388   007D8C  A0D8               	btfss	status,0,c
   389   007D8E  EFCB  F03E         	goto	u201
   390   007D92  EFCD  F03E         	goto	u200
   391   007D96                     u201:
   392   007D96  EF8D  F03E         	goto	l985
   393   007D9A                     u200:
   394   007D9A                     l999:
   395                           
   396                           ; BSR set to: 0
   397   007D9A  0100               	movlb	0	; force () banked
   398   007D9C  4B7D               	infsnz	testMatrice@i& (0+255),f,b
   399   007D9E  2B7E               	incf	(testMatrice@i+1)& (0+255),f,b
   400   007DA0                     
   401                           ; BSR set to: 0
   402   007DA0  0100               	movlb	0	; force () banked
   403   007DA2  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   404   007DA4  EFDD  F03E         	goto	u211
   405   007DA8  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   406   007DAA  E109               	bnz	u210
   407   007DAC  0E06               	movlw	6
   408   007DAE  5D7D               	subwf	testMatrice@i& (0+255),w,b
   409   007DB0  A0D8               	btfss	status,0,c
   410   007DB2  EFDD  F03E         	goto	u211
   411   007DB6  EFDF  F03E         	goto	u210
   412   007DBA                     u211:
   413   007DBA  EF6D  F03E         	goto	l977
   414   007DBE                     u210:
   415   007DBE                     l44:
   416                           
   417                           ; BSR set to: 0
   418   007DBE  0012               	return		;funcret
   419   007DC0                     __end_of_testMatrice:
   420                           	callstack 0
   421                           
   422 ;; *************** function _setDel *****************
   423 ;; Defined at:
   424 ;;		line 131 in file "main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;  ligne           2    0[BANK0 ] int 
   427 ;;  colonne         2    2[BANK0 ] int 
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  tableauCo      12   16[BANK0 ] int [6]
   430 ;;  tableauLi      12    4[BANK0 ] int [6]
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   440 ;;      Params:         0       4       0       0       0       0       0
   441 ;;      Locals:         0      24       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0
   443 ;;      Totals:         0      28       0       0       0       0       0
   444 ;;Total ram usage:       28 bytes
   445 ;; Hardware stack levels used: 1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_testMatrice
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text2
   454   007C58                     __ptext2:
   455                           	callstack 0
   456   007C58                     _setDel:
   457                           	callstack 29
   458   007C58                     
   459                           ;main.c: 135: int tableauLi[6] = {0, 0b10, 0b100, 0b1000, 0b10000, 0b100000};
   460   007C58  EE20  F08D         	lfsr	2,setDel@F2587
   461   007C5C  EE10  F064         	lfsr	1,setDel@tableauLi
   462   007C60  0E0B               	movlw	11
   463   007C62                     u141:
   464   007C62  CFDB FFE3          	movff	plusw2,plusw1
   465   007C66  06E8               	decf	wreg,f,c
   466   007C68  E2FC               	bc	u141
   467                           
   468                           ;main.c: 136: int tableauCo[6] = {0,0b11111100, 0b11111010, 0b11110110, 0b11101110, 0b11
      +                          011110};
   469   007C6A  EE20  F081         	lfsr	2,setDel@F2589
   470   007C6E  EE10  F070         	lfsr	1,setDel@tableauCo
   471   007C72  0E0B               	movlw	11
   472   007C74                     u151:
   473   007C74  CFDB FFE3          	movff	plusw2,plusw1
   474   007C78  06E8               	decf	wreg,f,c
   475   007C7A  E2FC               	bc	u151
   476   007C7C                     
   477                           ;main.c: 140: PORTB = tableauLi[ligne];
   478   007C7C  90D8               	bcf	status,0,c
   479   007C7E  0100               	movlb	0	; force () banked
   480   007C80  3560               	rlcf	setDel@ligne& (0+255),w,b
   481   007C82  6ED9               	movwf	fsr2l,c
   482   007C84  3561               	rlcf	(setDel@ligne+1)& (0+255),w,b
   483   007C86  6EDA               	movwf	fsr2h,c
   484   007C88  0E64               	movlw	low setDel@tableauLi
   485   007C8A  26D9               	addwf	fsr2l,f,c
   486   007C8C  0E00               	movlw	high setDel@tableauLi
   487   007C8E  22DA               	addwfc	fsr2h,f,c
   488   007C90  50DF               	movf	indf2,w,c
   489   007C92  6E81               	movwf	129,c	;volatile
   490   007C94                     
   491                           ; BSR set to: 0
   492                           ;main.c: 141: PORTC = tableauCo[colonne];
   493   007C94  90D8               	bcf	status,0,c
   494   007C96  0100               	movlb	0	; force () banked
   495   007C98  3562               	rlcf	setDel@colonne& (0+255),w,b
   496   007C9A  6ED9               	movwf	fsr2l,c
   497   007C9C  3563               	rlcf	(setDel@colonne+1)& (0+255),w,b
   498   007C9E  6EDA               	movwf	fsr2h,c
   499   007CA0  0E70               	movlw	low setDel@tableauCo
   500   007CA2  26D9               	addwf	fsr2l,f,c
   501   007CA4  0E00               	movlw	high setDel@tableauCo
   502   007CA6  22DA               	addwfc	fsr2h,f,c
   503   007CA8  50DF               	movf	indf2,w,c
   504   007CAA  6E82               	movwf	130,c	;volatile
   505   007CAC                     
   506                           ; BSR set to: 0
   507   007CAC  0012               	return		;funcret
   508   007CAE                     __end_of_setDel:
   509                           	callstack 0
   510                           
   511 ;; *************** function _initialisation *****************
   512 ;; Defined at:
   513 ;;		line 96 in file "main.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         0       0       0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text3
   541   007C04                     __ptext3:
   542                           	callstack 0
   543   007C04                     _initialisation:
   544                           	callstack 30
   545   007C04                     
   546                           ;main.c: 98: TRISB = 0;
   547   007C04  0E00               	movlw	0
   548   007C06  6E93               	movwf	147,c	;volatile
   549                           
   550                           ;main.c: 99: TRISC = 0;
   551   007C08  0E00               	movlw	0
   552   007C0A  6E94               	movwf	148,c	;volatile
   553                           
   554                           ;main.c: 102: ANSELH = 0;
   555   007C0C  0E00               	movlw	0
   556   007C0E  6E7F               	movwf	127,c	;volatile
   557                           
   558                           ;main.c: 105: PORTB = 0;
   559   007C10  0E00               	movlw	0
   560   007C12  6E81               	movwf	129,c	;volatile
   561                           
   562                           ;main.c: 106: PORTC = 1;
   563   007C14  0E01               	movlw	1
   564   007C16  6E82               	movwf	130,c	;volatile
   565   007C18  0012               	return		;funcret
   566   007C1A                     __end_of_initialisation:
   567                           	callstack 0
   568   000000                     
   569                           	psect	param0
   570   000000                     
   571                           	psect	idloc
   572                           
   573                           ;Config register IDLOC0 @ 0x200000
   574                           ;	unspecified, using default values
   575   200000                     	org	2097152
   576   200000  FF                 	db	255
   577                           
   578                           ;Config register IDLOC1 @ 0x200001
   579                           ;	unspecified, using default values
   580   200001                     	org	2097153
   581   200001  FF                 	db	255
   582                           
   583                           ;Config register IDLOC2 @ 0x200002
   584                           ;	unspecified, using default values
   585   200002                     	org	2097154
   586   200002  FF                 	db	255
   587                           
   588                           ;Config register IDLOC3 @ 0x200003
   589                           ;	unspecified, using default values
   590   200003                     	org	2097155
   591   200003  FF                 	db	255
   592                           
   593                           ;Config register IDLOC4 @ 0x200004
   594                           ;	unspecified, using default values
   595   200004                     	org	2097156
   596   200004  FF                 	db	255
   597                           
   598                           ;Config register IDLOC5 @ 0x200005
   599                           ;	unspecified, using default values
   600   200005                     	org	2097157
   601   200005  FF                 	db	255
   602                           
   603                           ;Config register IDLOC6 @ 0x200006
   604                           ;	unspecified, using default values
   605   200006                     	org	2097158
   606   200006  FF                 	db	255
   607                           
   608                           ;Config register IDLOC7 @ 0x200007
   609                           ;	unspecified, using default values
   610   200007                     	org	2097159
   611   200007  FF                 	db	255
   612                           
   613                           	psect	config
   614                           
   615                           ; Padding undefined space
   616   300000                     	org	3145728
   617   300000  FF                 	db	255
   618                           
   619                           ;Config register CONFIG1H @ 0x300001
   620                           ;	Oscillator Selection bits
   621                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   622                           ;	Fail-Safe Clock Monitor Enable bit
   623                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   624                           ;	Internal/External Oscillator Switchover bit
   625                           ;	IESO = OFF, Oscillator Switchover mode disabled
   626   300001                     	org	3145729
   627   300001  08                 	db	8
   628                           
   629                           ;Config register CONFIG2L @ 0x300002
   630                           ;	Power-up Timer Enable bit
   631                           ;	PWRTEN = OFF, PWRT disabled
   632                           ;	Brown-out Reset Enable bits
   633                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   634                           ;	Brown Out Reset Voltage bits
   635                           ;	BORV = 18, VBOR set to 1.8 V nominal
   636   300002                     	org	3145730
   637   300002  1F                 	db	31
   638                           
   639                           ;Config register CONFIG2H @ 0x300003
   640                           ;	Watchdog Timer Enable bit
   641                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   642                           ;	Watchdog Timer Postscale Select bits
   643                           ;	WDTPS = 32768, 1:32768
   644   300003                     	org	3145731
   645   300003  1E                 	db	30
   646                           
   647                           ; Padding undefined space
   648   300004                     	org	3145732
   649   300004  FF                 	db	255
   650                           
   651                           ;Config register CONFIG3H @ 0x300005
   652                           ;	CCP2 MUX bit
   653                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   654                           ;	PORTB A/D Enable bit
   655                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   656                           ;	Low-Power Timer1 Oscillator Enable bit
   657                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   658                           ;	HFINTOSC Fast Start-up
   659                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   660                           ;	MCLR Pin Enable bit
   661                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   662   300005                     	org	3145733
   663   300005  8B                 	db	139
   664                           
   665                           ;Config register CONFIG4L @ 0x300006
   666                           ;	Stack Full/Underflow Reset Enable bit
   667                           ;	STVREN = ON, Stack full/underflow will cause Reset
   668                           ;	Single-Supply ICSP Enable bit
   669                           ;	LVP = OFF, Single-Supply ICSP disabled
   670                           ;	Extended Instruction Set Enable bit
   671                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   672                           ;	Background Debugger Enable bit
   673                           ;	DEBUG = 0x1, unprogrammed default
   674   300006                     	org	3145734
   675   300006  81                 	db	129
   676                           
   677                           ; Padding undefined space
   678   300007                     	org	3145735
   679   300007  FF                 	db	255
   680                           
   681                           ;Config register CONFIG5L @ 0x300008
   682                           ;	Code Protection Block 0
   683                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   684                           ;	Code Protection Block 1
   685                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   686                           ;	Code Protection Block 2
   687                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   688                           ;	Code Protection Block 3
   689                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   690   300008                     	org	3145736
   691   300008  0F                 	db	15
   692                           
   693                           ;Config register CONFIG5H @ 0x300009
   694                           ;	Boot Block Code Protection bit
   695                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   696                           ;	Data EEPROM Code Protection bit
   697                           ;	CPD = OFF, Data EEPROM not code-protected
   698   300009                     	org	3145737
   699   300009  C0                 	db	192
   700                           
   701                           ;Config register CONFIG6L @ 0x30000A
   702                           ;	Write Protection Block 0
   703                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   704                           ;	Write Protection Block 1
   705                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   706                           ;	Write Protection Block 2
   707                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   708                           ;	Write Protection Block 3
   709                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   710   30000A                     	org	3145738
   711   30000A  0F                 	db	15
   712                           
   713                           ;Config register CONFIG6H @ 0x30000B
   714                           ;	Configuration Register Write Protection bit
   715                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   716                           ;	Boot Block Write Protection bit
   717                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   718                           ;	Data EEPROM Write Protection bit
   719                           ;	WRTD = OFF, Data EEPROM not write-protected
   720   30000B                     	org	3145739
   721   30000B  E0                 	db	224
   722                           
   723                           ;Config register CONFIG7L @ 0x30000C
   724                           ;	Table Read Protection Block 0
   725                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   726                           ;	Table Read Protection Block 1
   727                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   728                           ;	Table Read Protection Block 2
   729                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   730                           ;	Table Read Protection Block 3
   731                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   732   30000C                     	org	3145740
   733   30000C  0F                 	db	15
   734                           
   735                           ;Config register CONFIG7H @ 0x30000D
   736                           ;	Boot Block Table Read Protection bit
   737                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   738   30000D                     	org	3145741
   739   30000D  40                 	db	64
   740                           tosu	equ	0xFFF
   741                           tosh	equ	0xFFE
   742                           tosl	equ	0xFFD
   743                           stkptr	equ	0xFFC
   744                           pclatu	equ	0xFFB
   745                           pclath	equ	0xFFA
   746                           pcl	equ	0xFF9
   747                           tblptru	equ	0xFF8
   748                           tblptrh	equ	0xFF7
   749                           tblptrl	equ	0xFF6
   750                           tablat	equ	0xFF5
   751                           prodh	equ	0xFF4
   752                           prodl	equ	0xFF3
   753                           indf0	equ	0xFEF
   754                           postinc0	equ	0xFEE
   755                           postdec0	equ	0xFED
   756                           preinc0	equ	0xFEC
   757                           plusw0	equ	0xFEB
   758                           fsr0h	equ	0xFEA
   759                           fsr0l	equ	0xFE9
   760                           wreg	equ	0xFE8
   761                           indf1	equ	0xFE7
   762                           postinc1	equ	0xFE6
   763                           postdec1	equ	0xFE5
   764                           preinc1	equ	0xFE4
   765                           plusw1	equ	0xFE3
   766                           fsr1h	equ	0xFE2
   767                           fsr1l	equ	0xFE1
   768                           bsr	equ	0xFE0
   769                           indf2	equ	0xFDF
   770                           postinc2	equ	0xFDE
   771                           postdec2	equ	0xFDD
   772                           preinc2	equ	0xFDC
   773                           plusw2	equ	0xFDB
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     33      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_testMatrice
    _testMatrice->_setDel

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     424
                     _initialisation
                        _testMatrice
 ---------------------------------------------------------------------------------
 (1) _testMatrice                                          5     5      0     424
                                             28 BANK0      5     5      0
                             _setDel
 ---------------------------------------------------------------------------------
 (2) _setDel                                              28    24      4     244
                                              0 BANK0     28    24      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _testMatrice
     _setDel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     21      39       4       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRll         1E      0       0      26        0.0%
BITBIGSFR_1hh       1B      0       0      19        0.0%
BITBIGSFRlhh        10      0       0      24        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_1llh       C      0       0      21        0.0%
BITBIGSFR_1hl        7      0       0      20        0.0%
BITBIGSFRh           7      0       0      23        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFR_1lll       1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      27        0.0%
DATA                 0      0      39      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 08 13:48:58 2023

                     l23 7BFC                       l24 7BFC                       l36 7CAC  
                     l44 7DBE                       l29 7C18                      l971 7CAE  
                    l885 7C04                      l965 7C58                      l981 7CF8  
                    l973 7CB8                      l967 7C7C                      l991 7D58  
                    l969 7C94                      l993 7D6E                      l985 7D1A  
                    l977 7CDA                      l995 7D76                      l987 7D2E  
                    l979 7CEE                      l997 7D7C                      l989 7D42  
                    l999 7D9A                      u200 7D9A                      u201 7D96  
                    u210 7DBE                      u211 7DBA                      u141 7C62  
                    u151 7C74                      u160 7CD6                      u161 7CD2  
                    u170 7D16                      u171 7D12                      u227 7CE2  
                    u180 7D58                      u181 7D54                      u237 7D36  
                    u190 7D6E                      u191 7D6A                      wreg 0FE8  
                   l1001 7DA0                     l1003 7BF2                     l1005 7BF6  
                   l1007 7BFA                     _RCIF 7CF5         ??_initialisation 0060  
                   _main 7BF2                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ?_main 0060                    _ANSEL 0F7E  
                  _RCREG 0FAE                    _SPBRG 0FAF                    _PORTB 0F81  
                  _PORTC 0F82                    _TRISB 0F93                    _TRISC 0F94  
                  _TXREG 0FAD                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    status 0FD8          __initialization 7C32  
           __end_of_main 7C04                   ??_main 0081            __activetblptr 0003  
          setDel@colonne 0062                   _ANSELH 0F7F                   _SPBRGH 0FB0  
                 _setDel 7C58                   isa$std 0001             ?_testMatrice 0060  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7C52            ___rparam_used 0000  
            setDel@F2587 008D              setDel@F2589 0081             __pidataBANK0 7C1A  
            setDel@ligne 0060                  ?_setDel 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7C32                  __ramtop 0600  
                __ptext0 7BF2                  __ptext1 7CAE                  __ptext2 7C58  
                __ptext3 7C04     end_of_initialization 7C52                _RCSTAbits 0FAB  
                postdec1 0FE5                  postinc0 0FEE                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8           __end_of_setDel 7CAE  
    start_initialization 7C32              __pdataBANK0 0081                 ??_setDel 0064  
          __pcstackBANK0 0060          setDel@tableauCo 0070          setDel@tableauLi 0064  
         _initialisation 7C04   __end_of_initialisation 7C1A            ??_testMatrice 007C  
              copy_data0 7C46                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060      __end_of_testMatrice 7DC0                 isa$xinst 0000  
            _testMatrice 7CAE             testMatrice@i 007D             testMatrice@j 007F  
