

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 08 13:40:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataBANK0
    54   007EA2                     __pidataBANK0:
    55                           	callstack 0
    56                           
    57                           ;initializer for setDel@F2589
    58   007EA2  0000               	dw	0
    59   007EA4  00FC               	dw	252
    60   007EA6  00FA               	dw	250
    61   007EA8  00F6               	dw	246
    62   007EAA  00EE               	dw	238
    63   007EAC  00DE               	dw	222
    64                           
    65                           ;initializer for setDel@F2587
    66   007EAE  0000               	dw	0
    67   007EB0  0002               	dw	2
    68   007EB2  0004               	dw	4
    69   007EB4  0008               	dw	8
    70   007EB6  0010               	dw	16
    71   007EB8  0020               	dw	32
    72   000000                     _RCREG	set	4014
    73   000000                     _TXREG	set	4013
    74   000000                     _TRISCbits	set	3988
    75   000000                     _ANSEL	set	3966
    76   000000                     _ANSELH	set	3967
    77   000000                     _TRISB	set	3987
    78   000000                     _RCSTAbits	set	4011
    79   000000                     _TXSTAbits	set	4012
    80   000000                     _SPBRG	set	4015
    81   000000                     _SPBRGH	set	4016
    82   000000                     _TRISC	set	3988
    83   000000                     _RCIF	set	31989
    84   000000                     _PORTB	set	3969
    85   000000                     _PORTC	set	3970
    86   000000                     _BAUDCONbits	set	4024
    87                           
    88                           ; #config settings
    89                           
    90                           	psect	cinit
    91   007EBA                     __pcinit:
    92                           	callstack 0
    93   007EBA                     start_initialization:
    94                           	callstack 0
    95   007EBA                     __initialization:
    96                           	callstack 0
    97                           
    98                           ; Initialize objects allocated to BANK0 (24 bytes)
    99                           ; load TBLPTR registers with __pidataBANK0
   100   007EBA  0EA2               	movlw	low __pidataBANK0
   101   007EBC  6EF6               	movwf	tblptrl,c
   102   007EBE  0E7E               	movlw	high __pidataBANK0
   103   007EC0  6EF7               	movwf	tblptrh,c
   104   007EC2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   105   007EC4  6EF8               	movwf	tblptru,c
   106   007EC6  EE00  F081         	lfsr	0,__pdataBANK0
   107   007ECA  EE10 F018          	lfsr	1,24
   108   007ECE                     copy_data0:
   109   007ECE  0009               	tblrd		*+
   110   007ED0  CFF5 FFEE          	movff	tablat,postinc0
   111   007ED4  50E5               	movf	postdec1,w,c
   112   007ED6  50E1               	movf	fsr1l,w,c
   113   007ED8  E1FA               	bnz	copy_data0
   114   007EDA                     end_of_initialization:
   115                           	callstack 0
   116   007EDA                     __end_of__initialization:
   117                           	callstack 0
   118   007EDA  0100               	movlb	0
   119   007EDC  EF3D  F03F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122   000081                     __pdataBANK0:
   123                           	callstack 0
   124   000081                     setDel@F2589:
   125                           	callstack 0
   126   000081                     	ds	12
   127   00008D                     setDel@F2587:
   128                           	callstack 0
   129   00008D                     	ds	12
   130                           
   131                           	psect	cstackBANK0
   132   000060                     __pcstackBANK0:
   133                           	callstack 0
   134   000060                     setDel@ligne:
   135                           	callstack 0
   136                           
   137                           ; 2 bytes @ 0x0
   138   000060                     	ds	2
   139   000062                     setDel@colonne:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143   000062                     	ds	2
   144   000064                     setDel@tableauLi:
   145                           	callstack 0
   146                           
   147                           ; 12 bytes @ 0x4
   148   000064                     	ds	12
   149   000070                     setDel@tableauCo:
   150                           	callstack 0
   151                           
   152                           ; 12 bytes @ 0x10
   153   000070                     	ds	12
   154   00007C                     ??_testMatrice:
   155                           
   156                           ; 1 bytes @ 0x1C
   157   00007C                     	ds	1
   158   00007D                     testMatrice@i:
   159                           	callstack 0
   160                           
   161                           ; 2 bytes @ 0x1D
   162   00007D                     	ds	2
   163   00007F                     testMatrice@j:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x1F
   167   00007F                     	ds	2
   168   000081                     
   169                           ; 1 bytes @ 0x21
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 43 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called: 2
   195 ;; This function calls:
   196 ;;		_initialisation
   197 ;;		_testMatrice
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text0
   204   007E7A                     __ptext0:
   205                           	callstack 0
   206   007E7A                     _main:
   207                           	callstack 29
   208   007E7A                     
   209                           ;main.c: 45: initialisation();
   210   007E7A  EC46  F03F         	call	_initialisation	;wreg free
   211   007E7E                     
   212                           ;main.c: 46: testMatrice();
   213   007E7E  EC9B  F03F         	call	_testMatrice	;wreg free
   214   007E82                     
   215                           ;main.c: 59: __nop();
   216   007E82  F000               	nop	
   217   007E84                     l23:
   218   007E84  EF42  F03F         	goto	l23
   219   007E88  EF00  F000         	goto	start
   220   007E8C                     __end_of_main:
   221                           	callstack 0
   222                           
   223 ;; *************** function _testMatrice *****************
   224 ;; Defined at:
   225 ;;		line 152 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  j               2   31[BANK0 ] int 
   230 ;;  i               2   29[BANK0 ] int 
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   240 ;;      Params:         0       0       0       0       0       0       0
   241 ;;      Locals:         0       4       0       0       0       0       0
   242 ;;      Temps:          0       1       0       0       0       0       0
   243 ;;      Totals:         0       5       0       0       0       0       0
   244 ;;Total ram usage:        5 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		_setDel
   249 ;; This function is called by:
   250 ;;		_main
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	text1
   255   007F36                     __ptext1:
   256                           	callstack 0
   257   007F36                     _testMatrice:
   258                           	callstack 29
   259   007F36                     
   260                           ;main.c: 154: for (int i = 0; i < 6; i++)
   261   007F36  0E00               	movlw	0
   262   007F38  0100               	movlb	0	; force () banked
   263   007F3A  6F7E               	movwf	(testMatrice@i+1)& (0+255),b
   264   007F3C  0E00               	movlw	0
   265   007F3E  6F7D               	movwf	testMatrice@i& (0+255),b
   266   007F40                     
   267                           ; BSR set to: 0
   268   007F40  0100               	movlb	0	; force () banked
   269   007F42  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   270   007F44  EFAD  F03F         	goto	u141
   271   007F48  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   272   007F4A  E109               	bnz	u140
   273   007F4C  0E06               	movlw	6
   274   007F4E  5D7D               	subwf	testMatrice@i& (0+255),w,b
   275   007F50  A0D8               	btfss	status,0,c
   276   007F52  EFAD  F03F         	goto	u141
   277   007F56  EFAF  F03F         	goto	u140
   278   007F5A                     u141:
   279   007F5A  EFB1  F03F         	goto	l968
   280   007F5E                     u140:
   281   007F5E  EFFF  F03F         	goto	l43
   282   007F62                     l968:
   283                           
   284                           ; BSR set to: 0
   285                           ;main.c: 155: {;main.c: 156: for (int j = 0; j < 6; j++)
   286   007F62  0E00               	movlw	0
   287   007F64  0100               	movlb	0	; force () banked
   288   007F66  6F80               	movwf	(testMatrice@j+1)& (0+255),b
   289   007F68  0E00               	movlw	0
   290   007F6A  6F7F               	movwf	testMatrice@j& (0+255),b
   291   007F6C                     
   292                           ; BSR set to: 0
   293   007F6C  0100               	movlb	0	; force () banked
   294   007F6E  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   295   007F70  EFC3  F03F         	goto	u151
   296   007F74  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   297   007F76  E109               	bnz	u150
   298   007F78  0E06               	movlw	6
   299   007F7A  5D7F               	subwf	testMatrice@j& (0+255),w,b
   300   007F7C  A0D8               	btfss	status,0,c
   301   007F7E  EFC3  F03F         	goto	u151
   302   007F82  EFC5  F03F         	goto	u150
   303   007F86                     u151:
   304   007F86  EFC7  F03F         	goto	l974
   305   007F8A                     u150:
   306   007F8A  EFED  F03F         	goto	l982
   307   007F8E                     l974:
   308                           
   309                           ; BSR set to: 0
   310                           ;main.c: 157: {;main.c: 158: setDel(i,j);
   311   007F8E  C07D  F060         	movff	testMatrice@i,setDel@ligne
   312   007F92  C07E  F061         	movff	testMatrice@i+1,setDel@ligne+1
   313   007F96  C07F  F062         	movff	testMatrice@j,setDel@colonne
   314   007F9A  C080  F063         	movff	testMatrice@j+1,setDel@colonne+1
   315   007F9E  EC70  F03F         	call	_setDel	;wreg free
   316   007FA2                     
   317                           ;main.c: 159: _delay((unsigned long)((300)*(1000000/4000.0)));
   318   007FA2  0E62               	movlw	98
   319   007FA4  0100               	movlb	0	; force () banked
   320   007FA6  6F7C               	movwf	??_testMatrice& (0+255),b
   321   007FA8  0E65               	movlw	101
   322   007FAA                     u187:
   323   007FAA  2EE8               	decfsz	wreg,f,c
   324   007FAC  D7FE               	bra	u187
   325   007FAE  2F7C               	decfsz	??_testMatrice& (0+255),f,b
   326   007FB0  D7FC               	bra	u187
   327   007FB2  F000 F000          	nop2	
   328   007FB6  0100               	movlb	0	; force () banked
   329   007FB8  4B7F               	infsnz	testMatrice@j& (0+255),f,b
   330   007FBA  2B80               	incf	(testMatrice@j+1)& (0+255),f,b
   331   007FBC                     
   332                           ; BSR set to: 0
   333   007FBC  0100               	movlb	0	; force () banked
   334   007FBE  BF80               	btfsc	(testMatrice@j+1)& (0+255),7,b
   335   007FC0  EFEB  F03F         	goto	u161
   336   007FC4  5180               	movf	(testMatrice@j+1)& (0+255),w,b
   337   007FC6  E109               	bnz	u160
   338   007FC8  0E06               	movlw	6
   339   007FCA  5D7F               	subwf	testMatrice@j& (0+255),w,b
   340   007FCC  A0D8               	btfss	status,0,c
   341   007FCE  EFEB  F03F         	goto	u161
   342   007FD2  EFED  F03F         	goto	u160
   343   007FD6                     u161:
   344   007FD6  EFC7  F03F         	goto	l974
   345   007FDA                     u160:
   346   007FDA                     l982:
   347                           
   348                           ; BSR set to: 0
   349   007FDA  0100               	movlb	0	; force () banked
   350   007FDC  4B7D               	infsnz	testMatrice@i& (0+255),f,b
   351   007FDE  2B7E               	incf	(testMatrice@i+1)& (0+255),f,b
   352   007FE0                     
   353                           ; BSR set to: 0
   354   007FE0  0100               	movlb	0	; force () banked
   355   007FE2  BF7E               	btfsc	(testMatrice@i+1)& (0+255),7,b
   356   007FE4  EFFD  F03F         	goto	u171
   357   007FE8  517E               	movf	(testMatrice@i+1)& (0+255),w,b
   358   007FEA  E109               	bnz	u170
   359   007FEC  0E06               	movlw	6
   360   007FEE  5D7D               	subwf	testMatrice@i& (0+255),w,b
   361   007FF0  A0D8               	btfss	status,0,c
   362   007FF2  EFFD  F03F         	goto	u171
   363   007FF6  EFFF  F03F         	goto	u170
   364   007FFA                     u171:
   365   007FFA  EFB1  F03F         	goto	l968
   366   007FFE                     u170:
   367   007FFE                     l43:
   368                           
   369                           ; BSR set to: 0
   370   007FFE  0012               	return		;funcret
   371   008000                     __end_of_testMatrice:
   372                           	callstack 0
   373                           
   374 ;; *************** function _setDel *****************
   375 ;; Defined at:
   376 ;;		line 131 in file "main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  ligne           2    0[BANK0 ] int 
   379 ;;  colonne         2    2[BANK0 ] int 
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  tableauCo      12   16[BANK0 ] int [6]
   382 ;;  tableauLi      12    4[BANK0 ] int [6]
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   392 ;;      Params:         0       4       0       0       0       0       0
   393 ;;      Locals:         0      24       0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0
   395 ;;      Totals:         0      28       0       0       0       0       0
   396 ;;Total ram usage:       28 bytes
   397 ;; Hardware stack levels used: 1
   398 ;; This function calls:
   399 ;;		Nothing
   400 ;; This function is called by:
   401 ;;		_testMatrice
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text2
   406   007EE0                     __ptext2:
   407                           	callstack 0
   408   007EE0                     _setDel:
   409                           	callstack 29
   410   007EE0                     
   411                           ;main.c: 135: int tableauLi[6] = {0, 0b10, 0b100, 0b1000, 0b10000, 0b100000};
   412   007EE0  EE20  F08D         	lfsr	2,setDel@F2587
   413   007EE4  EE10  F064         	lfsr	1,setDel@tableauLi
   414   007EE8  0E0B               	movlw	11
   415   007EEA                     u121:
   416   007EEA  CFDB FFE3          	movff	plusw2,plusw1
   417   007EEE  06E8               	decf	wreg,f,c
   418   007EF0  E2FC               	bc	u121
   419                           
   420                           ;main.c: 136: int tableauCo[6] = {0,0b11111100, 0b11111010, 0b11110110, 0b11101110, 0b11
      +                          011110};
   421   007EF2  EE20  F081         	lfsr	2,setDel@F2589
   422   007EF6  EE10  F070         	lfsr	1,setDel@tableauCo
   423   007EFA  0E0B               	movlw	11
   424   007EFC                     u131:
   425   007EFC  CFDB FFE3          	movff	plusw2,plusw1
   426   007F00  06E8               	decf	wreg,f,c
   427   007F02  E2FC               	bc	u131
   428   007F04                     
   429                           ;main.c: 140: PORTB = tableauLi[ligne];
   430   007F04  90D8               	bcf	status,0,c
   431   007F06  0100               	movlb	0	; force () banked
   432   007F08  3560               	rlcf	setDel@ligne& (0+255),w,b
   433   007F0A  6ED9               	movwf	fsr2l,c
   434   007F0C  3561               	rlcf	(setDel@ligne+1)& (0+255),w,b
   435   007F0E  6EDA               	movwf	fsr2h,c
   436   007F10  0E64               	movlw	low setDel@tableauLi
   437   007F12  26D9               	addwf	fsr2l,f,c
   438   007F14  0E00               	movlw	high setDel@tableauLi
   439   007F16  22DA               	addwfc	fsr2h,f,c
   440   007F18  50DF               	movf	indf2,w,c
   441   007F1A  6E81               	movwf	129,c	;volatile
   442   007F1C                     
   443                           ; BSR set to: 0
   444                           ;main.c: 141: PORTC = tableauCo[colonne];
   445   007F1C  90D8               	bcf	status,0,c
   446   007F1E  0100               	movlb	0	; force () banked
   447   007F20  3562               	rlcf	setDel@colonne& (0+255),w,b
   448   007F22  6ED9               	movwf	fsr2l,c
   449   007F24  3563               	rlcf	(setDel@colonne+1)& (0+255),w,b
   450   007F26  6EDA               	movwf	fsr2h,c
   451   007F28  0E70               	movlw	low setDel@tableauCo
   452   007F2A  26D9               	addwf	fsr2l,f,c
   453   007F2C  0E00               	movlw	high setDel@tableauCo
   454   007F2E  22DA               	addwfc	fsr2h,f,c
   455   007F30  50DF               	movf	indf2,w,c
   456   007F32  6E82               	movwf	130,c	;volatile
   457   007F34                     
   458                           ; BSR set to: 0
   459   007F34  0012               	return		;funcret
   460   007F36                     __end_of_setDel:
   461                           	callstack 0
   462                           
   463 ;; *************** function _initialisation *****************
   464 ;; Defined at:
   465 ;;		line 96 in file "main.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   479 ;;      Params:         0       0       0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0
   482 ;;      Totals:         0       0       0       0       0       0       0
   483 ;;Total ram usage:        0 bytes
   484 ;; Hardware stack levels used: 1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text3
   493   007E8C                     __ptext3:
   494                           	callstack 0
   495   007E8C                     _initialisation:
   496                           	callstack 30
   497   007E8C                     
   498                           ;main.c: 98: TRISB = 0;
   499   007E8C  0E00               	movlw	0
   500   007E8E  6E93               	movwf	147,c	;volatile
   501                           
   502                           ;main.c: 99: TRISC = 0;
   503   007E90  0E00               	movlw	0
   504   007E92  6E94               	movwf	148,c	;volatile
   505                           
   506                           ;main.c: 102: ANSELH = 0;
   507   007E94  0E00               	movlw	0
   508   007E96  6E7F               	movwf	127,c	;volatile
   509                           
   510                           ;main.c: 105: PORTB = 0;
   511   007E98  0E00               	movlw	0
   512   007E9A  6E81               	movwf	129,c	;volatile
   513                           
   514                           ;main.c: 106: PORTC = 1;
   515   007E9C  0E01               	movlw	1
   516   007E9E  6E82               	movwf	130,c	;volatile
   517   007EA0  0012               	return		;funcret
   518   007EA2                     __end_of_initialisation:
   519                           	callstack 0
   520   000000                     
   521                           	psect	param0
   522   000000                     
   523                           	psect	idloc
   524                           
   525                           ;Config register IDLOC0 @ 0x200000
   526                           ;	unspecified, using default values
   527   200000                     	org	2097152
   528   200000  FF                 	db	255
   529                           
   530                           ;Config register IDLOC1 @ 0x200001
   531                           ;	unspecified, using default values
   532   200001                     	org	2097153
   533   200001  FF                 	db	255
   534                           
   535                           ;Config register IDLOC2 @ 0x200002
   536                           ;	unspecified, using default values
   537   200002                     	org	2097154
   538   200002  FF                 	db	255
   539                           
   540                           ;Config register IDLOC3 @ 0x200003
   541                           ;	unspecified, using default values
   542   200003                     	org	2097155
   543   200003  FF                 	db	255
   544                           
   545                           ;Config register IDLOC4 @ 0x200004
   546                           ;	unspecified, using default values
   547   200004                     	org	2097156
   548   200004  FF                 	db	255
   549                           
   550                           ;Config register IDLOC5 @ 0x200005
   551                           ;	unspecified, using default values
   552   200005                     	org	2097157
   553   200005  FF                 	db	255
   554                           
   555                           ;Config register IDLOC6 @ 0x200006
   556                           ;	unspecified, using default values
   557   200006                     	org	2097158
   558   200006  FF                 	db	255
   559                           
   560                           ;Config register IDLOC7 @ 0x200007
   561                           ;	unspecified, using default values
   562   200007                     	org	2097159
   563   200007  FF                 	db	255
   564                           
   565                           	psect	config
   566                           
   567                           ; Padding undefined space
   568   300000                     	org	3145728
   569   300000  FF                 	db	255
   570                           
   571                           ;Config register CONFIG1H @ 0x300001
   572                           ;	Oscillator Selection bits
   573                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   574                           ;	Fail-Safe Clock Monitor Enable bit
   575                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   576                           ;	Internal/External Oscillator Switchover bit
   577                           ;	IESO = OFF, Oscillator Switchover mode disabled
   578   300001                     	org	3145729
   579   300001  08                 	db	8
   580                           
   581                           ;Config register CONFIG2L @ 0x300002
   582                           ;	Power-up Timer Enable bit
   583                           ;	PWRTEN = OFF, PWRT disabled
   584                           ;	Brown-out Reset Enable bits
   585                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   586                           ;	Brown Out Reset Voltage bits
   587                           ;	BORV = 18, VBOR set to 1.8 V nominal
   588   300002                     	org	3145730
   589   300002  1F                 	db	31
   590                           
   591                           ;Config register CONFIG2H @ 0x300003
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   594                           ;	Watchdog Timer Postscale Select bits
   595                           ;	WDTPS = 32768, 1:32768
   596   300003                     	org	3145731
   597   300003  1E                 	db	30
   598                           
   599                           ; Padding undefined space
   600   300004                     	org	3145732
   601   300004  FF                 	db	255
   602                           
   603                           ;Config register CONFIG3H @ 0x300005
   604                           ;	CCP2 MUX bit
   605                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   606                           ;	PORTB A/D Enable bit
   607                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   608                           ;	Low-Power Timer1 Oscillator Enable bit
   609                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   610                           ;	HFINTOSC Fast Start-up
   611                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   612                           ;	MCLR Pin Enable bit
   613                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   614   300005                     	org	3145733
   615   300005  8B                 	db	139
   616                           
   617                           ;Config register CONFIG4L @ 0x300006
   618                           ;	Stack Full/Underflow Reset Enable bit
   619                           ;	STVREN = ON, Stack full/underflow will cause Reset
   620                           ;	Single-Supply ICSP Enable bit
   621                           ;	LVP = OFF, Single-Supply ICSP disabled
   622                           ;	Extended Instruction Set Enable bit
   623                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   624                           ;	Background Debugger Enable bit
   625                           ;	DEBUG = 0x1, unprogrammed default
   626   300006                     	org	3145734
   627   300006  81                 	db	129
   628                           
   629                           ; Padding undefined space
   630   300007                     	org	3145735
   631   300007  FF                 	db	255
   632                           
   633                           ;Config register CONFIG5L @ 0x300008
   634                           ;	Code Protection Block 0
   635                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   636                           ;	Code Protection Block 1
   637                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   638                           ;	Code Protection Block 2
   639                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   640                           ;	Code Protection Block 3
   641                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   642   300008                     	org	3145736
   643   300008  0F                 	db	15
   644                           
   645                           ;Config register CONFIG5H @ 0x300009
   646                           ;	Boot Block Code Protection bit
   647                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   648                           ;	Data EEPROM Code Protection bit
   649                           ;	CPD = OFF, Data EEPROM not code-protected
   650   300009                     	org	3145737
   651   300009  C0                 	db	192
   652                           
   653                           ;Config register CONFIG6L @ 0x30000A
   654                           ;	Write Protection Block 0
   655                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   656                           ;	Write Protection Block 1
   657                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   658                           ;	Write Protection Block 2
   659                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   660                           ;	Write Protection Block 3
   661                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   662   30000A                     	org	3145738
   663   30000A  0F                 	db	15
   664                           
   665                           ;Config register CONFIG6H @ 0x30000B
   666                           ;	Configuration Register Write Protection bit
   667                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   668                           ;	Boot Block Write Protection bit
   669                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   670                           ;	Data EEPROM Write Protection bit
   671                           ;	WRTD = OFF, Data EEPROM not write-protected
   672   30000B                     	org	3145739
   673   30000B  E0                 	db	224
   674                           
   675                           ;Config register CONFIG7L @ 0x30000C
   676                           ;	Table Read Protection Block 0
   677                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   678                           ;	Table Read Protection Block 1
   679                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   680                           ;	Table Read Protection Block 2
   681                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   682                           ;	Table Read Protection Block 3
   683                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   684   30000C                     	org	3145740
   685   30000C  0F                 	db	15
   686                           
   687                           ;Config register CONFIG7H @ 0x30000D
   688                           ;	Boot Block Table Read Protection bit
   689                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   690   30000D                     	org	3145741
   691   30000D  40                 	db	64
   692                           tosu	equ	0xFFF
   693                           tosh	equ	0xFFE
   694                           tosl	equ	0xFFD
   695                           stkptr	equ	0xFFC
   696                           pclatu	equ	0xFFB
   697                           pclath	equ	0xFFA
   698                           pcl	equ	0xFF9
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           prodh	equ	0xFF4
   704                           prodl	equ	0xFF3
   705                           indf0	equ	0xFEF
   706                           postinc0	equ	0xFEE
   707                           postdec0	equ	0xFED
   708                           preinc0	equ	0xFEC
   709                           plusw0	equ	0xFEB
   710                           fsr0h	equ	0xFEA
   711                           fsr0l	equ	0xFE9
   712                           wreg	equ	0xFE8
   713                           indf1	equ	0xFE7
   714                           postinc1	equ	0xFE6
   715                           postdec1	equ	0xFE5
   716                           preinc1	equ	0xFE4
   717                           plusw1	equ	0xFE3
   718                           fsr1h	equ	0xFE2
   719                           fsr1l	equ	0xFE1
   720                           bsr	equ	0xFE0
   721                           indf2	equ	0xFDF
   722                           postinc2	equ	0xFDE
   723                           postdec2	equ	0xFDD
   724                           preinc2	equ	0xFDC
   725                           plusw2	equ	0xFDB
   726                           fsr2h	equ	0xFDA
   727                           fsr2l	equ	0xFD9
   728                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     33      57
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_testMatrice
    _testMatrice->_setDel

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     380
                     _initialisation
                        _testMatrice
 ---------------------------------------------------------------------------------
 (1) _testMatrice                                          5     5      0     380
                                             28 BANK0      5     5      0
                             _setDel
 ---------------------------------------------------------------------------------
 (2) _setDel                                              28    24      4     244
                                              0 BANK0     28    24      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _testMatrice
     _setDel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      39       5       35.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhh        47      0       0      16        0.0%
BITBIGSFRll         1E      0       0      22        0.0%
BITBIGSFRlhh        10      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      18        0.0%
BITBIGSFRhlll        9      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      23        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 08 13:40:10 2023

                     l23 7E84                       l24 7E84                       l43 7FFE  
                     l36 7F34                       l29 7EA0                      l960 7F1C  
                    l970 7F6C                      l962 7F36                      l884 7E8C  
                    l956 7EE0                      l980 7FBC                      l964 7F40  
                    l958 7F04                      l982 7FDA                      l974 7F8E  
                    l990 7E82                      l984 7FE0                      l976 7FA2  
                    l968 7F62                      l978 7FB6                      l986 7E7A  
                    l988 7E7E                      u121 7EEA                      u131 7EFC  
                    u140 7F5E                      u141 7F5A                      u150 7F8A  
                    u151 7F86                      u160 7FDA                      u161 7FD6  
                    u170 7FFE                      u171 7FFA                      u187 7FAA  
                    wreg 0FE8                     _RCIF 7CF5         ??_initialisation 0060  
                   _main 7E7A                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ?_main 0060                    _ANSEL 0F7E  
                  _RCREG 0FAE                    _SPBRG 0FAF                    _PORTB 0F81  
                  _PORTC 0F82                    _TRISB 0F93                    _TRISC 0F94  
                  _TXREG 0FAD                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    status 0FD8          __initialization 7EBA  
           __end_of_main 7E8C                   ??_main 0081            __activetblptr 0003  
          setDel@colonne 0062                   _ANSELH 0F7F                   _SPBRGH 0FB0  
                 _setDel 7EE0                   isa$std 0001             ?_testMatrice 0060  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7EDA            ___rparam_used 0000  
            setDel@F2587 008D              setDel@F2589 0081             __pidataBANK0 7EA2  
            setDel@ligne 0060                  ?_setDel 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EBA                  __ramtop 0600  
                __ptext0 7E7A                  __ptext1 7F36                  __ptext2 7EE0  
                __ptext3 7E8C     end_of_initialization 7EDA                _RCSTAbits 0FAB  
                postdec1 0FE5                  postinc0 0FEE                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8           __end_of_setDel 7F36  
    start_initialization 7EBA              __pdataBANK0 0081                 ??_setDel 0064  
          __pcstackBANK0 0060          setDel@tableauCo 0070          setDel@tableauLi 0064  
         _initialisation 7E8C   __end_of_initialisation 7EA2            ??_testMatrice 007C  
              copy_data0 7ECE                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060      __end_of_testMatrice 8000                 isa$xinst 0000  
            _testMatrice 7F36             testMatrice@i 007D             testMatrice@j 007F  
