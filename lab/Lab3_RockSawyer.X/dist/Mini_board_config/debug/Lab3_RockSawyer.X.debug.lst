

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 04 12:10:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/07/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataBANK0
    53   007D06                     __pidataBANK0:
    54                           	callstack 0
    55                           
    56                           ;initializer for setDel@F2587
    57   007D06  0000               	dw	0
    58   007D08  0001               	dw	1
    59   007D0A  0003               	dw	3
    60   007D0C  000A               	dw	10
    61   007D0E  0007               	dw	7
    62   007D10  0008               	dw	8
    63                           
    64                           ;initializer for setDel@F2585
    65   007D12  0000               	dw	0
    66   007D14  000C               	dw	12
    67   007D16  000B               	dw	11
    68   007D18  0002               	dw	2
    69   007D1A  0009               	dw	9
    70   007D1C  0004               	dw	4
    71   000000                     _RCREG	set	4014
    72   000000                     _TXREG	set	4013
    73   000000                     _TRISCbits	set	3988
    74   000000                     _ANSEL	set	3966
    75   000000                     _ANSELH	set	3967
    76   000000                     _TRISB	set	3987
    77   000000                     _RCSTAbits	set	4011
    78   000000                     _TXSTAbits	set	4012
    79   000000                     _SPBRG	set	4015
    80   000000                     _SPBRGH	set	4016
    81   000000                     _RCIF	set	31989
    82   000000                     _TRISC	set	3988
    83   000000                     _PORTB	set	3969
    84   000000                     _PORTC	set	3970
    85   000000                     _BAUDCONbits	set	4024
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90   007D44                     __pcinit:
    91                           	callstack 0
    92   007D44                     start_initialization:
    93                           	callstack 0
    94   007D44                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Initialize objects allocated to BANK0 (24 bytes)
    98                           ; load TBLPTR registers with __pidataBANK0
    99   007D44  0E06               	movlw	low __pidataBANK0
   100   007D46  6EF6               	movwf	tblptrl,c
   101   007D48  0E7D               	movlw	high __pidataBANK0
   102   007D4A  6EF7               	movwf	tblptrh,c
   103   007D4C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   104   007D4E  6EF8               	movwf	tblptru,c
   105   007D50  EE00  F07C         	lfsr	0,__pdataBANK0
   106   007D54  EE10 F018          	lfsr	1,24
   107   007D58                     copy_data0:
   108   007D58  0009               	tblrd		*+
   109   007D5A  CFF5 FFEE          	movff	tablat,postinc0
   110   007D5E  50E5               	movf	postdec1,w,c
   111   007D60  50E1               	movf	fsr1l,w,c
   112   007D62  E1FA               	bnz	copy_data0
   113   007D64                     end_of_initialization:
   114                           	callstack 0
   115   007D64                     __end_of__initialization:
   116                           	callstack 0
   117   007D64  0100               	movlb	0
   118   007D66  EF8F  F03E         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	dataBANK0
   121   00007C                     __pdataBANK0:
   122                           	callstack 0
   123   00007C                     setDel@F2587:
   124                           	callstack 0
   125   00007C                     	ds	12
   126   000088                     setDel@F2585:
   127                           	callstack 0
   128   000088                     	ds	12
   129                           
   130                           	psect	cstackBANK0
   131   000060                     __pcstackBANK0:
   132                           	callstack 0
   133   000060                     setDel@ligne:
   134                           	callstack 0
   135                           
   136                           ; 2 bytes @ 0x0
   137   000060                     	ds	2
   138   000062                     setDel@colonne:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x2
   142   000062                     	ds	2
   143   000064                     setDel@tableauLi:
   144                           	callstack 0
   145                           
   146                           ; 12 bytes @ 0x4
   147   000064                     	ds	12
   148   000070                     setDel@tableauCo:
   149                           	callstack 0
   150                           
   151                           ; 12 bytes @ 0x10
   152   000070                     	ds	12
   153   00007C                     
   154                           ; 1 bytes @ 0x1C
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 43 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   174 ;;      Params:         0       0       0       0       0       0       0
   175 ;;      Locals:         0       0       0       0       0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0
   177 ;;      Totals:         0       0       0       0       0       0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels required when called: 1
   180 ;; This function calls:
   181 ;;		_initialisation
   182 ;;		_setDel
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189   007D1E                     __ptext0:
   190                           	callstack 0
   191   007D1E                     _main:
   192                           	callstack 30
   193   007D1E                     
   194                           ;main.c: 45: initialisation();
   195   007D1E  EC78  F03E         	call	_initialisation	;wreg free
   196   007D22                     
   197                           ;main.c: 52: setDel(1, 1);
   198   007D22  0E00               	movlw	0
   199   007D24  0100               	movlb	0	; force () banked
   200   007D26  6F61               	movwf	(setDel@ligne+1)& (0+255),b
   201   007D28  0E01               	movlw	1
   202   007D2A  6F60               	movwf	setDel@ligne& (0+255),b
   203   007D2C  0E00               	movlw	0
   204   007D2E  0100               	movlb	0	; force () banked
   205   007D30  6F63               	movwf	(setDel@colonne+1)& (0+255),b
   206   007D32  0E01               	movlw	1
   207   007D34  6F62               	movwf	setDel@colonne& (0+255),b
   208   007D36  ECB5  F03E         	call	_setDel	;wreg free
   209   007D3A                     
   210                           ;main.c: 55: __nop();
   211   007D3A  F000               	nop	
   212   007D3C                     l21:
   213   007D3C  EF9E  F03E         	goto	l21
   214   007D40  EF00  F000         	goto	start
   215   007D44                     __end_of_main:
   216                           	callstack 0
   217                           
   218 ;; *************** function _setDel *****************
   219 ;; Defined at:
   220 ;;		line 127 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;  ligne           2    0[BANK0 ] int 
   223 ;;  colonne         2    2[BANK0 ] int 
   224 ;; Auto vars:     Size  Location     Type
   225 ;;  tableauCo      12   16[BANK0 ] int [6]
   226 ;;  tableauLi      12    4[BANK0 ] int [6]
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   236 ;;      Params:         0       4       0       0       0       0       0
   237 ;;      Locals:         0      24       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0
   239 ;;      Totals:         0      28       0       0       0       0       0
   240 ;;Total ram usage:       28 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		_main
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text1
   250   007D6A                     __ptext1:
   251                           	callstack 0
   252   007D6A                     _setDel:
   253                           	callstack 30
   254   007D6A                     
   255                           ;main.c: 131: int tableauLi[6] = {0, 12, 11, 2, 9, 4};
   256   007D6A  EE20  F088         	lfsr	2,setDel@F2585
   257   007D6E  EE10  F064         	lfsr	1,setDel@tableauLi
   258   007D72  0E0B               	movlw	11
   259   007D74                     u81:
   260   007D74  CFDB FFE3          	movff	plusw2,plusw1
   261   007D78  06E8               	decf	wreg,f,c
   262   007D7A  E2FC               	bc	u81
   263                           
   264                           ;main.c: 132: int tableauCo[6] = {0, 1, 3, 10, 7, 8};
   265   007D7C  EE20  F07C         	lfsr	2,setDel@F2587
   266   007D80  EE10  F070         	lfsr	1,setDel@tableauCo
   267   007D84  0E0B               	movlw	11
   268   007D86                     u91:
   269   007D86  CFDB FFE3          	movff	plusw2,plusw1
   270   007D8A  06E8               	decf	wreg,f,c
   271   007D8C  E2FC               	bc	u91
   272   007D8E                     
   273                           ;main.c: 135: PORTB = tableauLi[ligne];
   274   007D8E  90D8               	bcf	status,0,c
   275   007D90  0100               	movlb	0	; force () banked
   276   007D92  3560               	rlcf	setDel@ligne& (0+255),w,b
   277   007D94  6ED9               	movwf	fsr2l,c
   278   007D96  3561               	rlcf	(setDel@ligne+1)& (0+255),w,b
   279   007D98  6EDA               	movwf	fsr2h,c
   280   007D9A  0E64               	movlw	low setDel@tableauLi
   281   007D9C  26D9               	addwf	fsr2l,f,c
   282   007D9E  0E00               	movlw	high setDel@tableauLi
   283   007DA0  22DA               	addwfc	fsr2h,f,c
   284   007DA2  50DF               	movf	indf2,w,c
   285   007DA4  6E81               	movwf	129,c	;volatile
   286   007DA6                     
   287                           ; BSR set to: 0
   288                           ;main.c: 136: PORTC = tableauCo[colonne];
   289   007DA6  90D8               	bcf	status,0,c
   290   007DA8  0100               	movlb	0	; force () banked
   291   007DAA  3562               	rlcf	setDel@colonne& (0+255),w,b
   292   007DAC  6ED9               	movwf	fsr2l,c
   293   007DAE  3563               	rlcf	(setDel@colonne+1)& (0+255),w,b
   294   007DB0  6EDA               	movwf	fsr2h,c
   295   007DB2  0E70               	movlw	low setDel@tableauCo
   296   007DB4  26D9               	addwf	fsr2l,f,c
   297   007DB6  0E00               	movlw	high setDel@tableauCo
   298   007DB8  22DA               	addwfc	fsr2h,f,c
   299   007DBA  50DF               	movf	indf2,w,c
   300   007DBC  6E82               	movwf	130,c	;volatile
   301   007DBE                     
   302                           ; BSR set to: 0
   303   007DBE  0012               	return		;funcret
   304   007DC0                     __end_of_setDel:
   305                           	callstack 0
   306                           
   307 ;; *************** function _initialisation *****************
   308 ;; Defined at:
   309 ;;		line 92 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         0       0       0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels used: 1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337   007CF0                     __ptext2:
   338                           	callstack 0
   339   007CF0                     _initialisation:
   340                           	callstack 30
   341   007CF0                     
   342                           ;main.c: 94: TRISB = 0;
   343   007CF0  0E00               	movlw	0
   344   007CF2  6E93               	movwf	147,c	;volatile
   345                           
   346                           ;main.c: 95: TRISC = 0;
   347   007CF4  0E00               	movlw	0
   348   007CF6  6E94               	movwf	148,c	;volatile
   349                           
   350                           ;main.c: 98: ANSELH = 0;
   351   007CF8  0E00               	movlw	0
   352   007CFA  6E7F               	movwf	127,c	;volatile
   353                           
   354                           ;main.c: 101: PORTB = 0;
   355   007CFC  0E00               	movlw	0
   356   007CFE  6E81               	movwf	129,c	;volatile
   357                           
   358                           ;main.c: 102: PORTC = 1;
   359   007D00  0E01               	movlw	1
   360   007D02  6E82               	movwf	130,c	;volatile
   361   007D04  0012               	return		;funcret
   362   007D06                     __end_of_initialisation:
   363                           	callstack 0
   364   000000                     
   365                           	psect	param0
   366   000000                     
   367                           	psect	idloc
   368                           
   369                           ;Config register IDLOC0 @ 0x200000
   370                           ;	unspecified, using default values
   371   200000                     	org	2097152
   372   200000  FF                 	db	255
   373                           
   374                           ;Config register IDLOC1 @ 0x200001
   375                           ;	unspecified, using default values
   376   200001                     	org	2097153
   377   200001  FF                 	db	255
   378                           
   379                           ;Config register IDLOC2 @ 0x200002
   380                           ;	unspecified, using default values
   381   200002                     	org	2097154
   382   200002  FF                 	db	255
   383                           
   384                           ;Config register IDLOC3 @ 0x200003
   385                           ;	unspecified, using default values
   386   200003                     	org	2097155
   387   200003  FF                 	db	255
   388                           
   389                           ;Config register IDLOC4 @ 0x200004
   390                           ;	unspecified, using default values
   391   200004                     	org	2097156
   392   200004  FF                 	db	255
   393                           
   394                           ;Config register IDLOC5 @ 0x200005
   395                           ;	unspecified, using default values
   396   200005                     	org	2097157
   397   200005  FF                 	db	255
   398                           
   399                           ;Config register IDLOC6 @ 0x200006
   400                           ;	unspecified, using default values
   401   200006                     	org	2097158
   402   200006  FF                 	db	255
   403                           
   404                           ;Config register IDLOC7 @ 0x200007
   405                           ;	unspecified, using default values
   406   200007                     	org	2097159
   407   200007  FF                 	db	255
   408                           
   409                           	psect	config
   410                           
   411                           ; Padding undefined space
   412   300000                     	org	3145728
   413   300000  FF                 	db	255
   414                           
   415                           ;Config register CONFIG1H @ 0x300001
   416                           ;	Oscillator Selection bits
   417                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   418                           ;	Fail-Safe Clock Monitor Enable bit
   419                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   420                           ;	Internal/External Oscillator Switchover bit
   421                           ;	IESO = OFF, Oscillator Switchover mode disabled
   422   300001                     	org	3145729
   423   300001  08                 	db	8
   424                           
   425                           ;Config register CONFIG2L @ 0x300002
   426                           ;	Power-up Timer Enable bit
   427                           ;	PWRTEN = OFF, PWRT disabled
   428                           ;	Brown-out Reset Enable bits
   429                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   430                           ;	Brown Out Reset Voltage bits
   431                           ;	BORV = 18, VBOR set to 1.8 V nominal
   432   300002                     	org	3145730
   433   300002  1F                 	db	31
   434                           
   435                           ;Config register CONFIG2H @ 0x300003
   436                           ;	Watchdog Timer Enable bit
   437                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   438                           ;	Watchdog Timer Postscale Select bits
   439                           ;	WDTPS = 32768, 1:32768
   440   300003                     	org	3145731
   441   300003  1E                 	db	30
   442                           
   443                           ; Padding undefined space
   444   300004                     	org	3145732
   445   300004  FF                 	db	255
   446                           
   447                           ;Config register CONFIG3H @ 0x300005
   448                           ;	CCP2 MUX bit
   449                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   450                           ;	PORTB A/D Enable bit
   451                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   452                           ;	Low-Power Timer1 Oscillator Enable bit
   453                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   454                           ;	HFINTOSC Fast Start-up
   455                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   456                           ;	MCLR Pin Enable bit
   457                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   458   300005                     	org	3145733
   459   300005  8B                 	db	139
   460                           
   461                           ;Config register CONFIG4L @ 0x300006
   462                           ;	Stack Full/Underflow Reset Enable bit
   463                           ;	STVREN = ON, Stack full/underflow will cause Reset
   464                           ;	Single-Supply ICSP Enable bit
   465                           ;	LVP = OFF, Single-Supply ICSP disabled
   466                           ;	Extended Instruction Set Enable bit
   467                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   468                           ;	Background Debugger Enable bit
   469                           ;	DEBUG = 0x1, unprogrammed default
   470   300006                     	org	3145734
   471   300006  81                 	db	129
   472                           
   473                           ; Padding undefined space
   474   300007                     	org	3145735
   475   300007  FF                 	db	255
   476                           
   477                           ;Config register CONFIG5L @ 0x300008
   478                           ;	Code Protection Block 0
   479                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   480                           ;	Code Protection Block 1
   481                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   482                           ;	Code Protection Block 2
   483                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   484                           ;	Code Protection Block 3
   485                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   486   300008                     	org	3145736
   487   300008  0F                 	db	15
   488                           
   489                           ;Config register CONFIG5H @ 0x300009
   490                           ;	Boot Block Code Protection bit
   491                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   492                           ;	Data EEPROM Code Protection bit
   493                           ;	CPD = OFF, Data EEPROM not code-protected
   494   300009                     	org	3145737
   495   300009  C0                 	db	192
   496                           
   497                           ;Config register CONFIG6L @ 0x30000A
   498                           ;	Write Protection Block 0
   499                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   500                           ;	Write Protection Block 1
   501                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   502                           ;	Write Protection Block 2
   503                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   504                           ;	Write Protection Block 3
   505                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   506   30000A                     	org	3145738
   507   30000A  0F                 	db	15
   508                           
   509                           ;Config register CONFIG6H @ 0x30000B
   510                           ;	Configuration Register Write Protection bit
   511                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   512                           ;	Boot Block Write Protection bit
   513                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   514                           ;	Data EEPROM Write Protection bit
   515                           ;	WRTD = OFF, Data EEPROM not write-protected
   516   30000B                     	org	3145739
   517   30000B  E0                 	db	224
   518                           
   519                           ;Config register CONFIG7L @ 0x30000C
   520                           ;	Table Read Protection Block 0
   521                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   522                           ;	Table Read Protection Block 1
   523                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   524                           ;	Table Read Protection Block 2
   525                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   526                           ;	Table Read Protection Block 3
   527                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   528   30000C                     	org	3145740
   529   30000C  0F                 	db	15
   530                           
   531                           ;Config register CONFIG7H @ 0x30000D
   532                           ;	Boot Block Table Read Protection bit
   533                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   534   30000D                     	org	3145741
   535   30000D  40                 	db	64
   536                           tosu	equ	0xFFF
   537                           tosh	equ	0xFFE
   538                           tosl	equ	0xFFD
   539                           stkptr	equ	0xFFC
   540                           pclatu	equ	0xFFB
   541                           pclath	equ	0xFFA
   542                           pcl	equ	0xFF9
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           prodh	equ	0xFF4
   548                           prodl	equ	0xFF3
   549                           indf0	equ	0xFEF
   550                           postinc0	equ	0xFEE
   551                           postdec0	equ	0xFED
   552                           preinc0	equ	0xFEC
   553                           plusw0	equ	0xFEB
   554                           fsr0h	equ	0xFEA
   555                           fsr0l	equ	0xFE9
   556                           wreg	equ	0xFE8
   557                           indf1	equ	0xFE7
   558                           postinc1	equ	0xFE6
   559                           postdec1	equ	0xFE5
   560                           preinc1	equ	0xFE4
   561                           plusw1	equ	0xFE3
   562                           fsr1h	equ	0xFE2
   563                           fsr1l	equ	0xFE1
   564                           bsr	equ	0xFE0
   565                           indf2	equ	0xFDF
   566                           postinc2	equ	0xFDE
   567                           postdec2	equ	0xFDD
   568                           preinc2	equ	0xFDC
   569                           plusw2	equ	0xFDB
   570                           fsr2h	equ	0xFDA
   571                           fsr2l	equ	0xFD9
   572                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     28      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_setDel

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     244
                     _initialisation
                             _setDel
 ---------------------------------------------------------------------------------
 (1) _setDel                                              28    24      4     244
                                              0 BANK0     28    24      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _setDel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1C      34       4       32.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRll         1E      0       0      26        0.0%
BITBIGSFR_1hh       1B      0       0      19        0.0%
BITBIGSFRlhh        10      0       0      24        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_1llh       C      0       0      21        0.0%
BITBIGSFR_1hl        7      0       0      20        0.0%
BITBIGSFRh           7      0       0      23        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhl         1      0       0      25        0.0%
BITBIGSFR_1lll       1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      27        0.0%
DATA                 0      0      34      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 04 12:10:33 2023

                     l21 7D3C                       l22 7D3C                       l34 7DBE  
                     l27 7D04                       u81 7D74                       u91 7D86  
                    l923 7D6A                      l931 7D22                      l925 7D8E  
                    l933 7D3A                      l927 7DA6                      l929 7D1E  
                    l869 7CF0                      wreg 0FE8                     _RCIF 7CF5  
       ??_initialisation 0060                     _main 7D1E                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ?_main 0060  
                  _ANSEL 0F7E                    _RCREG 0FAE                    _SPBRG 0FAF  
                  _PORTB 0F81                    _PORTC 0F82                    _TRISB 0F93  
                  _TRISC 0F94                    _TXREG 0FAD                    tablat 0FF5  
                  plusw1 0FE3                    plusw2 0FDB                    status 0FD8  
        __initialization 7D44             __end_of_main 7D44                   ??_main 007C  
          __activetblptr 0003            setDel@colonne 0062                   _ANSELH 0F7F  
                 _SPBRGH 0FB0                   _setDel 7D6A                   isa$std 0001  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7D64            ___rparam_used 0000  
            setDel@F2585 0088              setDel@F2587 007C             __pidataBANK0 7D06  
            setDel@ligne 0060                  ?_setDel 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7D44                  __ramtop 0600  
                __ptext0 7D1E                  __ptext1 7D6A                  __ptext2 7CF0  
   end_of_initialization 7D64                _RCSTAbits 0FAB                  postdec1 0FE5  
                postinc0 0FEE                _TRISCbits 0F94                _TXSTAbits 0FAC  
            _BAUDCONbits 0FB8           __end_of_setDel 7DC0      start_initialization 7D44  
            __pdataBANK0 007C                 ??_setDel 0064            __pcstackBANK0 0060  
        setDel@tableauCo 0070          setDel@tableauLi 0064           _initialisation 7CF0  
 __end_of_initialisation 7D06                copy_data0 7D58                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060                 isa$xinst 0000  
