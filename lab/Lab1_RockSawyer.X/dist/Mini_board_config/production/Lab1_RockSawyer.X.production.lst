

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 30 12:09:42 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 21/07/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _RCREG	set	4014
    53   000000                     _TXREG	set	4013
    54   000000                     _TRISCbits	set	3988
    55   000000                     _ANSEL	set	3966
    56   000000                     _ANSELH	set	3967
    57   000000                     _PORTBbits	set	3969
    58   000000                     _PORTD	set	3971
    59   000000                     _TRISB	set	3987
    60   000000                     _TRISD	set	3989
    61   000000                     _RCSTAbits	set	4011
    62   000000                     _TXSTAbits	set	4012
    63   000000                     _SPBRG	set	4015
    64   000000                     _SPBRGH	set	4016
    65   000000                     _RCIF	set	31989
    66   000000                     _BAUDCONbits	set	4024
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71   007E64                     __pcinit:
    72                           	callstack 0
    73   007E64                     start_initialization:
    74                           	callstack 0
    75   007E64                     __initialization:
    76                           	callstack 0
    77   007E64                     end_of_initialization:
    78                           	callstack 0
    79   007E64                     __end_of__initialization:
    80                           	callstack 0
    81   007E64  0100               	movlb	0
    82   007E66  EF70  F03F         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackBANK0
    85   000060                     __pcstackBANK0:
    86                           	callstack 0
    87   000060                     putch@car:
    88                           	callstack 0
    89   000060                     getch@c:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x0
    93   000060                     	ds	1
    94   000061                     ??_main:
    95                           
    96                           ; 1 bytes @ 0x1
    97   000061                     	ds	1
    98   000062                     main@car:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x2
   102   000062                     	ds	1
   103   000063                     main@sens:
   104                           	callstack 0
   105                           
   106                           ; 1 bytes @ 0x3
   107   000063                     	ds	1
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 24 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;  sens            1    3[BANK0 ] unsigned char 
   119 ;;  car             1    2[BANK0 ] unsigned char 
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2, status,0, cstack
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   129 ;;      Params:         0       0       0       0       0       0       0
   130 ;;      Locals:         0       2       0       0       0       0       0
   131 ;;      Temps:          0       1       0       0       0       0       0
   132 ;;      Totals:         0       3       0       0       0       0       0
   133 ;;Total ram usage:        3 bytes
   134 ;; Hardware stack levels required when called: 1
   135 ;; This function calls:
   136 ;;		_getch
   137 ;;		_init_serie
   138 ;;		_initialisation
   139 ;;		_kbhit
   140 ;;		_putch
   141 ;; This function is called by:
   142 ;;		Startup code after reset
   143 ;; This function uses a non-reentrant model
   144 ;;
   145                           
   146                           	psect	text0
   147   007EE0                     __ptext0:
   148                           	callstack 0
   149   007EE0                     _main:
   150                           	callstack 30
   151   007EE0                     
   152                           ;main.c: 26: initialisation();
   153   007EE0  EC35  F03F         	call	_initialisation	;wreg free
   154                           
   155                           ;main.c: 27: init_serie();
   156   007EE4  EC61  F03F         	call	_init_serie	;wreg free
   157   007EE8                     
   158                           ;main.c: 28: bool sens = 0;
   159   007EE8  0E00               	movlw	0
   160   007EEA  0100               	movlb	0	; force () banked
   161   007EEC  6F63               	movwf	main@sens& (0+255),b
   162   007EEE                     l921:
   163                           
   164                           ;main.c: 31: {;main.c: 33: putch('a');
   165   007EEE  0E61               	movlw	97
   166   007EF0  EC55  F03F         	call	_putch
   167   007EF4                     
   168                           ;main.c: 34: if (kbhit())
   169   007EF4  EC49  F03F         	call	_kbhit	;wreg free
   170   007EF8  0100               	movlb	0	; force () banked
   171   007EFA  A0D8               	btfss	status,0,c
   172   007EFC  EF82  F03F         	goto	u41
   173   007F00  EF84  F03F         	goto	u40
   174   007F04                     u41:
   175   007F04  EFA2  F03F         	goto	l935
   176   007F08                     u40:
   177   007F08                     
   178                           ; BSR set to: 0
   179                           ;main.c: 35: {;main.c: 36: car = getch();
   180   007F08  EC3D  F03F         	call	_getch	;wreg free
   181   007F0C  0100               	movlb	0	; force () banked
   182   007F0E  6F62               	movwf	main@car& (0+255),b
   183   007F10                     
   184                           ; BSR set to: 0
   185                           ;main.c: 38: if (car == 'd')
   186   007F10  0E64               	movlw	100
   187   007F12  0100               	movlb	0	; force () banked
   188   007F14  1962               	xorwf	main@car& (0+255),w,b
   189   007F16  A4D8               	btfss	status,2,c
   190   007F18  EF90  F03F         	goto	u51
   191   007F1C  EF92  F03F         	goto	u50
   192   007F20                     u51:
   193   007F20  EF95  F03F         	goto	l931
   194   007F24                     u50:
   195   007F24                     
   196                           ; BSR set to: 0
   197                           ;main.c: 39: {;main.c: 40: sens = 0;
   198   007F24  0E00               	movlw	0
   199   007F26  0100               	movlb	0	; force () banked
   200   007F28  6F63               	movwf	main@sens& (0+255),b
   201   007F2A                     l931:
   202                           
   203                           ; BSR set to: 0
   204                           ;main.c: 41: };main.c: 42: if (car == 'g')
   205   007F2A  0E67               	movlw	103
   206   007F2C  0100               	movlb	0	; force () banked
   207   007F2E  1962               	xorwf	main@car& (0+255),w,b
   208   007F30  A4D8               	btfss	status,2,c
   209   007F32  EF9D  F03F         	goto	u61
   210   007F36  EF9F  F03F         	goto	u60
   211   007F3A                     u61:
   212   007F3A  EFA2  F03F         	goto	l935
   213   007F3E                     u60:
   214   007F3E                     
   215                           ; BSR set to: 0
   216                           ;main.c: 43: {;main.c: 44: sens = 1;
   217   007F3E  0E01               	movlw	1
   218   007F40  0100               	movlb	0	; force () banked
   219   007F42  6F63               	movwf	main@sens& (0+255),b
   220   007F44                     l935:
   221                           
   222                           ; BSR set to: 0
   223                           ;main.c: 45: };main.c: 46: };main.c: 47: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   224   007F44  0E21               	movlw	33
   225   007F46  0100               	movlb	0	; force () banked
   226   007F48  6F61               	movwf	??_main& (0+255),b
   227   007F4A  0E76               	movlw	118
   228   007F4C                     u167:
   229   007F4C  2EE8               	decfsz	wreg,f,c
   230   007F4E  D7FE               	bra	u167
   231   007F50  2F61               	decfsz	??_main& (0+255),f,b
   232   007F52  D7FC               	bra	u167
   233   007F54  F000               	nop	
   234   007F56                     
   235                           ;main.c: 51: if(sens == 0)
   236   007F56  0100               	movlb	0	; force () banked
   237   007F58  5163               	movf	main@sens& (0+255),w,b
   238   007F5A  A4D8               	btfss	status,2,c
   239   007F5C  EFB2  F03F         	goto	u71
   240   007F60  EFB4  F03F         	goto	u70
   241   007F64                     u71:
   242   007F64  EFCC  F03F         	goto	l947
   243   007F68                     u70:
   244   007F68                     
   245                           ; BSR set to: 0
   246                           ;main.c: 52: {;main.c: 53: PORTD = PORTD << 1;
   247   007F68  5083               	movf	131,w,c	;volatile
   248   007F6A  2483               	addwf	131,w,c	;volatile
   249   007F6C  6E83               	movwf	131,c	;volatile
   250   007F6E                     
   251                           ; BSR set to: 0
   252                           ;main.c: 55: if (PORTD == 0)
   253   007F6E  5083               	movf	131,w,c	;volatile
   254   007F70  A4D8               	btfss	status,2,c
   255   007F72  EFBD  F03F         	goto	u81
   256   007F76  EFBF  F03F         	goto	u80
   257   007F7A                     u81:
   258   007F7A  EFC1  F03F         	goto	l945
   259   007F7E                     u80:
   260   007F7E                     
   261                           ; BSR set to: 0
   262                           ;main.c: 56: {;main.c: 57: PORTD = 1;
   263   007F7E  0E01               	movlw	1
   264   007F80  6E83               	movwf	131,c	;volatile
   265   007F82                     l945:
   266                           
   267                           ; BSR set to: 0
   268                           ;main.c: 58: };main.c: 59: _delay((unsigned long)((100)*(1000000/4000.0)));
   269   007F82  0E21               	movlw	33
   270   007F84  0100               	movlb	0	; force () banked
   271   007F86  6F61               	movwf	??_main& (0+255),b
   272   007F88  0E76               	movlw	118
   273   007F8A                     u177:
   274   007F8A  2EE8               	decfsz	wreg,f,c
   275   007F8C  D7FE               	bra	u177
   276   007F8E  2F61               	decfsz	??_main& (0+255),f,b
   277   007F90  D7FC               	bra	u177
   278   007F92  F000               	nop	
   279                           
   280                           ;main.c: 60: }
   281   007F94  EFE2  F03F         	goto	l955
   282   007F98                     l947:
   283                           
   284                           ; BSR set to: 0
   285                           ;main.c: 61: else;main.c: 62: {;main.c: 63: PORTD = PORTD >> 1;
   286   007F98  90D8               	bcf	status,0,c
   287   007F9A  3083               	rrcf	131,w,c	;volatile
   288   007F9C  6E83               	movwf	131,c	;volatile
   289   007F9E                     
   290                           ; BSR set to: 0
   291                           ;main.c: 64: if (PORTD == 0)
   292   007F9E  5083               	movf	131,w,c	;volatile
   293   007FA0  A4D8               	btfss	status,2,c
   294   007FA2  EFD5  F03F         	goto	u91
   295   007FA6  EFD7  F03F         	goto	u90
   296   007FAA                     u91:
   297   007FAA  EFD9  F03F         	goto	l953
   298   007FAE                     u90:
   299   007FAE                     
   300                           ; BSR set to: 0
   301                           ;main.c: 65: {;main.c: 66: PORTD = 128;
   302   007FAE  0E80               	movlw	128
   303   007FB0  6E83               	movwf	131,c	;volatile
   304   007FB2                     l953:
   305                           
   306                           ; BSR set to: 0
   307                           ;main.c: 67: };main.c: 68: _delay((unsigned long)((100)*(1000000/4000.0)));
   308   007FB2  0E21               	movlw	33
   309   007FB4  0100               	movlb	0	; force () banked
   310   007FB6  6F61               	movwf	??_main& (0+255),b
   311   007FB8  0E76               	movlw	118
   312   007FBA                     u187:
   313   007FBA  2EE8               	decfsz	wreg,f,c
   314   007FBC  D7FE               	bra	u187
   315   007FBE  2F61               	decfsz	??_main& (0+255),f,b
   316   007FC0  D7FC               	bra	u187
   317   007FC2  F000               	nop	
   318   007FC4                     l955:
   319                           
   320                           ;main.c: 69: };main.c: 70: if (PORTBbits.RB0 == 0)
   321   007FC4  B081               	btfsc	129,0,c	;volatile
   322   007FC6  EFE7  F03F         	goto	u101
   323   007FCA  EFE9  F03F         	goto	u100
   324   007FCE                     u101:
   325   007FCE  EF77  F03F         	goto	l921
   326   007FD2                     u100:
   327   007FD2                     l36:
   328   007FD2  A081               	btfss	129,0,c	;volatile
   329   007FD4  EFEE  F03F         	goto	u111
   330   007FD8  EFF0  F03F         	goto	u110
   331   007FDC                     u111:
   332   007FDC  EFE9  F03F         	goto	l36
   333   007FE0                     u110:
   334   007FE0                     
   335                           ;main.c: 73: sens = !sens;
   336   007FE0  0100               	movlb	0	; force () banked
   337   007FE2  5163               	movf	main@sens& (0+255),w,b
   338   007FE4  B4D8               	btfsc	status,2,c
   339   007FE6  EFF7  F03F         	goto	u121
   340   007FEA  EFFA  F03F         	goto	u120
   341   007FEE                     u121:
   342   007FEE  0E01               	movlw	1
   343   007FF0  EFFB  F03F         	goto	u130
   344   007FF4                     u120:
   345   007FF4  0E00               	movlw	0
   346   007FF6                     u130:
   347   007FF6  6F63               	movwf	main@sens& (0+255),b
   348   007FF8  EF77  F03F         	goto	l921
   349   007FFC  EF00  F000         	goto	start
   350   008000                     __end_of_main:
   351                           	callstack 0
   352                           
   353 ;; *************** function _putch *****************
   354 ;; Defined at:
   355 ;;		line 52 in file "serie.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;  car             1    wreg     unsigned char 
   358 ;; Auto vars:     Size  Location     Type
   359 ;;  car             1    0[BANK0 ] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   369 ;;      Params:         0       0       0       0       0       0       0
   370 ;;      Locals:         0       1       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0
   372 ;;      Totals:         0       1       0       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text1
   383   007EAA                     __ptext1:
   384                           	callstack 0
   385   007EAA                     _putch:
   386                           	callstack 30
   387                           
   388                           ; BSR set to: 0
   389                           ;incstack = 0
   390                           ;putch@car stored from wreg
   391   007EAA  0100               	movlb	0	; force () banked
   392   007EAC  6F60               	movwf	putch@car& (0+255),b
   393   007EAE                     l70:
   394   007EAE  A2AC               	btfss	172,1,c	;volatile
   395   007EB0  EF5C  F03F         	goto	u11
   396   007EB4  EF5E  F03F         	goto	u10
   397   007EB8                     u11:
   398   007EB8  EF57  F03F         	goto	l70
   399   007EBC                     u10:
   400   007EBC                     
   401                           ;serie.c: 57: TXREG = car;
   402   007EBC  C060  FFAD         	movff	putch@car,4013	;volatile
   403   007EC0  0012               	return		;funcret
   404   007EC2                     __end_of_putch:
   405                           	callstack 0
   406                           
   407 ;; *************** function _kbhit *****************
   408 ;; Defined at:
   409 ;;		line 100 in file "serie.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;		None               void
   416 ;; Registers used:
   417 ;;		status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	text2
   437   007E92                     __ptext2:
   438                           	callstack 0
   439   007E92                     _kbhit:
   440                           	callstack 30
   441   007E92                     
   442                           ;serie.c: 102: return RCIF;
   443   007E92  BA9E               	btfsc	158,5,c	;volatile
   444   007E94  EF4E  F03F         	goto	u21
   445   007E98  EF50  F03F         	goto	u20
   446   007E9C                     u21:
   447   007E9C  EF53  F03F         	goto	l907
   448   007EA0                     u20:
   449   007EA0  90D8               	bcf	status,0,c
   450   007EA2  EF54  F03F         	goto	l91
   451   007EA6                     l907:
   452   007EA6  80D8               	bsf	status,0,c
   453   007EA8                     l91:
   454   007EA8  0012               	return		;funcret
   455   007EAA                     __end_of_kbhit:
   456                           	callstack 0
   457                           
   458 ;; *************** function _initialisation *****************
   459 ;; Defined at:
   460 ;;		line 87 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         0       0       0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text3
   488   007E6A                     __ptext3:
   489                           	callstack 0
   490   007E6A                     _initialisation:
   491                           	callstack 30
   492   007E6A                     
   493                           ;main.c: 89: TRISD = 0;
   494   007E6A  0E00               	movlw	0
   495   007E6C  6E95               	movwf	149,c	;volatile
   496                           
   497                           ;main.c: 91: ANSELH = 0;
   498   007E6E  0E00               	movlw	0
   499   007E70  6E7F               	movwf	127,c	;volatile
   500   007E72                     
   501                           ;main.c: 92: TRISB = 0xFF;
   502   007E72  6893               	setf	147,c	;volatile
   503                           
   504                           ;main.c: 94: PORTD = 1;
   505   007E74  0E01               	movlw	1
   506   007E76  6E83               	movwf	131,c	;volatile
   507   007E78  0012               	return		;funcret
   508   007E7A                     __end_of_initialisation:
   509                           	callstack 0
   510                           
   511 ;; *************** function _init_serie *****************
   512 ;; Defined at:
   513 ;;		line 24 in file "serie.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   527 ;;      Params:         0       0       0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text4
   541   007EC2                     __ptext4:
   542                           	callstack 0
   543   007EC2                     _init_serie:
   544                           	callstack 30
   545   007EC2                     
   546                           ;serie.c: 27: TRISCbits.TRISC7=1;
   547   007EC2  8E94               	bsf	148,7,c	;volatile
   548                           
   549                           ;serie.c: 28: TRISCbits.TRISC6=1;
   550   007EC4  8C94               	bsf	148,6,c	;volatile
   551   007EC6                     
   552                           ;serie.c: 32: SPBRGH=0x00;
   553   007EC6  0E00               	movlw	0
   554   007EC8  6EB0               	movwf	176,c	;volatile
   555                           
   556                           ;serie.c: 33: SPBRG=25;
   557   007ECA  0E19               	movlw	25
   558   007ECC  6EAF               	movwf	175,c	;volatile
   559   007ECE                     
   560                           ;serie.c: 34: BAUDCONbits.BRG16=1;
   561   007ECE  86B8               	bsf	184,3,c	;volatile
   562   007ED0                     
   563                           ;serie.c: 35: TXSTAbits.BRGH=1;
   564   007ED0  84AC               	bsf	172,2,c	;volatile
   565   007ED2                     
   566                           ;serie.c: 38: TXSTAbits.SYNC=0;
   567   007ED2  98AC               	bcf	172,4,c	;volatile
   568   007ED4                     
   569                           ;serie.c: 39: TXSTAbits.TXEN=1;
   570   007ED4  8AAC               	bsf	172,5,c	;volatile
   571   007ED6                     
   572                           ;serie.c: 40: RCSTAbits.CREN = 1;
   573   007ED6  88AB               	bsf	171,4,c	;volatile
   574   007ED8                     
   575                           ;serie.c: 41: RCSTAbits.SPEN=1;
   576   007ED8  8EAB               	bsf	171,7,c	;volatile
   577                           
   578                           ;serie.c: 42: ANSEL = 0;
   579   007EDA  0E00               	movlw	0
   580   007EDC  6E7E               	movwf	126,c	;volatile
   581   007EDE  0012               	return		;funcret
   582   007EE0                     __end_of_init_serie:
   583                           	callstack 0
   584                           
   585 ;; *************** function _getch *****************
   586 ;; Defined at:
   587 ;;		line 66 in file "serie.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  c               1    0[BANK0 ] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      unsigned char 
   594 ;; Registers used:
   595 ;;		wreg, status,2
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         0       1       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         0       1       0       0       0       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text5
   615   007E7A                     __ptext5:
   616                           	callstack 0
   617   007E7A                     _getch:
   618                           	callstack 30
   619   007E7A                     l76:
   620   007E7A  AA9E               	btfss	158,5,c	;volatile
   621   007E7C  EF42  F03F         	goto	u31
   622   007E80  EF44  F03F         	goto	u30
   623   007E84                     u31:
   624   007E84  EF3D  F03F         	goto	l76
   625   007E88                     u30:
   626   007E88                     
   627                           ;serie.c: 72: c = RCREG;
   628   007E88  CFAE F060          	movff	4014,getch@c	;volatile
   629   007E8C                     
   630                           ;serie.c: 74: return c;
   631   007E8C  0100               	movlb	0	; force () banked
   632   007E8E  5160               	movf	getch@c& (0+255),w,b
   633   007E90                     
   634                           ; BSR set to: 0
   635   007E90  0012               	return		;funcret
   636   007E92                     __end_of_getch:
   637                           	callstack 0
   638   000000                     
   639                           	psect	param0
   640   000000                     
   641                           	psect	idloc
   642                           
   643                           ;Config register IDLOC0 @ 0x200000
   644                           ;	unspecified, using default values
   645   200000                     	org	2097152
   646   200000  FF                 	db	255
   647                           
   648                           ;Config register IDLOC1 @ 0x200001
   649                           ;	unspecified, using default values
   650   200001                     	org	2097153
   651   200001  FF                 	db	255
   652                           
   653                           ;Config register IDLOC2 @ 0x200002
   654                           ;	unspecified, using default values
   655   200002                     	org	2097154
   656   200002  FF                 	db	255
   657                           
   658                           ;Config register IDLOC3 @ 0x200003
   659                           ;	unspecified, using default values
   660   200003                     	org	2097155
   661   200003  FF                 	db	255
   662                           
   663                           ;Config register IDLOC4 @ 0x200004
   664                           ;	unspecified, using default values
   665   200004                     	org	2097156
   666   200004  FF                 	db	255
   667                           
   668                           ;Config register IDLOC5 @ 0x200005
   669                           ;	unspecified, using default values
   670   200005                     	org	2097157
   671   200005  FF                 	db	255
   672                           
   673                           ;Config register IDLOC6 @ 0x200006
   674                           ;	unspecified, using default values
   675   200006                     	org	2097158
   676   200006  FF                 	db	255
   677                           
   678                           ;Config register IDLOC7 @ 0x200007
   679                           ;	unspecified, using default values
   680   200007                     	org	2097159
   681   200007  FF                 	db	255
   682                           
   683                           	psect	config
   684                           
   685                           ; Padding undefined space
   686   300000                     	org	3145728
   687   300000  FF                 	db	255
   688                           
   689                           ;Config register CONFIG1H @ 0x300001
   690                           ;	Oscillator Selection bits
   691                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   692                           ;	Fail-Safe Clock Monitor Enable bit
   693                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   694                           ;	Internal/External Oscillator Switchover bit
   695                           ;	IESO = OFF, Oscillator Switchover mode disabled
   696   300001                     	org	3145729
   697   300001  08                 	db	8
   698                           
   699                           ;Config register CONFIG2L @ 0x300002
   700                           ;	Power-up Timer Enable bit
   701                           ;	PWRTEN = OFF, PWRT disabled
   702                           ;	Brown-out Reset Enable bits
   703                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   704                           ;	Brown Out Reset Voltage bits
   705                           ;	BORV = 18, VBOR set to 1.8 V nominal
   706   300002                     	org	3145730
   707   300002  1F                 	db	31
   708                           
   709                           ;Config register CONFIG2H @ 0x300003
   710                           ;	Watchdog Timer Enable bit
   711                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   712                           ;	Watchdog Timer Postscale Select bits
   713                           ;	WDTPS = 32768, 1:32768
   714   300003                     	org	3145731
   715   300003  1E                 	db	30
   716                           
   717                           ; Padding undefined space
   718   300004                     	org	3145732
   719   300004  FF                 	db	255
   720                           
   721                           ;Config register CONFIG3H @ 0x300005
   722                           ;	CCP2 MUX bit
   723                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   724                           ;	PORTB A/D Enable bit
   725                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   726                           ;	Low-Power Timer1 Oscillator Enable bit
   727                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   728                           ;	HFINTOSC Fast Start-up
   729                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   730                           ;	MCLR Pin Enable bit
   731                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   732   300005                     	org	3145733
   733   300005  8B                 	db	139
   734                           
   735                           ;Config register CONFIG4L @ 0x300006
   736                           ;	Stack Full/Underflow Reset Enable bit
   737                           ;	STVREN = ON, Stack full/underflow will cause Reset
   738                           ;	Single-Supply ICSP Enable bit
   739                           ;	LVP = OFF, Single-Supply ICSP disabled
   740                           ;	Extended Instruction Set Enable bit
   741                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   742                           ;	Background Debugger Enable bit
   743                           ;	DEBUG = 0x1, unprogrammed default
   744   300006                     	org	3145734
   745   300006  81                 	db	129
   746                           
   747                           ; Padding undefined space
   748   300007                     	org	3145735
   749   300007  FF                 	db	255
   750                           
   751                           ;Config register CONFIG5L @ 0x300008
   752                           ;	Code Protection Block 0
   753                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   754                           ;	Code Protection Block 1
   755                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   756                           ;	Code Protection Block 2
   757                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   758                           ;	Code Protection Block 3
   759                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   760   300008                     	org	3145736
   761   300008  0F                 	db	15
   762                           
   763                           ;Config register CONFIG5H @ 0x300009
   764                           ;	Boot Block Code Protection bit
   765                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   766                           ;	Data EEPROM Code Protection bit
   767                           ;	CPD = OFF, Data EEPROM not code-protected
   768   300009                     	org	3145737
   769   300009  C0                 	db	192
   770                           
   771                           ;Config register CONFIG6L @ 0x30000A
   772                           ;	Write Protection Block 0
   773                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   774                           ;	Write Protection Block 1
   775                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   776                           ;	Write Protection Block 2
   777                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   778                           ;	Write Protection Block 3
   779                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   780   30000A                     	org	3145738
   781   30000A  0F                 	db	15
   782                           
   783                           ;Config register CONFIG6H @ 0x30000B
   784                           ;	Configuration Register Write Protection bit
   785                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   786                           ;	Boot Block Write Protection bit
   787                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   788                           ;	Data EEPROM Write Protection bit
   789                           ;	WRTD = OFF, Data EEPROM not write-protected
   790   30000B                     	org	3145739
   791   30000B  E0                 	db	224
   792                           
   793                           ;Config register CONFIG7L @ 0x30000C
   794                           ;	Table Read Protection Block 0
   795                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   796                           ;	Table Read Protection Block 1
   797                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   798                           ;	Table Read Protection Block 2
   799                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   800                           ;	Table Read Protection Block 3
   801                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   802   30000C                     	org	3145740
   803   30000C  0F                 	db	15
   804                           
   805                           ;Config register CONFIG7H @ 0x30000D
   806                           ;	Boot Block Table Read Protection bit
   807                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   808   30000D                     	org	3145741
   809   30000D  40                 	db	64
   810                           tosu	equ	0xFFF
   811                           tosh	equ	0xFFE
   812                           tosl	equ	0xFFD
   813                           stkptr	equ	0xFFC
   814                           pclatu	equ	0xFFB
   815                           pclath	equ	0xFFA
   816                           pcl	equ	0xFF9
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           prodh	equ	0xFF4
   822                           prodl	equ	0xFF3
   823                           indf0	equ	0xFEF
   824                           postinc0	equ	0xFEE
   825                           postdec0	equ	0xFED
   826                           preinc0	equ	0xFEC
   827                           plusw0	equ	0xFEB
   828                           fsr0h	equ	0xFEA
   829                           fsr0l	equ	0xFE9
   830                           wreg	equ	0xFE8
   831                           indf1	equ	0xFE7
   832                           postinc1	equ	0xFE6
   833                           postdec1	equ	0xFE5
   834                           preinc1	equ	0xFE4
   835                           plusw1	equ	0xFE3
   836                           fsr1h	equ	0xFE2
   837                           fsr1l	equ	0xFE1
   838                           bsr	equ	0xFE0
   839                           indf2	equ	0xFDF
   840                           postinc2	equ	0xFDE
   841                           postdec2	equ	0xFDD
   842                           preinc2	equ	0xFDC
   843                           plusw2	equ	0xFDB
   844                           fsr2h	equ	0xFDA
   845                           fsr2l	equ	0xFD9
   846                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_getch
    _main->_putch

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      90
                                              1 BANK0      3     3      0
                              _getch
                         _init_serie
                     _initialisation
                              _kbhit
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      15
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _kbhit                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                1     1      0      15
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getch
   _init_serie
   _initialisation
   _kbhit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhhh       47      0       0      16        0.0%
BITBIGSFRhhhl        7      0       0      17        0.0%
BITBIGSFRhhllh       C      0       0      18        0.0%
BITBIGSFRhhlll       8      0       0      19        0.0%
BITBIGSFRhll         F      0       0      20        0.0%
BITBIGSFRlh          1      0       0      21        0.0%
BITBIGSFRllh         1      0       0      22        0.0%
BITBIGSFRlll        1E      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             5FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 30 12:09:42 2023

                     l44 7E78                       l36 7FD2                       l70 7EAE  
                     l73 7EC0                       l67 7EDE                       l91 7EA8  
                     l76 7E7A                       l78 7E88                       l79 7E90  
                     u10 7EBC                       u11 7EB8                       u20 7EA0  
                     u21 7E9C                       u30 7E88                       u31 7E84  
                     u40 7F08                       u41 7F04                       u50 7F24  
                     u51 7F20                       u60 7F3E                       u61 7F3A  
                     u70 7F68                       u71 7F64                       u80 7F7E  
                     u81 7F7A                       u90 7FAE                       u91 7FAA  
                    l901 7EBC                      l911 7E7A                      l903 7E92  
                    l913 7E8C                      l905 7EA0                      l921 7EEE  
                    l907 7EA6                      l931 7F2A                      l923 7EF4  
                    l941 7F6E                      l933 7F3E                      l925 7F08  
                    l917 7EE0                      l951 7FAE                      l943 7F7E  
                    l927 7F10                      l935 7F44                      l919 7EE8  
                    l881 7E72                      l953 7FB2                      l945 7F82  
                    l937 7F56                      l929 7F24                      l891 7ED2  
                    l883 7EC2                      l955 7FC4                      l939 7F68  
                    l947 7F98                      l893 7ED4                      l885 7EC6  
                    l949 7F9E                      l895 7ED6                      l887 7ECE  
                    l879 7E6A                      l959 7FE0                      l897 7ED8  
                    l889 7ED0                      l899 7EAE                      u100 7FD2  
                    u101 7FCE                      u110 7FE0                      u111 7FDC  
                    u120 7FF4                      u121 7FEE                      u130 7FF6  
                    u167 7F4C                      u177 7F8A                      u187 7FBA  
                    wreg 0FE8                     _RCIF 7CF5         ??_initialisation 0060  
                   _main 7EE0                     start 0000             ___param_bank 0000  
                  ?_main 0060                    _ANSEL 0F7E                    _RCREG 0FAE  
                  _SPBRG 0FAF                    _PORTD 0F83                    _TRISB 0F93  
                  _TRISD 0F95                    _TXREG 0FAD                    _getch 7E7A  
                  _kbhit 7E92                    _putch 7EAA                    status 0FD8  
        __initialization 7E64             __end_of_main 8000                   ??_main 0061  
          __activetblptr 0003                   ?_getch 0060                   ?_kbhit 0060  
                 ?_putch 0060                   _ANSELH 0F7F                   _SPBRGH 0FB0  
                 isa$std 0001                   getch@c 0060               __accesstop 0060  
__end_of__initialization 7E64            ___rparam_used 0000            __end_of_getch 7E92  
          __end_of_kbhit 7EAA            __end_of_putch 7EC2                  ??_getch 0060  
                ??_kbhit 0060                  ??_putch 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E64               _init_serie 7EC2  
                __ramtop 0600                  __ptext0 7EE0                  __ptext1 7EAA  
                __ptext2 7E92                  __ptext3 7E6A                  __ptext4 7EC2  
                __ptext5 7E7A                  main@car 0062     end_of_initialization 7E64  
              _RCSTAbits 0FAB                _PORTBbits 0F81                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8              ?_init_serie 0060  
    start_initialization 7E64            __pcstackBANK0 0060           _initialisation 7E6A  
 __end_of_initialisation 7E7A                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060             ??_init_serie 0060       __end_of_init_serie 7EE0  
               isa$xinst 0000                 main@sens 0063                 putch@car 0060  
