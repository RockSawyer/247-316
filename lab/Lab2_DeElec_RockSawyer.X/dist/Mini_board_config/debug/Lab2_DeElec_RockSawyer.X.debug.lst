

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 17 14:09:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/07/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataBANK0
    53   007C36                     __pidataBANK0:
    54                           	callstack 0
    55                           
    56                           ;initializer for afficheDe@F2589
    57   007C36  0007               	dw	7
    58   007C38  000B               	dw	11
    59   007C3A  0003               	dw	3
    60   007C3C  000A               	dw	10
    61   007C3E  0002               	dw	2
    62   007C40  0008               	dw	8
    63   000000                     _RCREG	set	4014
    64   000000                     _TXREG	set	4013
    65   000000                     _TRISCbits	set	3988
    66   000000                     _PORTDbits	set	3971
    67   000000                     _ANSEL	set	3966
    68   000000                     _ANSELH	set	3967
    69   000000                     _TRISC	set	3988
    70   000000                     _TRISD	set	3989
    71   000000                     _RCSTAbits	set	4011
    72   000000                     _TXSTAbits	set	4012
    73   000000                     _SPBRG	set	4015
    74   000000                     _SPBRGH	set	4016
    75   000000                     _RCIF	set	31989
    76   000000                     _PORTC	set	3970
    77   000000                     _PORTD	set	3971
    78   000000                     _TRISB	set	3987
    79   000000                     _BAUDCONbits	set	4024
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   007C56                     __pcinit:
    85                           	callstack 0
    86   007C56                     start_initialization:
    87                           	callstack 0
    88   007C56                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Initialize objects allocated to BANK0 (12 bytes)
    92                           ; load TBLPTR registers with __pidataBANK0
    93   007C56  0E36               	movlw	low __pidataBANK0
    94   007C58  6EF6               	movwf	tblptrl,c
    95   007C5A  0E7C               	movlw	high __pidataBANK0
    96   007C5C  6EF7               	movwf	tblptrh,c
    97   007C5E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
    98   007C60  6EF8               	movwf	tblptru,c
    99   007C62  EE00  F075         	lfsr	0,__pdataBANK0
   100   007C66  EE10 F00C          	lfsr	1,12
   101   007C6A                     copy_data0:
   102   007C6A  0009               	tblrd		*+
   103   007C6C  CFF5 FFEE          	movff	tablat,postinc0
   104   007C70  50E5               	movf	postdec1,w,c
   105   007C72  50E1               	movf	fsr1l,w,c
   106   007C74  E1FA               	bnz	copy_data0
   107   007C76                     end_of_initialization:
   108                           	callstack 0
   109   007C76                     __end_of__initialization:
   110                           	callstack 0
   111   007C76  0100               	movlb	0
   112   007C78  EF5A  F03E         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	dataBANK0
   115   000075                     __pdataBANK0:
   116                           	callstack 0
   117   000075                     afficheDe@F2589:
   118                           	callstack 0
   119   000075                     	ds	12
   120                           
   121                           	psect	cstackBANK0
   122   000060                     __pcstackBANK0:
   123                           	callstack 0
   124   000060                     afficheDe@chiffre:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128   000060                     	ds	2
   129   000062                     afficheDe@deGouD:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133   000062                     	ds	2
   134   000064                     afficheDe@tableauDe:
   135                           	callstack 0
   136                           
   137                           ; 12 bytes @ 0x4
   138   000064                     	ds	12
   139   000070                     ??_main:
   140                           
   141                           ; 1 bytes @ 0x10
   142   000070                     	ds	1
   143   000071                     main@i:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x11
   147   000071                     	ds	2
   148   000073                     main@j:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x13
   152   000073                     	ds	2
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 33 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  j               2   19[BANK0 ] int 
   164 ;;  i               2   17[BANK0 ] int 
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   174 ;;      Params:         0       0       0       0       0       0       0
   175 ;;      Locals:         0       4       0       0       0       0       0
   176 ;;      Temps:          0       1       0       0       0       0       0
   177 ;;      Totals:         0       5       0       0       0       0       0
   178 ;;Total ram usage:        5 bytes
   179 ;; Hardware stack levels required when called: 1
   180 ;; This function calls:
   181 ;;		_afficheDe
   182 ;;		_initialisation
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189   007CB4                     __ptext0:
   190                           	callstack 0
   191   007CB4                     _main:
   192                           	callstack 30
   193   007CB4                     
   194                           ;main.c: 35: initialisation();
   195   007CB4  EC21  F03E         	call	_initialisation	;wreg free
   196   007CB8                     l967:
   197                           
   198                           ;main.c: 40: {;main.c: 42: int i = 0;
   199   007CB8  0E00               	movlw	0
   200   007CBA  0100               	movlb	0	; force () banked
   201   007CBC  6F72               	movwf	(main@i+1)& (0+255),b
   202   007CBE  0E00               	movlw	0
   203   007CC0  6F71               	movwf	main@i& (0+255),b
   204   007CC2                     
   205                           ; BSR set to: 0
   206                           ;main.c: 43: int j = 0;
   207   007CC2  0E00               	movlw	0
   208   007CC4  0100               	movlb	0	; force () banked
   209   007CC6  6F74               	movwf	(main@j+1)& (0+255),b
   210   007CC8  0E00               	movlw	0
   211   007CCA  6F73               	movwf	main@j& (0+255),b
   212   007CCC                     
   213                           ; BSR set to: 0
   214                           ;main.c: 44: for(i=0; i<6 ;i++)
   215   007CCC  0E00               	movlw	0
   216   007CCE  0100               	movlb	0	; force () banked
   217   007CD0  6F72               	movwf	(main@i+1)& (0+255),b
   218   007CD2  0E00               	movlw	0
   219   007CD4  6F71               	movwf	main@i& (0+255),b
   220   007CD6                     
   221                           ; BSR set to: 0
   222   007CD6  0100               	movlb	0	; force () banked
   223   007CD8  BF72               	btfsc	(main@i+1)& (0+255),7,b
   224   007CDA  EF78  F03E         	goto	u141
   225   007CDE  5172               	movf	(main@i+1)& (0+255),w,b
   226   007CE0  E109               	bnz	u140
   227   007CE2  0E06               	movlw	6
   228   007CE4  5D71               	subwf	main@i& (0+255),w,b
   229   007CE6  A0D8               	btfss	status,0,c
   230   007CE8  EF78  F03E         	goto	u141
   231   007CEC  EF7A  F03E         	goto	u140
   232   007CF0                     u141:
   233   007CF0  EF7C  F03E         	goto	l977
   234   007CF4                     u140:
   235   007CF4  EFA1  F03E         	goto	l985
   236   007CF8                     l977:
   237                           
   238                           ; BSR set to: 0
   239                           ;main.c: 45: {;main.c: 47: afficheDe(i, 1);
   240   007CF8  C071  F060         	movff	main@i,afficheDe@chiffre
   241   007CFC  C072  F061         	movff	main@i+1,afficheDe@chiffre+1
   242   007D00  0E00               	movlw	0
   243   007D02  0100               	movlb	0	; force () banked
   244   007D04  6F63               	movwf	(afficheDe@deGouD+1)& (0+255),b
   245   007D06  0E01               	movlw	1
   246   007D08  6F62               	movwf	afficheDe@deGouD& (0+255),b
   247   007D0A  EC3E  F03E         	call	_afficheDe	;wreg free
   248   007D0E                     
   249                           ;main.c: 48: _delay((unsigned long)((500)*(1000000/4000.0)));
   250   007D0E  0EA3               	movlw	163
   251   007D10  0100               	movlb	0	; force () banked
   252   007D12  6F70               	movwf	??_main& (0+255),b
   253   007D14  0E55               	movlw	85
   254   007D16                     u187:
   255   007D16  2EE8               	decfsz	wreg,f,c
   256   007D18  D7FE               	bra	u187
   257   007D1A  2F70               	decfsz	??_main& (0+255),f,b
   258   007D1C  D7FC               	bra	u187
   259   007D1E  0100               	movlb	0	; force () banked
   260   007D20  4B71               	infsnz	main@i& (0+255),f,b
   261   007D22  2B72               	incf	(main@i+1)& (0+255),f,b
   262   007D24                     
   263                           ; BSR set to: 0
   264   007D24  0100               	movlb	0	; force () banked
   265   007D26  BF72               	btfsc	(main@i+1)& (0+255),7,b
   266   007D28  EF9F  F03E         	goto	u151
   267   007D2C  5172               	movf	(main@i+1)& (0+255),w,b
   268   007D2E  E109               	bnz	u150
   269   007D30  0E06               	movlw	6
   270   007D32  5D71               	subwf	main@i& (0+255),w,b
   271   007D34  A0D8               	btfss	status,0,c
   272   007D36  EF9F  F03E         	goto	u151
   273   007D3A  EFA1  F03E         	goto	u150
   274   007D3E                     u151:
   275   007D3E  EF7C  F03E         	goto	l977
   276   007D42                     u150:
   277   007D42                     l985:
   278                           
   279                           ; BSR set to: 0
   280                           ;main.c: 50: };main.c: 51: for(j=0; j<6; j++)
   281   007D42  0E00               	movlw	0
   282   007D44  0100               	movlb	0	; force () banked
   283   007D46  6F74               	movwf	(main@j+1)& (0+255),b
   284   007D48  0E00               	movlw	0
   285   007D4A  6F73               	movwf	main@j& (0+255),b
   286   007D4C                     
   287                           ; BSR set to: 0
   288   007D4C  0100               	movlb	0	; force () banked
   289   007D4E  BF74               	btfsc	(main@j+1)& (0+255),7,b
   290   007D50  EFB3  F03E         	goto	u161
   291   007D54  5174               	movf	(main@j+1)& (0+255),w,b
   292   007D56  E109               	bnz	u160
   293   007D58  0E06               	movlw	6
   294   007D5A  5D73               	subwf	main@j& (0+255),w,b
   295   007D5C  A0D8               	btfss	status,0,c
   296   007D5E  EFB3  F03E         	goto	u161
   297   007D62  EFB5  F03E         	goto	u160
   298   007D66                     u161:
   299   007D66  EFB7  F03E         	goto	l991
   300   007D6A                     u160:
   301   007D6A  EF5C  F03E         	goto	l967
   302   007D6E                     l991:
   303                           
   304                           ; BSR set to: 0
   305                           ;main.c: 52: {;main.c: 53: afficheDe(j, 0);
   306   007D6E  C073  F060         	movff	main@j,afficheDe@chiffre
   307   007D72  C074  F061         	movff	main@j+1,afficheDe@chiffre+1
   308   007D76  0E00               	movlw	0
   309   007D78  0100               	movlb	0	; force () banked
   310   007D7A  6F63               	movwf	(afficheDe@deGouD+1)& (0+255),b
   311   007D7C  0E00               	movlw	0
   312   007D7E  6F62               	movwf	afficheDe@deGouD& (0+255),b
   313   007D80  EC3E  F03E         	call	_afficheDe	;wreg free
   314   007D84                     
   315                           ;main.c: 54: _delay((unsigned long)((500)*(1000000/4000.0)));
   316   007D84  0EA3               	movlw	163
   317   007D86  0100               	movlb	0	; force () banked
   318   007D88  6F70               	movwf	??_main& (0+255),b
   319   007D8A  0E55               	movlw	85
   320   007D8C                     u197:
   321   007D8C  2EE8               	decfsz	wreg,f,c
   322   007D8E  D7FE               	bra	u197
   323   007D90  2F70               	decfsz	??_main& (0+255),f,b
   324   007D92  D7FC               	bra	u197
   325   007D94  0100               	movlb	0	; force () banked
   326   007D96  4B73               	infsnz	main@j& (0+255),f,b
   327   007D98  2B74               	incf	(main@j+1)& (0+255),f,b
   328   007D9A                     
   329                           ; BSR set to: 0
   330   007D9A  0100               	movlb	0	; force () banked
   331   007D9C  BF74               	btfsc	(main@j+1)& (0+255),7,b
   332   007D9E  EFDA  F03E         	goto	u171
   333   007DA2  5174               	movf	(main@j+1)& (0+255),w,b
   334   007DA4  E109               	bnz	u170
   335   007DA6  0E06               	movlw	6
   336   007DA8  5D73               	subwf	main@j& (0+255),w,b
   337   007DAA  A0D8               	btfss	status,0,c
   338   007DAC  EFDA  F03E         	goto	u171
   339   007DB0  EFDC  F03E         	goto	u170
   340   007DB4                     u171:
   341   007DB4  EFB7  F03E         	goto	l991
   342   007DB8                     u170:
   343   007DB8  EF5C  F03E         	goto	l967
   344   007DBC  EF00  F000         	goto	start
   345   007DC0                     __end_of_main:
   346                           	callstack 0
   347                           
   348 ;; *************** function _initialisation *****************
   349 ;; Defined at:
   350 ;;		line 71 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   364 ;;      Params:         0       0       0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text1
   378   007C42                     __ptext1:
   379                           	callstack 0
   380   007C42                     _initialisation:
   381                           	callstack 30
   382   007C42                     
   383                           ;main.c: 73: TRISD = 0;
   384   007C42  0E00               	movlw	0
   385   007C44  6E95               	movwf	149,c	;volatile
   386                           
   387                           ;main.c: 74: TRISC = 0;
   388   007C46  0E00               	movlw	0
   389   007C48  6E94               	movwf	148,c	;volatile
   390                           
   391                           ;main.c: 77: ANSELH = 0;
   392   007C4A  0E00               	movlw	0
   393   007C4C  6E7F               	movwf	127,c	;volatile
   394   007C4E                     
   395                           ;main.c: 78: TRISB = 0xFF;
   396   007C4E  6893               	setf	147,c	;volatile
   397                           
   398                           ;main.c: 80: PORTD = 0;
   399   007C50  0E00               	movlw	0
   400   007C52  6E83               	movwf	131,c	;volatile
   401   007C54  0012               	return		;funcret
   402   007C56                     __end_of_initialisation:
   403                           	callstack 0
   404                           
   405 ;; *************** function _afficheDe *****************
   406 ;; Defined at:
   407 ;;		line 89 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  chiffre         2    0[BANK0 ] int 
   410 ;;  deGouD          2    2[BANK0 ] int 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  tableauDe      12    4[BANK0 ] int [6]
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   422 ;;      Params:         0       4       0       0       0       0       0
   423 ;;      Locals:         0      12       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0
   425 ;;      Totals:         0      16       0       0       0       0       0
   426 ;;Total ram usage:       16 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text2
   436   007C7C                     __ptext2:
   437                           	callstack 0
   438   007C7C                     _afficheDe:
   439                           	callstack 30
   440   007C7C                     
   441                           ;main.c: 91: int tableauDe[6] = {7,11,3,10,2,8};
   442   007C7C  EE20  F075         	lfsr	2,afficheDe@F2589
   443   007C80  EE10  F064         	lfsr	1,afficheDe@tableauDe
   444   007C84  0E0B               	movlw	11
   445   007C86                     u121:
   446   007C86  CFDB FFE3          	movff	plusw2,plusw1
   447   007C8A  06E8               	decf	wreg,f,c
   448   007C8C  E2FC               	bc	u121
   449   007C8E                     
   450                           ;main.c: 93: PORTC = tableauDe[chiffre];
   451   007C8E  90D8               	bcf	status,0,c
   452   007C90  0100               	movlb	0	; force () banked
   453   007C92  3560               	rlcf	afficheDe@chiffre& (0+255),w,b
   454   007C94  6ED9               	movwf	fsr2l,c
   455   007C96  3561               	rlcf	(afficheDe@chiffre+1)& (0+255),w,b
   456   007C98  6EDA               	movwf	fsr2h,c
   457   007C9A  0E64               	movlw	low afficheDe@tableauDe
   458   007C9C  26D9               	addwf	fsr2l,f,c
   459   007C9E  0E00               	movlw	high afficheDe@tableauDe
   460   007CA0  22DA               	addwfc	fsr2h,f,c
   461   007CA2  50DF               	movf	indf2,w,c
   462   007CA4  6E82               	movwf	130,c	;volatile
   463   007CA6                     
   464                           ; BSR set to: 0
   465                           ;main.c: 94: PORTDbits.RD0 = deGouD;
   466   007CA6  0100               	movlb	0	; force () banked
   467   007CA8  B162               	btfsc	afficheDe@deGouD& (0+255),0,b
   468   007CAA  D002               	bra	u135
   469   007CAC  9083               	bcf	131,0,c	;volatile
   470   007CAE  D001               	bra	u136
   471   007CB0                     u135:
   472   007CB0  8083               	bsf	131,0,c	;volatile
   473   007CB2                     u136:
   474   007CB2  0012               	return		;funcret
   475   007CB4                     __end_of_afficheDe:
   476                           	callstack 0
   477   000000                     
   478                           	psect	param0
   479   000000                     
   480                           	psect	idloc
   481                           
   482                           ;Config register IDLOC0 @ 0x200000
   483                           ;	unspecified, using default values
   484   200000                     	org	2097152
   485   200000  FF                 	db	255
   486                           
   487                           ;Config register IDLOC1 @ 0x200001
   488                           ;	unspecified, using default values
   489   200001                     	org	2097153
   490   200001  FF                 	db	255
   491                           
   492                           ;Config register IDLOC2 @ 0x200002
   493                           ;	unspecified, using default values
   494   200002                     	org	2097154
   495   200002  FF                 	db	255
   496                           
   497                           ;Config register IDLOC3 @ 0x200003
   498                           ;	unspecified, using default values
   499   200003                     	org	2097155
   500   200003  FF                 	db	255
   501                           
   502                           ;Config register IDLOC4 @ 0x200004
   503                           ;	unspecified, using default values
   504   200004                     	org	2097156
   505   200004  FF                 	db	255
   506                           
   507                           ;Config register IDLOC5 @ 0x200005
   508                           ;	unspecified, using default values
   509   200005                     	org	2097157
   510   200005  FF                 	db	255
   511                           
   512                           ;Config register IDLOC6 @ 0x200006
   513                           ;	unspecified, using default values
   514   200006                     	org	2097158
   515   200006  FF                 	db	255
   516                           
   517                           ;Config register IDLOC7 @ 0x200007
   518                           ;	unspecified, using default values
   519   200007                     	org	2097159
   520   200007  FF                 	db	255
   521                           
   522                           	psect	config
   523                           
   524                           ; Padding undefined space
   525   300000                     	org	3145728
   526   300000  FF                 	db	255
   527                           
   528                           ;Config register CONFIG1H @ 0x300001
   529                           ;	Oscillator Selection bits
   530                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   531                           ;	Fail-Safe Clock Monitor Enable bit
   532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   533                           ;	Internal/External Oscillator Switchover bit
   534                           ;	IESO = OFF, Oscillator Switchover mode disabled
   535   300001                     	org	3145729
   536   300001  08                 	db	8
   537                           
   538                           ;Config register CONFIG2L @ 0x300002
   539                           ;	Power-up Timer Enable bit
   540                           ;	PWRTEN = OFF, PWRT disabled
   541                           ;	Brown-out Reset Enable bits
   542                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   543                           ;	Brown Out Reset Voltage bits
   544                           ;	BORV = 18, VBOR set to 1.8 V nominal
   545   300002                     	org	3145730
   546   300002  1F                 	db	31
   547                           
   548                           ;Config register CONFIG2H @ 0x300003
   549                           ;	Watchdog Timer Enable bit
   550                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   551                           ;	Watchdog Timer Postscale Select bits
   552                           ;	WDTPS = 32768, 1:32768
   553   300003                     	org	3145731
   554   300003  1E                 	db	30
   555                           
   556                           ; Padding undefined space
   557   300004                     	org	3145732
   558   300004  FF                 	db	255
   559                           
   560                           ;Config register CONFIG3H @ 0x300005
   561                           ;	CCP2 MUX bit
   562                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   563                           ;	PORTB A/D Enable bit
   564                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   565                           ;	Low-Power Timer1 Oscillator Enable bit
   566                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   567                           ;	HFINTOSC Fast Start-up
   568                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   569                           ;	MCLR Pin Enable bit
   570                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   571   300005                     	org	3145733
   572   300005  8B                 	db	139
   573                           
   574                           ;Config register CONFIG4L @ 0x300006
   575                           ;	Stack Full/Underflow Reset Enable bit
   576                           ;	STVREN = ON, Stack full/underflow will cause Reset
   577                           ;	Single-Supply ICSP Enable bit
   578                           ;	LVP = OFF, Single-Supply ICSP disabled
   579                           ;	Extended Instruction Set Enable bit
   580                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   581                           ;	Background Debugger Enable bit
   582                           ;	DEBUG = 0x1, unprogrammed default
   583   300006                     	org	3145734
   584   300006  81                 	db	129
   585                           
   586                           ; Padding undefined space
   587   300007                     	org	3145735
   588   300007  FF                 	db	255
   589                           
   590                           ;Config register CONFIG5L @ 0x300008
   591                           ;	Code Protection Block 0
   592                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   593                           ;	Code Protection Block 1
   594                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   595                           ;	Code Protection Block 2
   596                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   597                           ;	Code Protection Block 3
   598                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   599   300008                     	org	3145736
   600   300008  0F                 	db	15
   601                           
   602                           ;Config register CONFIG5H @ 0x300009
   603                           ;	Boot Block Code Protection bit
   604                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   605                           ;	Data EEPROM Code Protection bit
   606                           ;	CPD = OFF, Data EEPROM not code-protected
   607   300009                     	org	3145737
   608   300009  C0                 	db	192
   609                           
   610                           ;Config register CONFIG6L @ 0x30000A
   611                           ;	Write Protection Block 0
   612                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   613                           ;	Write Protection Block 1
   614                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   615                           ;	Write Protection Block 2
   616                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   617                           ;	Write Protection Block 3
   618                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   619   30000A                     	org	3145738
   620   30000A  0F                 	db	15
   621                           
   622                           ;Config register CONFIG6H @ 0x30000B
   623                           ;	Configuration Register Write Protection bit
   624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   625                           ;	Boot Block Write Protection bit
   626                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   627                           ;	Data EEPROM Write Protection bit
   628                           ;	WRTD = OFF, Data EEPROM not write-protected
   629   30000B                     	org	3145739
   630   30000B  E0                 	db	224
   631                           
   632                           ;Config register CONFIG7L @ 0x30000C
   633                           ;	Table Read Protection Block 0
   634                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   635                           ;	Table Read Protection Block 1
   636                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   637                           ;	Table Read Protection Block 2
   638                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   639                           ;	Table Read Protection Block 3
   640                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   641   30000C                     	org	3145740
   642   30000C  0F                 	db	15
   643                           
   644                           ;Config register CONFIG7H @ 0x30000D
   645                           ;	Boot Block Table Read Protection bit
   646                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   647   30000D                     	org	3145741
   648   30000D  40                 	db	64
   649                           tosu	equ	0xFFF
   650                           tosh	equ	0xFFE
   651                           tosl	equ	0xFFD
   652                           stkptr	equ	0xFFC
   653                           pclatu	equ	0xFFB
   654                           pclath	equ	0xFFA
   655                           pcl	equ	0xFF9
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           prodh	equ	0xFF4
   661                           prodl	equ	0xFF3
   662                           indf0	equ	0xFEF
   663                           postinc0	equ	0xFEE
   664                           postdec0	equ	0xFED
   665                           preinc0	equ	0xFEC
   666                           plusw0	equ	0xFEB
   667                           fsr0h	equ	0xFEA
   668                           fsr0l	equ	0xFE9
   669                           wreg	equ	0xFE8
   670                           indf1	equ	0xFE7
   671                           postinc1	equ	0xFE6
   672                           postdec1	equ	0xFE5
   673                           preinc1	equ	0xFE4
   674                           plusw1	equ	0xFE3
   675                           fsr1h	equ	0xFE2
   676                           fsr1l	equ	0xFE1
   677                           bsr	equ	0xFE0
   678                           indf2	equ	0xFDF
   679                           postinc2	equ	0xFDE
   680                           postdec2	equ	0xFDD
   681                           preinc2	equ	0xFDC
   682                           plusw2	equ	0xFDB
   683                           fsr2h	equ	0xFDA
   684                           fsr2l	equ	0xFD9
   685                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     21      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_afficheDe

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     510
                                             16 BANK0      5     5      0
                          _afficheDe
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _afficheDe                                           16    12      4     372
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheDe
   _initialisation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     15      21       4       20.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRll         1E      0       0      26        0.0%
BITBIGSFR_1hh       1B      0       0      19        0.0%
BITBIGSFRlhh         F      0       0      24        0.0%
BITBIGSFR_5          D      0       0      15        0.0%
BITBIGSFR_1llh       C      0       0      21        0.0%
BITBIGSFR_1hl        7      0       0      20        0.0%
BITBIGSFRh           6      0       0      23        0.0%
BITBIGSFR_2          6      0       0      18        0.0%
BITBIGSFR_4          3      0       0      16        0.0%
BITBIGSFR_3          3      0       0      17        0.0%
BITBIGSFRlhl         2      0       0      25        0.0%
BITBIGSFR_1lll       1      0       0      22        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      27        0.0%
DATA                 0      0      21      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 17 14:09:59 2023

                     l40 7CB2                       l35 7C54                      l961 7C8E  
                    l963 7CA6                      l875 7C42                      l971 7CCC  
                    l877 7C4E                      l981 7D1E                      l973 7CD6  
                    l965 7CB4                      l959 7C7C                      l991 7D6E  
                    l983 7D24                      l967 7CB8                      l993 7D84  
                    l985 7D42                      l977 7CF8                      l969 7CC2  
                    l995 7D94                      l987 7D4C                      l979 7D0E  
                    l997 7D9A                      u121 7C86                      u140 7CF4  
                    u141 7CF0                      u150 7D42                      u135 7CB0  
                    u151 7D3E                      u136 7CB2                      u160 7D6A  
                    u161 7D66                      u170 7DB8                      u171 7DB4  
                    u187 7D16                      u197 7D8C                      wreg 0FE8  
                   _RCIF 7CF5         ??_initialisation 0060                     _main 7CB4  
                   fsr2h 0FDA                     indf2 0FDF                     fsr1l 0FE1  
                   fsr2l 0FD9                     start 0000             ___param_bank 0000  
                  ?_main 0060                    _ANSEL 0F7E                    _RCREG 0FAE  
                  _SPBRG 0FAF                    _PORTC 0F82                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
                  _TXREG 0FAD                    main@i 0071                    main@j 0073  
                  tablat 0FF5                    plusw1 0FE3                    plusw2 0FDB  
                  status 0FD8          __initialization 7C56             __end_of_main 7DC0  
                 ??_main 0070            __activetblptr 0003                   _ANSELH 0F7F  
                 _SPBRGH 0FB0                   isa$std 0001                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8               __accesstop 0060  
__end_of__initialization 7C76            ___rparam_used 0000             __pidataBANK0 7C36  
      __end_of_afficheDe 7CB4                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7C56                  __ramtop 0600                  __ptext0 7CB4  
                __ptext1 7C42                  __ptext2 7C7C     end_of_initialization 7C76  
              _RCSTAbits 0FAB         afficheDe@chiffre 0060                  postdec1 0FE5  
                postinc0 0FEE                _PORTDbits 0F83                _TRISCbits 0F94  
              _TXSTAbits 0FAC              _BAUDCONbits 0FB8      start_initialization 7C56  
            __pdataBANK0 0075            __pcstackBANK0 0060                _afficheDe 7C7C  
         _initialisation 7C42               ?_afficheDe 0060   __end_of_initialisation 7C56  
        afficheDe@deGouD 0062                copy_data0 7C6A                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060              ??_afficheDe 0064  
         afficheDe@F2589 0075                 isa$xinst 0000       afficheDe@tableauDe 0064  
