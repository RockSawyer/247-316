

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 12:14:53 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 21/07/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataBANK0
    53   007E64                     __pidataBANK0:
    54                           	callstack 0
    55                           
    56                           ;initializer for afficheDe@F2589
    57   007E64  0007               	dw	7
    58   007E66  000B               	dw	11
    59   007E68  0003               	dw	3
    60   007E6A  000A               	dw	10
    61   007E6C  0002               	dw	2
    62   007E6E  0008               	dw	8
    63   000000                     _RCREG	set	4014
    64   000000                     _TXREG	set	4013
    65   000000                     _TRISCbits	set	3988
    66   000000                     _PORTD	set	3971
    67   000000                     _ANSEL	set	3966
    68   000000                     _ANSELH	set	3967
    69   000000                     _PORTDbits	set	3971
    70   000000                     _TRISB	set	3987
    71   000000                     _TRISC	set	3988
    72   000000                     _TRISD	set	3989
    73   000000                     _RCSTAbits	set	4011
    74   000000                     _TXSTAbits	set	4012
    75   000000                     _SPBRG	set	4015
    76   000000                     _SPBRGH	set	4016
    77   000000                     _RCIF	set	31989
    78   000000                     _PORTC	set	3970
    79   000000                     _BAUDCONbits	set	4024
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84   007E84                     __pcinit:
    85                           	callstack 0
    86   007E84                     start_initialization:
    87                           	callstack 0
    88   007E84                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Initialize objects allocated to BANK0 (12 bytes)
    92                           ; load TBLPTR registers with __pidataBANK0
    93   007E84  0E64               	movlw	low __pidataBANK0
    94   007E86  6EF6               	movwf	tblptrl,c
    95   007E88  0E7E               	movlw	high __pidataBANK0
    96   007E8A  6EF7               	movwf	tblptrh,c
    97   007E8C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
    98   007E8E  6EF8               	movwf	tblptru,c
    99   007E90  EE00  F075         	lfsr	0,__pdataBANK0
   100   007E94  EE10 F00C          	lfsr	1,12
   101   007E98                     copy_data0:
   102   007E98  0009               	tblrd		*+
   103   007E9A  CFF5 FFEE          	movff	tablat,postinc0
   104   007E9E  50E5               	movf	postdec1,w,c
   105   007EA0  50E1               	movf	fsr1l,w,c
   106   007EA2  E1FA               	bnz	copy_data0
   107   007EA4                     end_of_initialization:
   108                           	callstack 0
   109   007EA4                     __end_of__initialization:
   110                           	callstack 0
   111   007EA4  0100               	movlb	0
   112   007EA6  EF71  F03F         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	dataBANK0
   115   000075                     __pdataBANK0:
   116                           	callstack 0
   117   000075                     afficheDe@F2589:
   118                           	callstack 0
   119   000075                     	ds	12
   120                           
   121                           	psect	cstackBANK0
   122   000060                     __pcstackBANK0:
   123                           	callstack 0
   124   000060                     afficheDe@chiffre:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128   000060                     	ds	2
   129   000062                     afficheDe@deGouD:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133   000062                     	ds	2
   134   000064                     afficheDe@tableauDe:
   135                           	callstack 0
   136                           
   137                           ; 12 bytes @ 0x4
   138   000064                     	ds	12
   139   000070                     ??_main:
   140                           
   141                           ; 1 bytes @ 0x10
   142   000070                     	ds	1
   143   000071                     main@i:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x11
   147   000071                     	ds	2
   148   000073                     main@j:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x13
   152   000073                     	ds	2
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 26 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;  j               2   19[BANK0 ] int 
   164 ;;  i               2   17[BANK0 ] int 
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   174 ;;      Params:         0       0       0       0       0       0       0
   175 ;;      Locals:         0       4       0       0       0       0       0
   176 ;;      Temps:          0       1       0       0       0       0       0
   177 ;;      Totals:         0       5       0       0       0       0       0
   178 ;;Total ram usage:        5 bytes
   179 ;; Hardware stack levels required when called: 1
   180 ;; This function calls:
   181 ;;		_afficheDe
   182 ;;		_initialisation
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189   007EE2                     __ptext0:
   190                           	callstack 0
   191   007EE2                     _main:
   192                           	callstack 30
   193   007EE2                     
   194                           ;main.c: 28: initialisation();
   195   007EE2  EC38  F03F         	call	_initialisation	;wreg free
   196   007EE6                     l967:
   197                           
   198                           ;main.c: 36: {;main.c: 38: int i = 0;
   199   007EE6  0E00               	movlw	0
   200   007EE8  0100               	movlb	0	; force () banked
   201   007EEA  6F72               	movwf	(main@i+1)& (0+255),b
   202   007EEC  0E00               	movlw	0
   203   007EEE  6F71               	movwf	main@i& (0+255),b
   204   007EF0                     
   205                           ; BSR set to: 0
   206                           ;main.c: 39: int j = 0;
   207   007EF0  0E00               	movlw	0
   208   007EF2  0100               	movlb	0	; force () banked
   209   007EF4  6F74               	movwf	(main@j+1)& (0+255),b
   210   007EF6  0E00               	movlw	0
   211   007EF8  6F73               	movwf	main@j& (0+255),b
   212   007EFA                     
   213                           ; BSR set to: 0
   214                           ;main.c: 40: for(i=0; i<6 ;i++)
   215   007EFA  0E00               	movlw	0
   216   007EFC  0100               	movlb	0	; force () banked
   217   007EFE  6F72               	movwf	(main@i+1)& (0+255),b
   218   007F00  0E00               	movlw	0
   219   007F02  6F71               	movwf	main@i& (0+255),b
   220   007F04                     
   221                           ; BSR set to: 0
   222   007F04  0100               	movlb	0	; force () banked
   223   007F06  BF72               	btfsc	(main@i+1)& (0+255),7,b
   224   007F08  EF8F  F03F         	goto	u161
   225   007F0C  5172               	movf	(main@i+1)& (0+255),w,b
   226   007F0E  E109               	bnz	u160
   227   007F10  0E06               	movlw	6
   228   007F12  5D71               	subwf	main@i& (0+255),w,b
   229   007F14  A0D8               	btfss	status,0,c
   230   007F16  EF8F  F03F         	goto	u161
   231   007F1A  EF91  F03F         	goto	u160
   232   007F1E                     u161:
   233   007F1E  EF93  F03F         	goto	l977
   234   007F22                     u160:
   235   007F22  EFB8  F03F         	goto	l985
   236   007F26                     l977:
   237                           
   238                           ; BSR set to: 0
   239                           ;main.c: 41: {;main.c: 43: afficheDe(i, 1);
   240   007F26  C071  F060         	movff	main@i,afficheDe@chiffre
   241   007F2A  C072  F061         	movff	main@i+1,afficheDe@chiffre+1
   242   007F2E  0E00               	movlw	0
   243   007F30  0100               	movlb	0	; force () banked
   244   007F32  6F63               	movwf	(afficheDe@deGouD+1)& (0+255),b
   245   007F34  0E01               	movlw	1
   246   007F36  6F62               	movwf	afficheDe@deGouD& (0+255),b
   247   007F38  EC55  F03F         	call	_afficheDe	;wreg free
   248   007F3C                     
   249                           ;main.c: 44: _delay((unsigned long)((500)*(1000000/4000.0)));
   250   007F3C  0EA3               	movlw	163
   251   007F3E  0100               	movlb	0	; force () banked
   252   007F40  6F70               	movwf	??_main& (0+255),b
   253   007F42  0E55               	movlw	85
   254   007F44                     u227:
   255   007F44  2EE8               	decfsz	wreg,f,c
   256   007F46  D7FE               	bra	u227
   257   007F48  2F70               	decfsz	??_main& (0+255),f,b
   258   007F4A  D7FC               	bra	u227
   259   007F4C  0100               	movlb	0	; force () banked
   260   007F4E  4B71               	infsnz	main@i& (0+255),f,b
   261   007F50  2B72               	incf	(main@i+1)& (0+255),f,b
   262   007F52                     
   263                           ; BSR set to: 0
   264   007F52  0100               	movlb	0	; force () banked
   265   007F54  BF72               	btfsc	(main@i+1)& (0+255),7,b
   266   007F56  EFB6  F03F         	goto	u171
   267   007F5A  5172               	movf	(main@i+1)& (0+255),w,b
   268   007F5C  E109               	bnz	u170
   269   007F5E  0E06               	movlw	6
   270   007F60  5D71               	subwf	main@i& (0+255),w,b
   271   007F62  A0D8               	btfss	status,0,c
   272   007F64  EFB6  F03F         	goto	u171
   273   007F68  EFB8  F03F         	goto	u170
   274   007F6C                     u171:
   275   007F6C  EF93  F03F         	goto	l977
   276   007F70                     u170:
   277   007F70                     l985:
   278                           
   279                           ; BSR set to: 0
   280                           ;main.c: 46: };main.c: 47: for(j=0; j<6; j++)
   281   007F70  0E00               	movlw	0
   282   007F72  0100               	movlb	0	; force () banked
   283   007F74  6F74               	movwf	(main@j+1)& (0+255),b
   284   007F76  0E00               	movlw	0
   285   007F78  6F73               	movwf	main@j& (0+255),b
   286   007F7A                     
   287                           ; BSR set to: 0
   288   007F7A  0100               	movlb	0	; force () banked
   289   007F7C  BF74               	btfsc	(main@j+1)& (0+255),7,b
   290   007F7E  EFCA  F03F         	goto	u181
   291   007F82  5174               	movf	(main@j+1)& (0+255),w,b
   292   007F84  E109               	bnz	u180
   293   007F86  0E06               	movlw	6
   294   007F88  5D73               	subwf	main@j& (0+255),w,b
   295   007F8A  A0D8               	btfss	status,0,c
   296   007F8C  EFCA  F03F         	goto	u181
   297   007F90  EFCC  F03F         	goto	u180
   298   007F94                     u181:
   299   007F94  EFCE  F03F         	goto	l991
   300   007F98                     u180:
   301   007F98  EFF3  F03F         	goto	l29
   302   007F9C                     l991:
   303                           
   304                           ; BSR set to: 0
   305                           ;main.c: 48: {;main.c: 49: afficheDe(j, 0);
   306   007F9C  C073  F060         	movff	main@j,afficheDe@chiffre
   307   007FA0  C074  F061         	movff	main@j+1,afficheDe@chiffre+1
   308   007FA4  0E00               	movlw	0
   309   007FA6  0100               	movlb	0	; force () banked
   310   007FA8  6F63               	movwf	(afficheDe@deGouD+1)& (0+255),b
   311   007FAA  0E00               	movlw	0
   312   007FAC  6F62               	movwf	afficheDe@deGouD& (0+255),b
   313   007FAE  EC55  F03F         	call	_afficheDe	;wreg free
   314   007FB2                     
   315                           ;main.c: 50: _delay((unsigned long)((500)*(1000000/4000.0)));
   316   007FB2  0EA3               	movlw	163
   317   007FB4  0100               	movlb	0	; force () banked
   318   007FB6  6F70               	movwf	??_main& (0+255),b
   319   007FB8  0E55               	movlw	85
   320   007FBA                     u237:
   321   007FBA  2EE8               	decfsz	wreg,f,c
   322   007FBC  D7FE               	bra	u237
   323   007FBE  2F70               	decfsz	??_main& (0+255),f,b
   324   007FC0  D7FC               	bra	u237
   325   007FC2  0100               	movlb	0	; force () banked
   326   007FC4  4B73               	infsnz	main@j& (0+255),f,b
   327   007FC6  2B74               	incf	(main@j+1)& (0+255),f,b
   328   007FC8                     
   329                           ; BSR set to: 0
   330   007FC8  0100               	movlb	0	; force () banked
   331   007FCA  BF74               	btfsc	(main@j+1)& (0+255),7,b
   332   007FCC  EFF1  F03F         	goto	u191
   333   007FD0  5174               	movf	(main@j+1)& (0+255),w,b
   334   007FD2  E109               	bnz	u190
   335   007FD4  0E06               	movlw	6
   336   007FD6  5D73               	subwf	main@j& (0+255),w,b
   337   007FD8  A0D8               	btfss	status,0,c
   338   007FDA  EFF1  F03F         	goto	u191
   339   007FDE  EFF3  F03F         	goto	u190
   340   007FE2                     u191:
   341   007FE2  EFCE  F03F         	goto	l991
   342   007FE6                     u190:
   343   007FE6                     l29:
   344                           
   345                           ; BSR set to: 0
   346                           ;main.c: 51: };main.c: 54: PORTDbits.RD7 = PORTDbits.RD7 ^ 1;
   347   007FE6  AE83               	btfss	131,7,c	;volatile
   348   007FE8  EFF8  F03F         	goto	u201
   349   007FEC  EFFB  F03F         	goto	u200
   350   007FF0                     u201:
   351   007FF0  8E83               	bsf	131,7,c	;volatile
   352   007FF2  EFFC  F03F         	goto	u215
   353   007FF6                     u200:
   354   007FF6  9E83               	bcf	131,7,c	;volatile
   355   007FF8                     u215:
   356   007FF8  EF73  F03F         	goto	l967
   357   007FFC  EF00  F000         	goto	start
   358   008000                     __end_of_main:
   359                           	callstack 0
   360                           
   361 ;; *************** function _initialisation *****************
   362 ;; Defined at:
   363 ;;		line 67 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   377 ;;      Params:         0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text1
   391   007E70                     __ptext1:
   392                           	callstack 0
   393   007E70                     _initialisation:
   394                           	callstack 30
   395   007E70                     
   396                           ;main.c: 69: TRISD = 0;
   397   007E70  0E00               	movlw	0
   398   007E72  6E95               	movwf	149,c	;volatile
   399                           
   400                           ;main.c: 70: TRISC = 0;
   401   007E74  0E00               	movlw	0
   402   007E76  6E94               	movwf	148,c	;volatile
   403                           
   404                           ;main.c: 73: ANSELH = 0;
   405   007E78  0E00               	movlw	0
   406   007E7A  6E7F               	movwf	127,c	;volatile
   407   007E7C                     
   408                           ;main.c: 74: TRISB = 0xFF;
   409   007E7C  6893               	setf	147,c	;volatile
   410                           
   411                           ;main.c: 76: PORTD = 0;
   412   007E7E  0E00               	movlw	0
   413   007E80  6E83               	movwf	131,c	;volatile
   414   007E82  0012               	return		;funcret
   415   007E84                     __end_of_initialisation:
   416                           	callstack 0
   417                           
   418 ;; *************** function _afficheDe *****************
   419 ;; Defined at:
   420 ;;		line 85 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  chiffre         2    0[BANK0 ] int 
   423 ;;  deGouD          2    2[BANK0 ] int 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  tableauDe      12    4[BANK0 ] int [6]
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   435 ;;      Params:         0       4       0       0       0       0       0
   436 ;;      Locals:         0      12       0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0
   438 ;;      Totals:         0      16       0       0       0       0       0
   439 ;;Total ram usage:       16 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text2
   449   007EAA                     __ptext2:
   450                           	callstack 0
   451   007EAA                     _afficheDe:
   452                           	callstack 30
   453   007EAA                     
   454                           ;main.c: 87: int tableauDe[6] = {7,11,3,10,2,8};
   455   007EAA  EE20  F075         	lfsr	2,afficheDe@F2589
   456   007EAE  EE10  F064         	lfsr	1,afficheDe@tableauDe
   457   007EB2  0E0B               	movlw	11
   458   007EB4                     u141:
   459   007EB4  CFDB FFE3          	movff	plusw2,plusw1
   460   007EB8  06E8               	decf	wreg,f,c
   461   007EBA  E2FC               	bc	u141
   462   007EBC                     
   463                           ;main.c: 89: PORTC = tableauDe[chiffre];
   464   007EBC  90D8               	bcf	status,0,c
   465   007EBE  0100               	movlb	0	; force () banked
   466   007EC0  3560               	rlcf	afficheDe@chiffre& (0+255),w,b
   467   007EC2  6ED9               	movwf	fsr2l,c
   468   007EC4  3561               	rlcf	(afficheDe@chiffre+1)& (0+255),w,b
   469   007EC6  6EDA               	movwf	fsr2h,c
   470   007EC8  0E64               	movlw	low afficheDe@tableauDe
   471   007ECA  26D9               	addwf	fsr2l,f,c
   472   007ECC  0E00               	movlw	high afficheDe@tableauDe
   473   007ECE  22DA               	addwfc	fsr2h,f,c
   474   007ED0  50DF               	movf	indf2,w,c
   475   007ED2  6E82               	movwf	130,c	;volatile
   476   007ED4                     
   477                           ; BSR set to: 0
   478                           ;main.c: 90: PORTDbits.RD0 = deGouD;
   479   007ED4  0100               	movlb	0	; force () banked
   480   007ED6  B162               	btfsc	afficheDe@deGouD& (0+255),0,b
   481   007ED8  D002               	bra	u155
   482   007EDA  9083               	bcf	131,0,c	;volatile
   483   007EDC  D001               	bra	u156
   484   007EDE                     u155:
   485   007EDE  8083               	bsf	131,0,c	;volatile
   486   007EE0                     u156:
   487   007EE0  0012               	return		;funcret
   488   007EE2                     __end_of_afficheDe:
   489                           	callstack 0
   490   000000                     
   491                           	psect	param0
   492   000000                     
   493                           	psect	idloc
   494                           
   495                           ;Config register IDLOC0 @ 0x200000
   496                           ;	unspecified, using default values
   497   200000                     	org	2097152
   498   200000  FF                 	db	255
   499                           
   500                           ;Config register IDLOC1 @ 0x200001
   501                           ;	unspecified, using default values
   502   200001                     	org	2097153
   503   200001  FF                 	db	255
   504                           
   505                           ;Config register IDLOC2 @ 0x200002
   506                           ;	unspecified, using default values
   507   200002                     	org	2097154
   508   200002  FF                 	db	255
   509                           
   510                           ;Config register IDLOC3 @ 0x200003
   511                           ;	unspecified, using default values
   512   200003                     	org	2097155
   513   200003  FF                 	db	255
   514                           
   515                           ;Config register IDLOC4 @ 0x200004
   516                           ;	unspecified, using default values
   517   200004                     	org	2097156
   518   200004  FF                 	db	255
   519                           
   520                           ;Config register IDLOC5 @ 0x200005
   521                           ;	unspecified, using default values
   522   200005                     	org	2097157
   523   200005  FF                 	db	255
   524                           
   525                           ;Config register IDLOC6 @ 0x200006
   526                           ;	unspecified, using default values
   527   200006                     	org	2097158
   528   200006  FF                 	db	255
   529                           
   530                           ;Config register IDLOC7 @ 0x200007
   531                           ;	unspecified, using default values
   532   200007                     	org	2097159
   533   200007  FF                 	db	255
   534                           
   535                           	psect	config
   536                           
   537                           ; Padding undefined space
   538   300000                     	org	3145728
   539   300000  FF                 	db	255
   540                           
   541                           ;Config register CONFIG1H @ 0x300001
   542                           ;	Oscillator Selection bits
   543                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   544                           ;	Fail-Safe Clock Monitor Enable bit
   545                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   546                           ;	Internal/External Oscillator Switchover bit
   547                           ;	IESO = OFF, Oscillator Switchover mode disabled
   548   300001                     	org	3145729
   549   300001  08                 	db	8
   550                           
   551                           ;Config register CONFIG2L @ 0x300002
   552                           ;	Power-up Timer Enable bit
   553                           ;	PWRTEN = OFF, PWRT disabled
   554                           ;	Brown-out Reset Enable bits
   555                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   556                           ;	Brown Out Reset Voltage bits
   557                           ;	BORV = 18, VBOR set to 1.8 V nominal
   558   300002                     	org	3145730
   559   300002  1F                 	db	31
   560                           
   561                           ;Config register CONFIG2H @ 0x300003
   562                           ;	Watchdog Timer Enable bit
   563                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   564                           ;	Watchdog Timer Postscale Select bits
   565                           ;	WDTPS = 32768, 1:32768
   566   300003                     	org	3145731
   567   300003  1E                 	db	30
   568                           
   569                           ; Padding undefined space
   570   300004                     	org	3145732
   571   300004  FF                 	db	255
   572                           
   573                           ;Config register CONFIG3H @ 0x300005
   574                           ;	CCP2 MUX bit
   575                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   576                           ;	PORTB A/D Enable bit
   577                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   578                           ;	Low-Power Timer1 Oscillator Enable bit
   579                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   580                           ;	HFINTOSC Fast Start-up
   581                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   582                           ;	MCLR Pin Enable bit
   583                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   584   300005                     	org	3145733
   585   300005  8B                 	db	139
   586                           
   587                           ;Config register CONFIG4L @ 0x300006
   588                           ;	Stack Full/Underflow Reset Enable bit
   589                           ;	STVREN = ON, Stack full/underflow will cause Reset
   590                           ;	Single-Supply ICSP Enable bit
   591                           ;	LVP = OFF, Single-Supply ICSP disabled
   592                           ;	Extended Instruction Set Enable bit
   593                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   594                           ;	Background Debugger Enable bit
   595                           ;	DEBUG = 0x1, unprogrammed default
   596   300006                     	org	3145734
   597   300006  81                 	db	129
   598                           
   599                           ; Padding undefined space
   600   300007                     	org	3145735
   601   300007  FF                 	db	255
   602                           
   603                           ;Config register CONFIG5L @ 0x300008
   604                           ;	Code Protection Block 0
   605                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   606                           ;	Code Protection Block 1
   607                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   608                           ;	Code Protection Block 2
   609                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   610                           ;	Code Protection Block 3
   611                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   612   300008                     	org	3145736
   613   300008  0F                 	db	15
   614                           
   615                           ;Config register CONFIG5H @ 0x300009
   616                           ;	Boot Block Code Protection bit
   617                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   618                           ;	Data EEPROM Code Protection bit
   619                           ;	CPD = OFF, Data EEPROM not code-protected
   620   300009                     	org	3145737
   621   300009  C0                 	db	192
   622                           
   623                           ;Config register CONFIG6L @ 0x30000A
   624                           ;	Write Protection Block 0
   625                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   626                           ;	Write Protection Block 1
   627                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   628                           ;	Write Protection Block 2
   629                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   630                           ;	Write Protection Block 3
   631                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   632   30000A                     	org	3145738
   633   30000A  0F                 	db	15
   634                           
   635                           ;Config register CONFIG6H @ 0x30000B
   636                           ;	Configuration Register Write Protection bit
   637                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   638                           ;	Boot Block Write Protection bit
   639                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   640                           ;	Data EEPROM Write Protection bit
   641                           ;	WRTD = OFF, Data EEPROM not write-protected
   642   30000B                     	org	3145739
   643   30000B  E0                 	db	224
   644                           
   645                           ;Config register CONFIG7L @ 0x30000C
   646                           ;	Table Read Protection Block 0
   647                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   648                           ;	Table Read Protection Block 1
   649                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   650                           ;	Table Read Protection Block 2
   651                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   652                           ;	Table Read Protection Block 3
   653                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   654   30000C                     	org	3145740
   655   30000C  0F                 	db	15
   656                           
   657                           ;Config register CONFIG7H @ 0x30000D
   658                           ;	Boot Block Table Read Protection bit
   659                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   660   30000D                     	org	3145741
   661   30000D  40                 	db	64
   662                           tosu	equ	0xFFF
   663                           tosh	equ	0xFFE
   664                           tosl	equ	0xFFD
   665                           stkptr	equ	0xFFC
   666                           pclatu	equ	0xFFB
   667                           pclath	equ	0xFFA
   668                           pcl	equ	0xFF9
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           prodh	equ	0xFF4
   674                           prodl	equ	0xFF3
   675                           indf0	equ	0xFEF
   676                           postinc0	equ	0xFEE
   677                           postdec0	equ	0xFED
   678                           preinc0	equ	0xFEC
   679                           plusw0	equ	0xFEB
   680                           fsr0h	equ	0xFEA
   681                           fsr0l	equ	0xFE9
   682                           wreg	equ	0xFE8
   683                           indf1	equ	0xFE7
   684                           postinc1	equ	0xFE6
   685                           postdec1	equ	0xFE5
   686                           preinc1	equ	0xFE4
   687                           plusw1	equ	0xFE3
   688                           fsr1h	equ	0xFE2
   689                           fsr1l	equ	0xFE1
   690                           bsr	equ	0xFE0
   691                           indf2	equ	0xFDF
   692                           postinc2	equ	0xFDE
   693                           postdec2	equ	0xFDD
   694                           preinc2	equ	0xFDC
   695                           plusw2	equ	0xFDB
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     21      33
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_afficheDe

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     510
                                             16 BANK0      5     5      0
                          _afficheDe
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _afficheDe                                           16    12      4     372
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheDe
   _initialisation

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      21       5       20.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITBIGSFRhhhh       47      0       0      16        0.0%
BITBIGSFRll         1E      0       0      22        0.0%
BITBIGSFRhl          F      0       0      20        0.0%
BITBIGSFRhhllh       C      0       0      18        0.0%
BITBIGSFRhhlll       8      0       0      19        0.0%
BITBIGSFRhhhl        7      0       0      17        0.0%
BITBIGSFRlh          2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      23        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 12:14:53 2023

                     l40 7EE0                       l35 7E82                       l29 7FE6  
                    l961 7EBC                      l963 7ED4                      l875 7E70  
                    l971 7EFA                      l877 7E7C                      l981 7F4C  
                    l973 7F04                      l965 7EE2                      l959 7EAA  
                    l991 7F9C                      l983 7F52                      l967 7EE6  
                    l993 7FB2                      l985 7F70                      l977 7F26  
                    l969 7EF0                      l995 7FC2                      l987 7F7A  
                    l979 7F3C                      l997 7FC8                      u200 7FF6  
                    u201 7FF0                      u141 7EB4                      u215 7FF8  
                    u160 7F22                      u161 7F1E                      u170 7F70  
                    u155 7EDE                      u171 7F6C                      u227 7F44  
                    u156 7EE0                      u180 7F98                      u237 7FBA  
                    u181 7F94                      u190 7FE6                      u191 7FE2  
                    wreg 0FE8                     _RCIF 7CF5         ??_initialisation 0060  
                   _main 7EE2                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ?_main 0060                    _ANSEL 0F7E  
                  _RCREG 0FAE                    _SPBRG 0FAF                    _PORTC 0F82  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISC 0F94  
                  _TRISD 0F95                    _TXREG 0FAD                    main@i 0071  
                  main@j 0073                    tablat 0FF5                    plusw1 0FE3  
                  plusw2 0FDB                    status 0FD8          __initialization 7E84  
           __end_of_main 8000                   ??_main 0070            __activetblptr 0003  
                 _ANSELH 0F7F                   _SPBRGH 0FB0                   isa$std 0001  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
             __accesstop 0060  __end_of__initialization 7EA4            ___rparam_used 0000  
           __pidataBANK0 7E64        __end_of_afficheDe 7EE2                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E84                  __ramtop 0600  
                __ptext0 7EE2                  __ptext1 7E70                  __ptext2 7EAA  
   end_of_initialization 7EA4                _RCSTAbits 0FAB         afficheDe@chiffre 0060  
                postdec1 0FE5                  postinc0 0FEE                _PORTDbits 0F83  
              _TRISCbits 0F94                _TXSTAbits 0FAC              _BAUDCONbits 0FB8  
    start_initialization 7E84              __pdataBANK0 0075            __pcstackBANK0 0060  
              _afficheDe 7EAA           _initialisation 7E70               ?_afficheDe 0060  
 __end_of_initialisation 7E84          afficheDe@deGouD 0062                copy_data0 7E98  
               __Hparam0 0000                 __Lparam0 0000          ?_initialisation 0060  
            ??_afficheDe 0064           afficheDe@F2589 0075                 isa$xinst 0000  
     afficheDe@tableauDe 0064  
